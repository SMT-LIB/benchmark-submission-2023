(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: transformed by StringFuzz, a modular string and regex fuzzer, from an industrial benchmark
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-const x String)
(declare-const y String)
(assert (= x "nnEE00BBnnYYkkddRRMMVVnn[[~~LLsshh''\\\\xx00bb''[[==TT//pp~~kk$$FFllZZ~~##BBhh__wwJJHH))ii""""""""MM^^UU??bbkk''' '' '''QQHH66llbb[[ooddxxqqxxyy[[!!\\\\\\\\DD''\\\\rr''II||''\\\\rr''ppnnII}}%%ZZaahhAA~~44UU""""""""RR''' '' '''MM>>nn!!::QQ??==IIDDjj''!!HHaa##YYooGGllDD||99pp44dd,,''uu{{VVCCTT``ppss__//::IIkkKK++((JJ[[LLDD..^^GG$$++ddnnSSAAUU{{II''\\\\xx00bb''OO[[qqKK\\\\\\\\~~4433"))
(assert (str.in_re x (re.* (str.to_re "JJ>>RR%%"))))
(check-sat)

(exit)
