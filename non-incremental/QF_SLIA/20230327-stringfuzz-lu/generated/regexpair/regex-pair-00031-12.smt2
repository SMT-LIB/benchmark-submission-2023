(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "000"))) (re.++ (re.* (re.+ (str.to_re "1"))) (re.++ (re.union (re.union (str.to_re "2") (str.to_re "33")) (re.* (str.to_re "44"))) (re.++ (re.* (re.union (str.to_re "555") (str.to_re "666"))) (re.++ (re.union (re.+ (str.to_re "77")) (re.union (str.to_re "888") (str.to_re "99"))) (re.++ (re.union (re.* (str.to_re "aa")) (re.* (str.to_re "bbb"))) (re.++ (re.union (re.* (str.to_re "c")) (re.+ (str.to_re "ddd"))) (re.++ (re.+ (re.union (str.to_re "eee") (str.to_re "ff"))) (re.++ (re.+ (re.union (str.to_re "g") (str.to_re "hh"))) (re.++ (re.* (re.union (str.to_re "iii") (str.to_re "jjj"))) (re.++ (re.* (re.+ (str.to_re "kk"))) (re.++ (re.* (re.union (str.to_re "l") (str.to_re "mmm"))) (re.++ (re.* (re.+ (str.to_re "n"))) (re.++ (re.* (re.* (str.to_re "oo"))) (re.++ (re.+ (re.* (str.to_re "p"))) (re.++ (re.+ (re.+ (str.to_re "qqq"))) (re.++ (re.+ (re.+ (str.to_re "rrr"))) (re.++ (re.union (re.union (str.to_re "sss") (str.to_re "t")) (re.+ (str.to_re "u"))) (re.++ (re.+ (re.union (str.to_re "vvv") (str.to_re "ww"))) (re.++ (re.* (re.+ (str.to_re "xxx"))) (re.++ (re.* (re.union (str.to_re "yyy") (str.to_re "zzz"))) (re.++ (re.* (re.+ (str.to_re "AAA"))) (re.++ (re.+ (re.union (str.to_re "BBB") (str.to_re "CCC"))) (re.++ (re.union (re.+ (str.to_re "DD")) (re.* (str.to_re "EEE"))) (re.++ (re.+ (re.union (str.to_re "F") (str.to_re "G"))) (re.++ (re.union (re.union (str.to_re "H") (str.to_re "I")) (re.+ (str.to_re "JJ"))) (re.++ (re.+ (re.union (str.to_re "KK") (str.to_re "L"))) (re.++ (re.+ (re.+ (str.to_re "MM"))) (re.++ (re.+ (re.union (str.to_re "NN") (str.to_re "O"))) (re.++ (re.union (re.* (str.to_re "P")) (re.union (str.to_re "QQ") (str.to_re "R"))) (re.* (re.* (str.to_re "SSS")))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "0") (str.to_re "111"))) (re.++ (re.+ (re.union (str.to_re "222") (str.to_re "3"))) (re.++ (re.+ (re.+ (str.to_re "4"))) (re.++ (re.union (re.* (str.to_re "5")) (re.+ (str.to_re "66"))) (re.++ (re.+ (re.+ (str.to_re "77"))) (re.++ (re.+ (re.+ (str.to_re "88"))) (re.++ (re.+ (re.+ (str.to_re "99"))) (re.++ (re.* (re.union (str.to_re "aa") (str.to_re "b"))) (re.++ (re.+ (re.+ (str.to_re "c"))) (re.++ (re.union (re.* (str.to_re "dd")) (re.+ (str.to_re "e"))) (re.++ (re.* (re.+ (str.to_re "f"))) (re.++ (re.* (re.* (str.to_re "g"))) (re.++ (re.+ (re.union (str.to_re "h") (str.to_re "i"))) (re.++ (re.* (re.* (str.to_re "jjj"))) (re.++ (re.union (re.+ (str.to_re "kkk")) (re.* (str.to_re "lll"))) (re.++ (re.union (re.union (str.to_re "mmm") (str.to_re "n")) (re.* (str.to_re "oo"))) (re.++ (re.union (re.union (str.to_re "pp") (str.to_re "qq")) (re.union (str.to_re "rrr") (str.to_re "sss"))) (re.++ (re.* (re.* (str.to_re "t"))) (re.++ (re.union (re.union (str.to_re "u") (str.to_re "vvv")) (re.union (str.to_re "ww") (str.to_re "xxx"))) (re.++ (re.+ (re.union (str.to_re "yyy") (str.to_re "z"))) (re.++ (re.* (re.union (str.to_re "AAA") (str.to_re "B"))) (re.++ (re.* (re.+ (str.to_re "C"))) (re.++ (re.union (re.union (str.to_re "DDD") (str.to_re "E")) (re.* (str.to_re "FFF"))) (re.++ (re.union (re.+ (str.to_re "GG")) (re.union (str.to_re "HH") (str.to_re "III"))) (re.++ (re.+ (re.union (str.to_re "JJ") (str.to_re "K"))) (re.++ (re.* (re.union (str.to_re "LLL") (str.to_re "M"))) (re.++ (re.+ (re.union (str.to_re "NNN") (str.to_re "O"))) (re.++ (re.+ (re.* (str.to_re "PP"))) (re.++ (re.union (re.+ (str.to_re "Q")) (re.* (str.to_re "RR"))) (re.++ (re.* (re.+ (str.to_re "S"))) (re.union (re.union (str.to_re "TT") (str.to_re "U")) (re.union (str.to_re "VV") (str.to_re "WW"))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
