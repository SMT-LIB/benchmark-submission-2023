(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "0")) (re.* (str.to_re "1"))) (re.++ (re.union (re.* (str.to_re "2")) (re.+ (str.to_re "3"))) (re.++ (re.union (re.+ (str.to_re "44")) (re.union (str.to_re "5") (str.to_re "6"))) (re.++ (re.union (re.union (str.to_re "777") (str.to_re "88")) (re.* (str.to_re "99"))) (re.++ (re.+ (re.+ (str.to_re "aaa"))) (re.++ (re.* (re.* (str.to_re "bb"))) (re.++ (re.union (re.* (str.to_re "c")) (re.union (str.to_re "dd") (str.to_re "eee"))) (re.++ (re.+ (re.* (str.to_re "fff"))) (re.++ (re.+ (re.* (str.to_re "ggg"))) (re.++ (re.union (re.* (str.to_re "hhh")) (re.union (str.to_re "i") (str.to_re "j"))) (re.++ (re.* (re.+ (str.to_re "kk"))) (re.++ (re.union (re.union (str.to_re "ll") (str.to_re "m")) (re.union (str.to_re "n") (str.to_re "ooo"))) (re.++ (re.* (re.union (str.to_re "ppp") (str.to_re "q"))) (re.++ (re.union (re.union (str.to_re "r") (str.to_re "sss")) (re.+ (str.to_re "ttt"))) (re.++ (re.union (re.* (str.to_re "uuu")) (re.* (str.to_re "vv"))) (re.++ (re.+ (re.union (str.to_re "www") (str.to_re "x"))) (re.++ (re.* (re.union (str.to_re "yy") (str.to_re "z"))) (re.++ (re.* (re.union (str.to_re "AAA") (str.to_re "BB"))) (re.++ (re.union (re.+ (str.to_re "CCC")) (re.* (str.to_re "D"))) (re.++ (re.+ (re.union (str.to_re "EEE") (str.to_re "F"))) (re.++ (re.union (re.+ (str.to_re "GG")) (re.* (str.to_re "HH"))) (re.++ (re.union (re.union (str.to_re "II") (str.to_re "JJ")) (re.+ (str.to_re "KK"))) (re.++ (re.+ (re.+ (str.to_re "LLL"))) (re.++ (re.+ (re.* (str.to_re "MM"))) (re.++ (re.+ (re.* (str.to_re "NN"))) (re.++ (re.union (re.union (str.to_re "OOO") (str.to_re "PPP")) (re.+ (str.to_re "QQ"))) (re.++ (re.* (re.union (str.to_re "R") (str.to_re "SSS"))) (re.++ (re.* (re.* (str.to_re "TT"))) (re.++ (re.* (re.+ (str.to_re "U"))) (re.++ (re.+ (re.* (str.to_re "VV"))) (re.++ (re.+ (re.* (str.to_re "W"))) (re.++ (re.+ (re.* (str.to_re "XX"))) (re.++ (re.union (re.+ (str.to_re "YYY")) (re.union (str.to_re "Z") (str.to_re "!!!"))) (re.++ (re.+ (re.+ (str.to_re """"""))) (re.++ (re.* (re.union (str.to_re "###") (str.to_re "$$$"))) (re.++ (re.+ (re.+ (str.to_re "%%"))) (re.++ (re.+ (re.union (str.to_re "&&") (str.to_re "'"))) (re.++ (re.* (re.+ (str.to_re "(("))) (re.++ (re.union (re.union (str.to_re "))") (str.to_re "**")) (re.union (str.to_re "+") (str.to_re ",,,"))) (re.++ (re.* (re.* (str.to_re "---"))) (re.++ (re.* (re.union (str.to_re ".") (str.to_re "//"))) (re.++ (re.* (re.union (str.to_re "::") (str.to_re ";"))) (re.++ (re.union (re.union (str.to_re "<<<") (str.to_re "==")) (re.+ (str.to_re ">"))) (re.++ (re.* (re.union (str.to_re "???") (str.to_re "@@@"))) (re.++ (re.+ (re.+ (str.to_re "[[["))) (re.++ (re.+ (re.+ (str.to_re "\\\\\\"))) (re.++ (re.union (re.* (str.to_re "]]")) (re.* (str.to_re "^^"))) (re.++ (re.* (re.union (str.to_re "__") (str.to_re "``"))) (re.++ (re.* (re.union (str.to_re "{") (str.to_re "|"))) (re.++ (re.* (re.+ (str.to_re "}}"))) (re.++ (re.* (re.union (str.to_re "~") (str.to_re "00"))) (re.++ (re.+ (re.+ (str.to_re "11"))) (re.++ (re.* (re.+ (str.to_re "22"))) (re.++ (re.union (re.union (str.to_re "3") (str.to_re "444")) (re.union (str.to_re "55") (str.to_re "66"))) (re.++ (re.union (re.* (str.to_re "77")) (re.+ (str.to_re "88"))) (re.++ (re.+ (re.union (str.to_re "9") (str.to_re "a"))) (re.++ (re.* (re.* (str.to_re "bbb"))) (re.++ (re.* (re.+ (str.to_re "ccc"))) (re.++ (re.* (re.* (str.to_re "ddd"))) (re.++ (re.union (re.* (str.to_re "eee")) (re.+ (str.to_re "f"))) (re.++ (re.* (re.+ (str.to_re "ggg"))) (re.++ (re.union (re.union (str.to_re "hhh") (str.to_re "iii")) (re.+ (str.to_re "jjj"))) (re.++ (re.* (re.union (str.to_re "kk") (str.to_re "lll"))) (re.++ (re.+ (re.+ (str.to_re "mmm"))) (re.++ (re.+ (re.+ (str.to_re "nnn"))) (re.++ (re.union (re.+ (str.to_re "ooo")) (re.+ (str.to_re "ppp"))) (re.++ (re.union (re.union (str.to_re "qq") (str.to_re "rrr")) (re.* (str.to_re "sss"))) (re.++ (re.* (re.* (str.to_re "tt"))) (re.++ (re.+ (re.+ (str.to_re "uuu"))) (re.++ (re.+ (re.union (str.to_re "vvv") (str.to_re "ww"))) (re.++ (re.* (re.union (str.to_re "xxx") (str.to_re "yy"))) (re.++ (re.+ (re.* (str.to_re "z"))) (re.++ (re.+ (re.* (str.to_re "A"))) (re.++ (re.union (re.+ (str.to_re "BB")) (re.* (str.to_re "CC"))) (re.++ (re.union (re.union (str.to_re "DDD") (str.to_re "E")) (re.union (str.to_re "FFF") (str.to_re "G"))) (re.++ (re.+ (re.* (str.to_re "HHH"))) (re.++ (re.+ (re.+ (str.to_re "III"))) (re.++ (re.+ (re.* (str.to_re "J"))) (re.++ (re.+ (re.+ (str.to_re "K"))) (re.++ (re.* (re.* (str.to_re "LL"))) (re.++ (re.* (re.* (str.to_re "MM"))) (re.++ (re.* (re.union (str.to_re "N") (str.to_re "OOO"))) (re.++ (re.union (re.union (str.to_re "P") (str.to_re "QQ")) (re.+ (str.to_re "R"))) (re.++ (re.+ (re.* (str.to_re "SS"))) (re.++ (re.union (re.* (str.to_re "T")) (re.* (str.to_re "UUU"))) (re.* (re.* (str.to_re "V"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "0"))) (re.++ (re.union (re.union (str.to_re "111") (str.to_re "22")) (re.+ (str.to_re "333"))) (re.++ (re.+ (re.+ (str.to_re "444"))) (re.++ (re.+ (re.+ (str.to_re "5"))) (re.++ (re.+ (re.* (str.to_re "666"))) (re.++ (re.union (re.* (str.to_re "777")) (re.union (str.to_re "88") (str.to_re "9"))) (re.++ (re.union (re.+ (str.to_re "a")) (re.+ (str.to_re "bb"))) (re.++ (re.* (re.union (str.to_re "cc") (str.to_re "ddd"))) (re.++ (re.union (re.* (str.to_re "ee")) (re.union (str.to_re "ff") (str.to_re "ggg"))) (re.++ (re.union (re.union (str.to_re "h") (str.to_re "iii")) (re.* (str.to_re "jjj"))) (re.++ (re.union (re.* (str.to_re "kkk")) (re.* (str.to_re "lll"))) (re.++ (re.* (re.union (str.to_re "m") (str.to_re "nnn"))) (re.++ (re.* (re.* (str.to_re "o"))) (re.++ (re.+ (re.* (str.to_re "p"))) (re.++ (re.+ (re.* (str.to_re "q"))) (re.++ (re.union (re.+ (str.to_re "rr")) (re.union (str.to_re "sss") (str.to_re "t"))) (re.++ (re.* (re.+ (str.to_re "uuu"))) (re.++ (re.* (re.* (str.to_re "v"))) (re.++ (re.+ (re.+ (str.to_re "ww"))) (re.++ (re.+ (re.* (str.to_re "xx"))) (re.++ (re.+ (re.+ (str.to_re "y"))) (re.++ (re.+ (re.union (str.to_re "z") (str.to_re "AAA"))) (re.++ (re.+ (re.* (str.to_re "B"))) (re.++ (re.* (re.* (str.to_re "C"))) (re.++ (re.+ (re.+ (str.to_re "DD"))) (re.++ (re.+ (re.* (str.to_re "EE"))) (re.++ (re.union (re.+ (str.to_re "FFF")) (re.+ (str.to_re "GG"))) (re.++ (re.+ (re.* (str.to_re "HHH"))) (re.++ (re.* (re.union (str.to_re "III") (str.to_re "JJ"))) (re.++ (re.+ (re.union (str.to_re "KK") (str.to_re "L"))) (re.++ (re.union (re.union (str.to_re "M") (str.to_re "NNN")) (re.* (str.to_re "OOO"))) (re.++ (re.union (re.union (str.to_re "PP") (str.to_re "QQQ")) (re.+ (str.to_re "RRR"))) (re.++ (re.union (re.* (str.to_re "SSS")) (re.+ (str.to_re "TT"))) (re.++ (re.+ (re.union (str.to_re "UU") (str.to_re "V"))) (re.++ (re.+ (re.union (str.to_re "W") (str.to_re "XXX"))) (re.++ (re.union (re.* (str.to_re "YY")) (re.* (str.to_re "ZZZ"))) (re.++ (re.+ (re.+ (str.to_re "!!"))) (re.++ (re.+ (re.union (str.to_re """") (str.to_re "#"))) (re.++ (re.* (re.* (str.to_re "$"))) (re.++ (re.union (re.union (str.to_re "%%%") (str.to_re "&&")) (re.+ (str.to_re "''"))) (re.++ (re.+ (re.* (str.to_re "((("))) (re.++ (re.* (re.+ (str.to_re ")"))) (re.++ (re.union (re.union (str.to_re "*") (str.to_re "++")) (re.+ (str.to_re ",,,"))) (re.++ (re.* (re.* (str.to_re "--"))) (re.++ (re.+ (re.+ (str.to_re ".."))) (re.++ (re.* (re.+ (str.to_re "/"))) (re.++ (re.+ (re.union (str.to_re "::") (str.to_re ";;;"))) (re.++ (re.+ (re.* (str.to_re "<<<"))) (re.++ (re.* (re.+ (str.to_re "==="))) (re.++ (re.union (re.* (str.to_re ">>")) (re.union (str.to_re "?") (str.to_re "@@"))) (re.++ (re.union (re.* (str.to_re "[[[")) (re.* (str.to_re "\\\\"))) (re.++ (re.union (re.* (str.to_re "]]]")) (re.* (str.to_re "^^"))) (re.++ (re.union (re.* (str.to_re "_")) (re.+ (str.to_re "```"))) (re.++ (re.+ (re.+ (str.to_re "{{"))) (re.++ (re.union (re.union (str.to_re "||") (str.to_re "}}")) (re.* (str.to_re "~~~"))) (re.++ (re.* (re.+ (str.to_re "0"))) (re.++ (re.* (re.union (str.to_re "1") (str.to_re "22"))) (re.++ (re.+ (re.+ (str.to_re "333"))) (re.++ (re.union (re.union (str.to_re "4") (str.to_re "55")) (re.* (str.to_re "66"))) (re.++ (re.+ (re.* (str.to_re "7"))) (re.++ (re.+ (re.+ (str.to_re "8"))) (re.++ (re.* (re.+ (str.to_re "99"))) (re.++ (re.union (re.union (str.to_re "a") (str.to_re "bb")) (re.+ (str.to_re "c"))) (re.++ (re.+ (re.union (str.to_re "ddd") (str.to_re "eee"))) (re.++ (re.* (re.* (str.to_re "ff"))) (re.++ (re.union (re.union (str.to_re "gg") (str.to_re "hhh")) (re.+ (str.to_re "iii"))) (re.++ (re.union (re.+ (str.to_re "jj")) (re.union (str.to_re "k") (str.to_re "l"))) (re.++ (re.+ (re.* (str.to_re "m"))) (re.++ (re.union (re.* (str.to_re "n")) (re.+ (str.to_re "o"))) (re.++ (re.union (re.* (str.to_re "pp")) (re.union (str.to_re "qqq") (str.to_re "r"))) (re.++ (re.+ (re.+ (str.to_re "ss"))) (re.++ (re.+ (re.union (str.to_re "tt") (str.to_re "u"))) (re.++ (re.union (re.+ (str.to_re "vv")) (re.* (str.to_re "w"))) (re.++ (re.+ (re.* (str.to_re "xx"))) (re.++ (re.* (re.+ (str.to_re "yyy"))) (re.++ (re.+ (re.* (str.to_re "z"))) (re.++ (re.* (re.union (str.to_re "A") (str.to_re "BB"))) (re.++ (re.+ (re.* (str.to_re "CCC"))) (re.++ (re.union (re.+ (str.to_re "DDD")) (re.* (str.to_re "EE"))) (re.++ (re.+ (re.* (str.to_re "FF"))) (re.++ (re.* (re.* (str.to_re "G"))) (re.++ (re.* (re.union (str.to_re "HHH") (str.to_re "II"))) (re.++ (re.* (re.union (str.to_re "J") (str.to_re "KK"))) (re.++ (re.union (re.* (str.to_re "LLL")) (re.union (str.to_re "MMM") (str.to_re "NN"))) (re.++ (re.union (re.* (str.to_re "OO")) (re.+ (str.to_re "P"))) (re.* (re.+ (str.to_re "QQ")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
