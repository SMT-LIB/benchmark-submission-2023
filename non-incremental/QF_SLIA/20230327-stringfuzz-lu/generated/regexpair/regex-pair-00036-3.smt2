(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "000"))) (re.++ (re.union (re.union (str.to_re "111") (str.to_re "22")) (re.* (str.to_re "33"))) (re.++ (re.* (re.+ (str.to_re "444"))) (re.++ (re.* (re.union (str.to_re "5") (str.to_re "6"))) (re.++ (re.union (re.+ (str.to_re "77")) (re.union (str.to_re "888") (str.to_re "9"))) (re.++ (re.+ (re.+ (str.to_re "aa"))) (re.++ (re.+ (re.* (str.to_re "b"))) (re.++ (re.union (re.union (str.to_re "cc") (str.to_re "dd")) (re.union (str.to_re "eee") (str.to_re "fff"))) (re.++ (re.union (re.union (str.to_re "gg") (str.to_re "hhh")) (re.* (str.to_re "iii"))) (re.++ (re.+ (re.+ (str.to_re "j"))) (re.++ (re.* (re.union (str.to_re "k") (str.to_re "ll"))) (re.++ (re.+ (re.+ (str.to_re "mmm"))) (re.++ (re.* (re.union (str.to_re "n") (str.to_re "oo"))) (re.++ (re.* (re.* (str.to_re "ppp"))) (re.++ (re.+ (re.+ (str.to_re "q"))) (re.++ (re.+ (re.+ (str.to_re "rrr"))) (re.++ (re.* (re.+ (str.to_re "ss"))) (re.++ (re.union (re.* (str.to_re "ttt")) (re.* (str.to_re "uu"))) (re.++ (re.union (re.+ (str.to_re "vv")) (re.union (str.to_re "ww") (str.to_re "x"))) (re.++ (re.union (re.+ (str.to_re "y")) (re.* (str.to_re "zz"))) (re.++ (re.+ (re.+ (str.to_re "A"))) (re.++ (re.* (re.union (str.to_re "BBB") (str.to_re "CCC"))) (re.++ (re.union (re.+ (str.to_re "DDD")) (re.union (str.to_re "EEE") (str.to_re "FF"))) (re.++ (re.* (re.union (str.to_re "GG") (str.to_re "HH"))) (re.++ (re.+ (re.+ (str.to_re "II"))) (re.++ (re.union (re.* (str.to_re "J")) (re.* (str.to_re "K"))) (re.++ (re.union (re.union (str.to_re "LLL") (str.to_re "MMM")) (re.union (str.to_re "NN") (str.to_re "OO"))) (re.++ (re.+ (re.* (str.to_re "PPP"))) (re.++ (re.union (re.+ (str.to_re "QQQ")) (re.* (str.to_re "R"))) (re.++ (re.union (re.union (str.to_re "S") (str.to_re "T")) (re.+ (str.to_re "UUU"))) (re.++ (re.union (re.+ (str.to_re "VVV")) (re.* (str.to_re "WW"))) (re.++ (re.+ (re.union (str.to_re "XXX") (str.to_re "YYY"))) (re.++ (re.+ (re.union (str.to_re "Z") (str.to_re "!"))) (re.++ (re.* (re.* (str.to_re """"""""))) (re.++ (re.+ (re.union (str.to_re "#") (str.to_re "$$"))) (re.* (re.+ (str.to_re "%%"))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.* (re.union (str.to_re "0") (str.to_re "1"))) (re.++ (re.* (re.* (str.to_re "222"))) (re.++ (re.union (re.union (str.to_re "3") (str.to_re "444")) (re.union (str.to_re "5") (str.to_re "6"))) (re.++ (re.union (re.+ (str.to_re "7")) (re.* (str.to_re "8"))) (re.++ (re.union (re.+ (str.to_re "99")) (re.+ (str.to_re "aaa"))) (re.++ (re.* (re.union (str.to_re "b") (str.to_re "ccc"))) (re.++ (re.* (re.+ (str.to_re "dd"))) (re.++ (re.* (re.union (str.to_re "ee") (str.to_re "ff"))) (re.++ (re.+ (re.union (str.to_re "g") (str.to_re "hhh"))) (re.++ (re.+ (re.* (str.to_re "ii"))) (re.++ (re.* (re.+ (str.to_re "jj"))) (re.++ (re.* (re.+ (str.to_re "kk"))) (re.++ (re.+ (re.union (str.to_re "l") (str.to_re "mmm"))) (re.++ (re.union (re.* (str.to_re "nnn")) (re.* (str.to_re "o"))) (re.++ (re.union (re.* (str.to_re "pp")) (re.union (str.to_re "qq") (str.to_re "r"))) (re.++ (re.+ (re.* (str.to_re "s"))) (re.++ (re.+ (re.union (str.to_re "t") (str.to_re "u"))) (re.++ (re.union (re.+ (str.to_re "v")) (re.* (str.to_re "ww"))) (re.++ (re.union (re.union (str.to_re "xx") (str.to_re "yyy")) (re.union (str.to_re "z") (str.to_re "A"))) (re.++ (re.* (re.* (str.to_re "BB"))) (re.++ (re.+ (re.* (str.to_re "C"))) (re.++ (re.* (re.+ (str.to_re "DDD"))) (re.++ (re.union (re.+ (str.to_re "E")) (re.+ (str.to_re "FFF"))) (re.++ (re.* (re.+ (str.to_re "GGG"))) (re.++ (re.+ (re.+ (str.to_re "HHH"))) (re.++ (re.+ (re.+ (str.to_re "III"))) (re.++ (re.+ (re.+ (str.to_re "JJJ"))) (re.++ (re.* (re.* (str.to_re "KK"))) (re.++ (re.* (re.+ (str.to_re "L"))) (re.++ (re.union (re.* (str.to_re "MMM")) (re.+ (str.to_re "N"))) (re.++ (re.* (re.* (str.to_re "OO"))) (re.++ (re.* (re.union (str.to_re "P") (str.to_re "Q"))) (re.++ (re.+ (re.+ (str.to_re "R"))) (re.++ (re.* (re.union (str.to_re "S") (str.to_re "T"))) (re.++ (re.* (re.union (str.to_re "U") (str.to_re "VVV"))) (re.+ (re.+ (str.to_re "WW")))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
