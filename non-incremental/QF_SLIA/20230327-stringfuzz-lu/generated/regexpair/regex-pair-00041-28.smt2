(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "000"))) (re.++ (re.+ (re.union (str.to_re "111") (str.to_re "222"))) (re.++ (re.+ (re.+ (str.to_re "33"))) (re.++ (re.+ (re.+ (str.to_re "4"))) (re.++ (re.union (re.* (str.to_re "555")) (re.+ (str.to_re "66"))) (re.++ (re.+ (re.+ (str.to_re "77"))) (re.++ (re.+ (re.union (str.to_re "8") (str.to_re "9"))) (re.++ (re.union (re.union (str.to_re "a") (str.to_re "b")) (re.+ (str.to_re "c"))) (re.++ (re.union (re.union (str.to_re "dd") (str.to_re "eee")) (re.union (str.to_re "ff") (str.to_re "g"))) (re.++ (re.* (re.* (str.to_re "h"))) (re.++ (re.+ (re.+ (str.to_re "iii"))) (re.++ (re.union (re.+ (str.to_re "jj")) (re.* (str.to_re "kk"))) (re.++ (re.union (re.* (str.to_re "lll")) (re.union (str.to_re "mmm") (str.to_re "n"))) (re.++ (re.+ (re.+ (str.to_re "ooo"))) (re.++ (re.+ (re.+ (str.to_re "pp"))) (re.++ (re.* (re.+ (str.to_re "qqq"))) (re.++ (re.union (re.* (str.to_re "rr")) (re.union (str.to_re "s") (str.to_re "tt"))) (re.++ (re.union (re.* (str.to_re "u")) (re.* (str.to_re "vvv"))) (re.++ (re.union (re.* (str.to_re "w")) (re.* (str.to_re "x"))) (re.++ (re.union (re.+ (str.to_re "y")) (re.+ (str.to_re "zz"))) (re.++ (re.union (re.union (str.to_re "A") (str.to_re "BBB")) (re.* (str.to_re "C"))) (re.++ (re.* (re.* (str.to_re "DDD"))) (re.++ (re.* (re.+ (str.to_re "E"))) (re.++ (re.union (re.union (str.to_re "F") (str.to_re "G")) (re.* (str.to_re "H"))) (re.++ (re.* (re.* (str.to_re "II"))) (re.++ (re.union (re.* (str.to_re "JJJ")) (re.* (str.to_re "KKK"))) (re.++ (re.union (re.union (str.to_re "L") (str.to_re "M")) (re.+ (str.to_re "N"))) (re.++ (re.+ (re.+ (str.to_re "OO"))) (re.++ (re.union (re.union (str.to_re "PP") (str.to_re "QQQ")) (re.union (str.to_re "RRR") (str.to_re "S"))) (re.++ (re.+ (re.+ (str.to_re "TTT"))) (re.++ (re.+ (re.union (str.to_re "U") (str.to_re "VVV"))) (re.++ (re.+ (re.+ (str.to_re "WWW"))) (re.++ (re.union (re.* (str.to_re "XX")) (re.union (str.to_re "YYY") (str.to_re "ZZZ"))) (re.++ (re.union (re.* (str.to_re "!!!")) (re.union (str.to_re """""") (str.to_re "##"))) (re.++ (re.* (re.* (str.to_re "$$$"))) (re.++ (re.union (re.* (str.to_re "%%")) (re.+ (str.to_re "&&&"))) (re.++ (re.* (re.+ (str.to_re "'"))) (re.++ (re.* (re.* (str.to_re "(("))) (re.++ (re.* (re.* (str.to_re ")))"))) (re.++ (re.* (re.union (str.to_re "**") (str.to_re "+"))) (re.union (re.union (str.to_re ",,") (str.to_re "---")) (re.+ (str.to_re "..")))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "000"))) (re.++ (re.* (re.+ (str.to_re "111"))) (re.++ (re.union (re.* (str.to_re "222")) (re.* (str.to_re "3"))) (re.++ (re.+ (re.union (str.to_re "444") (str.to_re "5"))) (re.++ (re.+ (re.union (str.to_re "666") (str.to_re "7"))) (re.++ (re.+ (re.+ (str.to_re "888"))) (re.++ (re.union (re.union (str.to_re "99") (str.to_re "a")) (re.union (str.to_re "bb") (str.to_re "cc"))) (re.++ (re.* (re.* (str.to_re "d"))) (re.++ (re.union (re.+ (str.to_re "eee")) (re.* (str.to_re "fff"))) (re.++ (re.union (re.+ (str.to_re "g")) (re.union (str.to_re "hh") (str.to_re "ii"))) (re.++ (re.* (re.* (str.to_re "jjj"))) (re.++ (re.* (re.* (str.to_re "kkk"))) (re.++ (re.union (re.+ (str.to_re "ll")) (re.+ (str.to_re "mmm"))) (re.++ (re.union (re.union (str.to_re "n") (str.to_re "o")) (re.* (str.to_re "p"))) (re.++ (re.+ (re.union (str.to_re "qqq") (str.to_re "rrr"))) (re.++ (re.union (re.union (str.to_re "s") (str.to_re "t")) (re.union (str.to_re "u") (str.to_re "vvv"))) (re.++ (re.+ (re.* (str.to_re "www"))) (re.++ (re.union (re.+ (str.to_re "x")) (re.* (str.to_re "yyy"))) (re.++ (re.+ (re.+ (str.to_re "z"))) (re.++ (re.union (re.+ (str.to_re "A")) (re.* (str.to_re "B"))) (re.++ (re.+ (re.union (str.to_re "CC") (str.to_re "D"))) (re.++ (re.+ (re.* (str.to_re "EE"))) (re.++ (re.union (re.* (str.to_re "FF")) (re.* (str.to_re "GG"))) (re.++ (re.union (re.* (str.to_re "HH")) (re.union (str.to_re "III") (str.to_re "JJJ"))) (re.++ (re.+ (re.+ (str.to_re "KK"))) (re.++ (re.* (re.+ (str.to_re "L"))) (re.++ (re.union (re.union (str.to_re "M") (str.to_re "NN")) (re.union (str.to_re "OOO") (str.to_re "PPP"))) (re.++ (re.* (re.union (str.to_re "QQQ") (str.to_re "R"))) (re.++ (re.* (re.* (str.to_re "SS"))) (re.++ (re.+ (re.+ (str.to_re "TT"))) (re.++ (re.* (re.* (str.to_re "UU"))) (re.++ (re.union (re.+ (str.to_re "VVV")) (re.+ (str.to_re "WW"))) (re.++ (re.+ (re.+ (str.to_re "XXX"))) (re.++ (re.union (re.* (str.to_re "Y")) (re.+ (str.to_re "ZZZ"))) (re.++ (re.union (re.* (str.to_re "!!")) (re.* (str.to_re """"))) (re.++ (re.* (re.* (str.to_re "#"))) (re.++ (re.* (re.union (str.to_re "$$$") (str.to_re "%%%"))) (re.++ (re.* (re.union (str.to_re "&&&") (str.to_re "'''"))) (re.++ (re.+ (re.* (str.to_re "("))) (re.++ (re.+ (re.+ (str.to_re ")))"))) (re.* (re.* (str.to_re "***"))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
