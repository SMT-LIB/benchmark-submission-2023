(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "00") (str.to_re "1"))) (re.++ (re.+ (re.union (str.to_re "22") (str.to_re "33"))) (re.++ (re.union (re.* (str.to_re "4")) (re.* (str.to_re "555"))) (re.++ (re.+ (re.union (str.to_re "6") (str.to_re "77"))) (re.++ (re.union (re.union (str.to_re "888") (str.to_re "999")) (re.+ (str.to_re "aaa"))) (re.++ (re.union (re.+ (str.to_re "b")) (re.union (str.to_re "ccc") (str.to_re "dd"))) (re.++ (re.union (re.* (str.to_re "eee")) (re.+ (str.to_re "ff"))) (re.++ (re.* (re.* (str.to_re "ggg"))) (re.++ (re.+ (re.* (str.to_re "hh"))) (re.++ (re.* (re.* (str.to_re "i"))) (re.++ (re.* (re.+ (str.to_re "jj"))) (re.++ (re.+ (re.* (str.to_re "kk"))) (re.++ (re.* (re.union (str.to_re "ll") (str.to_re "m"))) (re.++ (re.* (re.+ (str.to_re "n"))) (re.++ (re.* (re.union (str.to_re "oo") (str.to_re "p"))) (re.++ (re.* (re.union (str.to_re "q") (str.to_re "rrr"))) (re.++ (re.* (re.union (str.to_re "sss") (str.to_re "t"))) (re.++ (re.* (re.* (str.to_re "uuu"))) (re.++ (re.+ (re.+ (str.to_re "v"))) (re.++ (re.union (re.* (str.to_re "www")) (re.union (str.to_re "xx") (str.to_re "y"))) (re.++ (re.union (re.* (str.to_re "zzz")) (re.* (str.to_re "AA"))) (re.++ (re.* (re.+ (str.to_re "BBB"))) (re.++ (re.* (re.* (str.to_re "C"))) (re.++ (re.* (re.* (str.to_re "DDD"))) (re.++ (re.* (re.+ (str.to_re "E"))) (re.++ (re.union (re.+ (str.to_re "F")) (re.union (str.to_re "GG") (str.to_re "H"))) (re.++ (re.union (re.+ (str.to_re "III")) (re.+ (str.to_re "JJ"))) (re.++ (re.+ (re.+ (str.to_re "KK"))) (re.++ (re.union (re.+ (str.to_re "LL")) (re.+ (str.to_re "M"))) (re.++ (re.union (re.+ (str.to_re "NNN")) (re.* (str.to_re "OOO"))) (re.++ (re.* (re.* (str.to_re "PP"))) (re.++ (re.* (re.+ (str.to_re "Q"))) (re.++ (re.union (re.* (str.to_re "RR")) (re.union (str.to_re "SS") (str.to_re "TT"))) (re.++ (re.+ (re.* (str.to_re "UU"))) (re.++ (re.union (re.+ (str.to_re "VVV")) (re.union (str.to_re "W") (str.to_re "XX"))) (re.++ (re.+ (re.* (str.to_re "YYY"))) (re.++ (re.+ (re.+ (str.to_re "ZZ"))) (re.++ (re.union (re.* (str.to_re "!!")) (re.+ (str.to_re """"""))) (re.++ (re.union (re.* (str.to_re "##")) (re.union (str.to_re "$") (str.to_re "%"))) (re.++ (re.union (re.+ (str.to_re "&&&")) (re.* (str.to_re "'"))) (re.++ (re.union (re.* (str.to_re "(")) (re.* (str.to_re ")"))) (re.++ (re.* (re.* (str.to_re "*"))) (re.++ (re.union (re.* (str.to_re "++")) (re.union (str.to_re ",") (str.to_re "--"))) (re.++ (re.+ (re.union (str.to_re ".") (str.to_re "///"))) (re.++ (re.union (re.* (str.to_re "::")) (re.+ (str.to_re ";;"))) (re.++ (re.+ (re.union (str.to_re "<<") (str.to_re "=="))) (re.++ (re.+ (re.+ (str.to_re ">>"))) (re.++ (re.+ (re.+ (str.to_re "??"))) (re.++ (re.* (re.+ (str.to_re "@"))) (re.++ (re.+ (re.union (str.to_re "[") (str.to_re "\\"))) (re.++ (re.* (re.union (str.to_re "]]") (str.to_re "^^^"))) (re.++ (re.union (re.union (str.to_re "___") (str.to_re "```")) (re.union (str.to_re "{{{") (str.to_re "|||"))) (re.++ (re.+ (re.union (str.to_re "}") (str.to_re "~~~"))) (re.++ (re.union (re.+ (str.to_re "00")) (re.union (str.to_re "111") (str.to_re "2"))) (re.++ (re.+ (re.* (str.to_re "333"))) (re.union (re.union (str.to_re "44") (str.to_re "555")) (re.* (str.to_re "6"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.union (re.union (str.to_re "000") (str.to_re "11")) (re.* (str.to_re "22"))) (re.++ (re.+ (re.+ (str.to_re "33"))) (re.++ (re.union (re.* (str.to_re "4")) (re.* (str.to_re "55"))) (re.++ (re.union (re.+ (str.to_re "666")) (re.+ (str.to_re "777"))) (re.++ (re.+ (re.* (str.to_re "88"))) (re.++ (re.union (re.union (str.to_re "9") (str.to_re "aa")) (re.* (str.to_re "bb"))) (re.++ (re.+ (re.+ (str.to_re "cc"))) (re.++ (re.union (re.union (str.to_re "ddd") (str.to_re "ee")) (re.union (str.to_re "ff") (str.to_re "g"))) (re.++ (re.* (re.union (str.to_re "hhh") (str.to_re "ii"))) (re.++ (re.union (re.union (str.to_re "jjj") (str.to_re "k")) (re.+ (str.to_re "l"))) (re.++ (re.* (re.+ (str.to_re "mmm"))) (re.++ (re.+ (re.union (str.to_re "nnn") (str.to_re "oo"))) (re.++ (re.union (re.+ (str.to_re "p")) (re.union (str.to_re "qq") (str.to_re "r"))) (re.++ (re.union (re.* (str.to_re "sss")) (re.* (str.to_re "t"))) (re.++ (re.union (re.union (str.to_re "uu") (str.to_re "vv")) (re.* (str.to_re "ww"))) (re.++ (re.* (re.union (str.to_re "xx") (str.to_re "y"))) (re.++ (re.+ (re.+ (str.to_re "zzz"))) (re.++ (re.* (re.union (str.to_re "AA") (str.to_re "B"))) (re.++ (re.* (re.union (str.to_re "CC") (str.to_re "D"))) (re.++ (re.+ (re.union (str.to_re "EE") (str.to_re "F"))) (re.++ (re.+ (re.+ (str.to_re "GG"))) (re.++ (re.+ (re.+ (str.to_re "HHH"))) (re.++ (re.union (re.+ (str.to_re "II")) (re.+ (str.to_re "J"))) (re.++ (re.+ (re.* (str.to_re "K"))) (re.++ (re.* (re.* (str.to_re "LL"))) (re.++ (re.+ (re.* (str.to_re "MM"))) (re.++ (re.union (re.+ (str.to_re "NN")) (re.union (str.to_re "O") (str.to_re "PP"))) (re.++ (re.+ (re.+ (str.to_re "QQQ"))) (re.++ (re.union (re.* (str.to_re "RRR")) (re.+ (str.to_re "S"))) (re.++ (re.union (re.union (str.to_re "TT") (str.to_re "UUU")) (re.union (str.to_re "V") (str.to_re "W"))) (re.++ (re.union (re.union (str.to_re "XXX") (str.to_re "Y")) (re.* (str.to_re "Z"))) (re.++ (re.* (re.union (str.to_re "!!") (str.to_re """"))) (re.++ (re.* (re.* (str.to_re "#"))) (re.++ (re.union (re.+ (str.to_re "$$$")) (re.union (str.to_re "%") (str.to_re "&&"))) (re.++ (re.+ (re.+ (str.to_re "'''"))) (re.++ (re.* (re.* (str.to_re "("))) (re.++ (re.union (re.* (str.to_re "))")) (re.+ (str.to_re "**"))) (re.++ (re.+ (re.* (str.to_re "+++"))) (re.++ (re.* (re.* (str.to_re ",,"))) (re.++ (re.* (re.* (str.to_re "--"))) (re.++ (re.+ (re.union (str.to_re ".") (str.to_re "/"))) (re.++ (re.* (re.* (str.to_re ":"))) (re.++ (re.+ (re.+ (str.to_re ";;"))) (re.++ (re.union (re.union (str.to_re "<<<") (str.to_re "===")) (re.+ (str.to_re ">>"))) (re.++ (re.+ (re.union (str.to_re "???") (str.to_re "@@@"))) (re.++ (re.+ (re.union (str.to_re "[") (str.to_re "\\\\\\"))) (re.++ (re.union (re.* (str.to_re "]")) (re.* (str.to_re "^^^"))) (re.++ (re.* (re.union (str.to_re "___") (str.to_re "`"))) (re.++ (re.+ (re.union (str.to_re "{") (str.to_re "|"))) (re.++ (re.* (re.union (str.to_re "}}}") (str.to_re "~"))) (re.++ (re.+ (re.* (str.to_re "00"))) (re.++ (re.union (re.* (str.to_re "1")) (re.union (str.to_re "2") (str.to_re "3"))) (re.++ (re.union (re.+ (str.to_re "4")) (re.* (str.to_re "5"))) (re.++ (re.union (re.* (str.to_re "666")) (re.* (str.to_re "7"))) (re.++ (re.* (re.union (str.to_re "8") (str.to_re "99"))) (re.union (re.union (str.to_re "aa") (str.to_re "bb")) (re.+ (str.to_re "ccc")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
