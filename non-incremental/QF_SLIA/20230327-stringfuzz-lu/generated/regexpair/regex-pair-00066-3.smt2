(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "0") (str.to_re "111"))) (re.++ (re.+ (re.+ (str.to_re "22"))) (re.++ (re.* (re.union (str.to_re "33") (str.to_re "4"))) (re.++ (re.* (re.* (str.to_re "55"))) (re.++ (re.union (re.* (str.to_re "666")) (re.+ (str.to_re "7"))) (re.++ (re.+ (re.* (str.to_re "88"))) (re.++ (re.union (re.+ (str.to_re "999")) (re.* (str.to_re "a"))) (re.++ (re.+ (re.+ (str.to_re "b"))) (re.++ (re.+ (re.* (str.to_re "ccc"))) (re.++ (re.* (re.* (str.to_re "dd"))) (re.++ (re.* (re.union (str.to_re "ee") (str.to_re "fff"))) (re.++ (re.+ (re.* (str.to_re "gg"))) (re.++ (re.union (re.+ (str.to_re "h")) (re.* (str.to_re "ii"))) (re.++ (re.+ (re.* (str.to_re "jj"))) (re.++ (re.* (re.union (str.to_re "kk") (str.to_re "lll"))) (re.++ (re.+ (re.* (str.to_re "mm"))) (re.++ (re.* (re.+ (str.to_re "nnn"))) (re.++ (re.+ (re.union (str.to_re "ooo") (str.to_re "pp"))) (re.++ (re.+ (re.* (str.to_re "q"))) (re.++ (re.+ (re.union (str.to_re "rrr") (str.to_re "s"))) (re.++ (re.union (re.union (str.to_re "tt") (str.to_re "uu")) (re.union (str.to_re "vvv") (str.to_re "ww"))) (re.++ (re.union (re.+ (str.to_re "xx")) (re.union (str.to_re "y") (str.to_re "zz"))) (re.++ (re.* (re.+ (str.to_re "AAA"))) (re.++ (re.* (re.union (str.to_re "BBB") (str.to_re "CC"))) (re.++ (re.union (re.+ (str.to_re "DDD")) (re.union (str.to_re "EEE") (str.to_re "FF"))) (re.++ (re.+ (re.union (str.to_re "GGG") (str.to_re "HHH"))) (re.++ (re.union (re.+ (str.to_re "II")) (re.+ (str.to_re "JJJ"))) (re.++ (re.* (re.+ (str.to_re "K"))) (re.++ (re.* (re.* (str.to_re "L"))) (re.++ (re.union (re.+ (str.to_re "MMM")) (re.* (str.to_re "NN"))) (re.++ (re.union (re.* (str.to_re "OO")) (re.union (str.to_re "PP") (str.to_re "Q"))) (re.++ (re.+ (re.+ (str.to_re "RRR"))) (re.++ (re.* (re.+ (str.to_re "SSS"))) (re.++ (re.union (re.union (str.to_re "TT") (str.to_re "UUU")) (re.+ (str.to_re "VV"))) (re.++ (re.union (re.* (str.to_re "W")) (re.+ (str.to_re "XX"))) (re.++ (re.* (re.* (str.to_re "YYY"))) (re.++ (re.* (re.* (str.to_re "ZZ"))) (re.++ (re.union (re.+ (str.to_re "!")) (re.* (str.to_re """"""))) (re.++ (re.union (re.union (str.to_re "##") (str.to_re "$$$")) (re.* (str.to_re "%%%"))) (re.++ (re.+ (re.+ (str.to_re "&&"))) (re.++ (re.+ (re.+ (str.to_re "''"))) (re.++ (re.+ (re.* (str.to_re "((("))) (re.++ (re.+ (re.union (str.to_re ")") (str.to_re "**"))) (re.++ (re.union (re.* (str.to_re "+")) (re.+ (str.to_re ",,"))) (re.++ (re.+ (re.* (str.to_re "-"))) (re.++ (re.+ (re.+ (str.to_re "..."))) (re.++ (re.union (re.+ (str.to_re "//")) (re.union (str.to_re ":::") (str.to_re ";;;"))) (re.++ (re.* (re.union (str.to_re "<<") (str.to_re "==="))) (re.++ (re.union (re.* (str.to_re ">>")) (re.+ (str.to_re "?"))) (re.++ (re.+ (re.+ (str.to_re "@@@"))) (re.++ (re.+ (re.union (str.to_re "[[") (str.to_re "\\\\"))) (re.++ (re.+ (re.union (str.to_re "]]") (str.to_re "^^"))) (re.++ (re.union (re.union (str.to_re "___") (str.to_re "``")) (re.+ (str.to_re "{{{"))) (re.++ (re.+ (re.* (str.to_re "|"))) (re.++ (re.+ (re.+ (str.to_re "}"))) (re.++ (re.union (re.+ (str.to_re "~")) (re.union (str.to_re "000") (str.to_re "11"))) (re.++ (re.* (re.+ (str.to_re "222"))) (re.++ (re.union (re.union (str.to_re "33") (str.to_re "4")) (re.union (str.to_re "5") (str.to_re "666"))) (re.++ (re.+ (re.union (str.to_re "777") (str.to_re "8"))) (re.++ (re.+ (re.* (str.to_re "9"))) (re.++ (re.* (re.* (str.to_re "aa"))) (re.++ (re.* (re.+ (str.to_re "b"))) (re.++ (re.union (re.union (str.to_re "c") (str.to_re "ddd")) (re.* (str.to_re "ee"))) (re.++ (re.union (re.+ (str.to_re "fff")) (re.+ (str.to_re "gg"))) (re.++ (re.+ (re.* (str.to_re "hh"))) (re.* (re.+ (str.to_re "ii"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "0"))) (re.++ (re.* (re.* (str.to_re "111"))) (re.++ (re.* (re.* (str.to_re "2"))) (re.++ (re.* (re.union (str.to_re "33") (str.to_re "444"))) (re.++ (re.* (re.+ (str.to_re "55"))) (re.++ (re.union (re.+ (str.to_re "666")) (re.union (str.to_re "77") (str.to_re "88"))) (re.++ (re.* (re.+ (str.to_re "99"))) (re.++ (re.union (re.* (str.to_re "aa")) (re.* (str.to_re "bb"))) (re.++ (re.* (re.+ (str.to_re "c"))) (re.++ (re.+ (re.+ (str.to_re "ddd"))) (re.++ (re.union (re.union (str.to_re "e") (str.to_re "ff")) (re.+ (str.to_re "g"))) (re.++ (re.union (re.union (str.to_re "hh") (str.to_re "iii")) (re.union (str.to_re "j") (str.to_re "k"))) (re.++ (re.* (re.* (str.to_re "ll"))) (re.++ (re.union (re.union (str.to_re "mmm") (str.to_re "nn")) (re.* (str.to_re "oo"))) (re.++ (re.* (re.+ (str.to_re "p"))) (re.++ (re.+ (re.union (str.to_re "qqq") (str.to_re "r"))) (re.++ (re.* (re.+ (str.to_re "ss"))) (re.++ (re.* (re.union (str.to_re "tt") (str.to_re "uu"))) (re.++ (re.* (re.union (str.to_re "vvv") (str.to_re "ww"))) (re.++ (re.union (re.union (str.to_re "x") (str.to_re "yyy")) (re.* (str.to_re "zz"))) (re.++ (re.* (re.* (str.to_re "A"))) (re.++ (re.union (re.* (str.to_re "B")) (re.+ (str.to_re "CCC"))) (re.++ (re.* (re.union (str.to_re "D") (str.to_re "EE"))) (re.++ (re.union (re.+ (str.to_re "FF")) (re.+ (str.to_re "GG"))) (re.++ (re.* (re.* (str.to_re "HHH"))) (re.++ (re.union (re.union (str.to_re "II") (str.to_re "JJ")) (re.* (str.to_re "KK"))) (re.++ (re.union (re.+ (str.to_re "LL")) (re.* (str.to_re "M"))) (re.++ (re.+ (re.* (str.to_re "NNN"))) (re.++ (re.* (re.union (str.to_re "OO") (str.to_re "PPP"))) (re.++ (re.* (re.+ (str.to_re "QQ"))) (re.++ (re.* (re.* (str.to_re "RRR"))) (re.++ (re.union (re.union (str.to_re "SSS") (str.to_re "TTT")) (re.+ (str.to_re "UUU"))) (re.++ (re.+ (re.* (str.to_re "VV"))) (re.++ (re.union (re.union (str.to_re "W") (str.to_re "XXX")) (re.* (str.to_re "YYY"))) (re.++ (re.+ (re.+ (str.to_re "Z"))) (re.++ (re.+ (re.* (str.to_re "!!"))) (re.++ (re.+ (re.* (str.to_re """"))) (re.++ (re.* (re.+ (str.to_re "###"))) (re.++ (re.union (re.+ (str.to_re "$")) (re.* (str.to_re "%%%"))) (re.++ (re.union (re.union (str.to_re "&&&") (str.to_re "''")) (re.union (str.to_re "(") (str.to_re "))"))) (re.++ (re.* (re.union (str.to_re "**") (str.to_re "++"))) (re.++ (re.union (re.+ (str.to_re ",,,")) (re.* (str.to_re "--"))) (re.++ (re.union (re.union (str.to_re "...") (str.to_re "/")) (re.union (str.to_re "::") (str.to_re ";;;"))) (re.++ (re.union (re.* (str.to_re "<")) (re.* (str.to_re "==="))) (re.++ (re.+ (re.+ (str.to_re ">>>"))) (re.++ (re.+ (re.union (str.to_re "???") (str.to_re "@@@"))) (re.++ (re.* (re.union (str.to_re "[") (str.to_re "\\"))) (re.++ (re.* (re.+ (str.to_re "]]"))) (re.++ (re.+ (re.+ (str.to_re "^^^"))) (re.++ (re.+ (re.union (str.to_re "__") (str.to_re "``"))) (re.++ (re.union (re.union (str.to_re "{") (str.to_re "|||")) (re.union (str.to_re "}") (str.to_re "~~~"))) (re.++ (re.* (re.union (str.to_re "0") (str.to_re "1"))) (re.++ (re.+ (re.union (str.to_re "222") (str.to_re "3"))) (re.++ (re.* (re.+ (str.to_re "44"))) (re.++ (re.* (re.* (str.to_re "55"))) (re.++ (re.+ (re.+ (str.to_re "66"))) (re.++ (re.union (re.* (str.to_re "77")) (re.* (str.to_re "88"))) (re.++ (re.* (re.* (str.to_re "99"))) (re.++ (re.* (re.+ (str.to_re "aaa"))) (re.++ (re.* (re.union (str.to_re "bb") (str.to_re "ccc"))) (re.++ (re.union (re.* (str.to_re "d")) (re.+ (str.to_re "ee"))) (re.++ (re.+ (re.* (str.to_re "fff"))) (re.++ (re.union (re.* (str.to_re "gg")) (re.* (str.to_re "hhh"))) (re.++ (re.union (re.+ (str.to_re "iii")) (re.union (str.to_re "jj") (str.to_re "kk"))) (re.++ (re.+ (re.* (str.to_re "ll"))) (re.+ (re.+ (str.to_re "m")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
