(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (str.to_re "00") (str.to_re "111")) (re.union (str.to_re "222") (str.to_re "3"))) (re.++ (re.* (re.union (str.to_re "4") (str.to_re "5"))) (re.++ (re.+ (re.union (str.to_re "6") (str.to_re "7"))) (re.++ (re.+ (re.union (str.to_re "8") (str.to_re "999"))) (re.++ (re.+ (re.* (str.to_re "a"))) (re.++ (re.union (re.+ (str.to_re "bbb")) (re.union (str.to_re "cc") (str.to_re "dd"))) (re.++ (re.+ (re.* (str.to_re "ee"))) (re.++ (re.union (re.union (str.to_re "ff") (str.to_re "ggg")) (re.+ (str.to_re "hh"))) (re.++ (re.* (re.* (str.to_re "iii"))) (re.++ (re.+ (re.union (str.to_re "jj") (str.to_re "kkk"))) (re.++ (re.+ (re.union (str.to_re "l") (str.to_re "m"))) (re.++ (re.* (re.union (str.to_re "nn") (str.to_re "o"))) (re.++ (re.* (re.+ (str.to_re "p"))) (re.++ (re.+ (re.+ (str.to_re "q"))) (re.++ (re.union (re.+ (str.to_re "rrr")) (re.* (str.to_re "ss"))) (re.++ (re.* (re.+ (str.to_re "t"))) (re.++ (re.union (re.* (str.to_re "u")) (re.+ (str.to_re "vvv"))) (re.++ (re.+ (re.* (str.to_re "w"))) (re.++ (re.+ (re.+ (str.to_re "x"))) (re.++ (re.+ (re.+ (str.to_re "yyy"))) (re.++ (re.* (re.union (str.to_re "z") (str.to_re "AAA"))) (re.++ (re.* (re.* (str.to_re "BB"))) (re.++ (re.* (re.+ (str.to_re "CC"))) (re.++ (re.+ (re.* (str.to_re "D"))) (re.++ (re.+ (re.union (str.to_re "EE") (str.to_re "FF"))) (re.++ (re.+ (re.* (str.to_re "GG"))) (re.++ (re.* (re.union (str.to_re "HH") (str.to_re "II"))) (re.++ (re.+ (re.union (str.to_re "J") (str.to_re "KKK"))) (re.++ (re.union (re.* (str.to_re "L")) (re.* (str.to_re "M"))) (re.++ (re.+ (re.union (str.to_re "NN") (str.to_re "OO"))) (re.++ (re.union (re.union (str.to_re "P") (str.to_re "QQQ")) (re.union (str.to_re "RR") (str.to_re "S"))) (re.++ (re.union (re.* (str.to_re "T")) (re.union (str.to_re "UU") (str.to_re "VV"))) (re.++ (re.+ (re.union (str.to_re "WW") (str.to_re "XX"))) (re.++ (re.+ (re.* (str.to_re "YYY"))) (re.++ (re.* (re.union (str.to_re "ZZZ") (str.to_re "!!"))) (re.++ (re.* (re.+ (str.to_re """"""""))) (re.++ (re.+ (re.union (str.to_re "###") (str.to_re "$$"))) (re.++ (re.+ (re.+ (str.to_re "%"))) (re.++ (re.+ (re.* (str.to_re "&"))) (re.++ (re.+ (re.* (str.to_re "'"))) (re.++ (re.+ (re.+ (str.to_re "((("))) (re.++ (re.union (re.union (str.to_re ")") (str.to_re "**")) (re.+ (str.to_re "+"))) (re.++ (re.* (re.+ (str.to_re ",,"))) (re.++ (re.union (re.union (str.to_re "--") (str.to_re "..")) (re.* (str.to_re "///"))) (re.++ (re.+ (re.+ (str.to_re "::"))) (re.union (re.union (str.to_re ";;") (str.to_re "<<")) (re.+ (str.to_re "="))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.union (re.union (str.to_re "0") (str.to_re "11")) (re.* (str.to_re "222"))) (re.++ (re.union (re.+ (str.to_re "333")) (re.* (str.to_re "4"))) (re.++ (re.* (re.* (str.to_re "55"))) (re.++ (re.* (re.* (str.to_re "6"))) (re.++ (re.union (re.* (str.to_re "777")) (re.+ (str.to_re "8"))) (re.++ (re.* (re.* (str.to_re "999"))) (re.++ (re.union (re.* (str.to_re "aa")) (re.+ (str.to_re "bb"))) (re.++ (re.* (re.+ (str.to_re "ccc"))) (re.++ (re.+ (re.* (str.to_re "d"))) (re.++ (re.* (re.union (str.to_re "eee") (str.to_re "fff"))) (re.++ (re.* (re.* (str.to_re "g"))) (re.++ (re.* (re.union (str.to_re "h") (str.to_re "i"))) (re.++ (re.union (re.* (str.to_re "jj")) (re.* (str.to_re "k"))) (re.++ (re.+ (re.union (str.to_re "l") (str.to_re "mmm"))) (re.++ (re.union (re.* (str.to_re "nnn")) (re.+ (str.to_re "oo"))) (re.++ (re.union (re.* (str.to_re "ppp")) (re.union (str.to_re "qq") (str.to_re "rr"))) (re.++ (re.+ (re.+ (str.to_re "s"))) (re.++ (re.+ (re.* (str.to_re "t"))) (re.++ (re.* (re.* (str.to_re "uu"))) (re.++ (re.union (re.* (str.to_re "vvv")) (re.* (str.to_re "w"))) (re.++ (re.+ (re.union (str.to_re "xxx") (str.to_re "y"))) (re.++ (re.* (re.+ (str.to_re "zzz"))) (re.++ (re.union (re.* (str.to_re "A")) (re.union (str.to_re "BB") (str.to_re "C"))) (re.++ (re.union (re.union (str.to_re "D") (str.to_re "E")) (re.union (str.to_re "FF") (str.to_re "G"))) (re.++ (re.union (re.+ (str.to_re "HHH")) (re.+ (str.to_re "I"))) (re.++ (re.union (re.union (str.to_re "JJ") (str.to_re "KKK")) (re.+ (str.to_re "LL"))) (re.++ (re.* (re.* (str.to_re "MMM"))) (re.++ (re.* (re.* (str.to_re "N"))) (re.++ (re.* (re.union (str.to_re "O") (str.to_re "PPP"))) (re.++ (re.union (re.* (str.to_re "QQ")) (re.union (str.to_re "RRR") (str.to_re "SS"))) (re.++ (re.+ (re.union (str.to_re "T") (str.to_re "UUU"))) (re.++ (re.union (re.* (str.to_re "VV")) (re.union (str.to_re "WWW") (str.to_re "XXX"))) (re.++ (re.* (re.+ (str.to_re "Y"))) (re.++ (re.union (re.+ (str.to_re "Z")) (re.+ (str.to_re "!"))) (re.++ (re.+ (re.* (str.to_re """"))) (re.++ (re.* (re.* (str.to_re "##"))) (re.++ (re.+ (re.* (str.to_re "$$"))) (re.++ (re.* (re.union (str.to_re "%%") (str.to_re "&&&"))) (re.++ (re.* (re.union (str.to_re "'") (str.to_re "("))) (re.++ (re.union (re.* (str.to_re "))")) (re.* (str.to_re "***"))) (re.++ (re.union (re.+ (str.to_re "++")) (re.union (str.to_re ",") (str.to_re "--"))) (re.++ (re.* (re.+ (str.to_re "..."))) (re.++ (re.union (re.* (str.to_re "//")) (re.union (str.to_re ":::") (str.to_re ";"))) (re.++ (re.union (re.+ (str.to_re "<")) (re.union (str.to_re "=") (str.to_re ">>>"))) (re.++ (re.+ (re.* (str.to_re "??"))) (re.+ (re.union (str.to_re "@@") (str.to_re "[")))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
