(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "00")) (re.* (str.to_re "1"))) (re.++ (re.+ (re.+ (str.to_re "222"))) (re.++ (re.union (re.* (str.to_re "3")) (re.union (str.to_re "444") (str.to_re "55"))) (re.++ (re.* (re.* (str.to_re "66"))) (re.++ (re.+ (re.* (str.to_re "77"))) (re.++ (re.* (re.+ (str.to_re "88"))) (re.++ (re.* (re.* (str.to_re "9"))) (re.++ (re.* (re.union (str.to_re "aaa") (str.to_re "b"))) (re.++ (re.union (re.union (str.to_re "cc") (str.to_re "d")) (re.* (str.to_re "eee"))) (re.++ (re.+ (re.+ (str.to_re "fff"))) (re.++ (re.+ (re.union (str.to_re "g") (str.to_re "hhh"))) (re.++ (re.* (re.+ (str.to_re "ii"))) (re.++ (re.union (re.* (str.to_re "jj")) (re.union (str.to_re "k") (str.to_re "ll"))) (re.++ (re.+ (re.union (str.to_re "mm") (str.to_re "nnn"))) (re.++ (re.union (re.union (str.to_re "ooo") (str.to_re "ppp")) (re.* (str.to_re "q"))) (re.++ (re.* (re.* (str.to_re "rr"))) (re.++ (re.+ (re.union (str.to_re "ss") (str.to_re "ttt"))) (re.++ (re.union (re.union (str.to_re "uu") (str.to_re "vv")) (re.* (str.to_re "ww"))) (re.++ (re.union (re.union (str.to_re "xxx") (str.to_re "y")) (re.union (str.to_re "zz") (str.to_re "A"))) (re.++ (re.+ (re.+ (str.to_re "B"))) (re.++ (re.* (re.+ (str.to_re "CCC"))) (re.++ (re.+ (re.* (str.to_re "DD"))) (re.++ (re.* (re.union (str.to_re "EE") (str.to_re "FF"))) (re.++ (re.union (re.union (str.to_re "G") (str.to_re "HHH")) (re.* (str.to_re "III"))) (re.++ (re.* (re.union (str.to_re "JJJ") (str.to_re "K"))) (re.++ (re.* (re.union (str.to_re "LLL") (str.to_re "MM"))) (re.++ (re.+ (re.union (str.to_re "NN") (str.to_re "O"))) (re.++ (re.union (re.+ (str.to_re "PPP")) (re.* (str.to_re "QQ"))) (re.++ (re.union (re.union (str.to_re "RR") (str.to_re "S")) (re.union (str.to_re "TTT") (str.to_re "U"))) (re.++ (re.+ (re.* (str.to_re "VVV"))) (re.++ (re.+ (re.* (str.to_re "WWW"))) (re.++ (re.* (re.union (str.to_re "XX") (str.to_re "Y"))) (re.++ (re.* (re.union (str.to_re "ZZZ") (str.to_re "!"))) (re.++ (re.union (re.* (str.to_re """""""")) (re.+ (str.to_re "#"))) (re.++ (re.union (re.union (str.to_re "$") (str.to_re "%")) (re.+ (str.to_re "&"))) (re.++ (re.union (re.union (str.to_re "'") (str.to_re "(((")) (re.+ (str.to_re ")))"))) (re.++ (re.union (re.* (str.to_re "***")) (re.union (str.to_re "+") (str.to_re ",,"))) (re.++ (re.union (re.+ (str.to_re "---")) (re.union (str.to_re "...") (str.to_re "///"))) (re.++ (re.* (re.* (str.to_re ":::"))) (re.++ (re.+ (re.union (str.to_re ";") (str.to_re "<<"))) (re.+ (re.+ (str.to_re "==")))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "0") (str.to_re "111"))) (re.++ (re.union (re.+ (str.to_re "222")) (re.union (str.to_re "3") (str.to_re "4"))) (re.++ (re.* (re.+ (str.to_re "5"))) (re.++ (re.+ (re.+ (str.to_re "666"))) (re.++ (re.* (re.+ (str.to_re "7"))) (re.++ (re.+ (re.* (str.to_re "88"))) (re.++ (re.union (re.* (str.to_re "999")) (re.* (str.to_re "aaa"))) (re.++ (re.union (re.union (str.to_re "bb") (str.to_re "ccc")) (re.+ (str.to_re "dd"))) (re.++ (re.* (re.+ (str.to_re "ee"))) (re.++ (re.* (re.union (str.to_re "ff") (str.to_re "ggg"))) (re.++ (re.* (re.+ (str.to_re "hhh"))) (re.++ (re.union (re.* (str.to_re "iii")) (re.+ (str.to_re "jj"))) (re.++ (re.union (re.* (str.to_re "kkk")) (re.+ (str.to_re "lll"))) (re.++ (re.* (re.union (str.to_re "mmm") (str.to_re "n"))) (re.++ (re.+ (re.union (str.to_re "ooo") (str.to_re "ppp"))) (re.++ (re.+ (re.union (str.to_re "qqq") (str.to_re "rrr"))) (re.++ (re.union (re.union (str.to_re "ss") (str.to_re "t")) (re.* (str.to_re "uu"))) (re.++ (re.* (re.union (str.to_re "vvv") (str.to_re "ww"))) (re.++ (re.+ (re.union (str.to_re "xxx") (str.to_re "yy"))) (re.++ (re.union (re.* (str.to_re "zz")) (re.+ (str.to_re "AAA"))) (re.++ (re.union (re.+ (str.to_re "BBB")) (re.+ (str.to_re "CC"))) (re.++ (re.* (re.+ (str.to_re "DD"))) (re.++ (re.+ (re.* (str.to_re "EEE"))) (re.++ (re.+ (re.* (str.to_re "FFF"))) (re.++ (re.* (re.union (str.to_re "GG") (str.to_re "H"))) (re.++ (re.union (re.* (str.to_re "II")) (re.union (str.to_re "J") (str.to_re "K"))) (re.++ (re.union (re.union (str.to_re "LL") (str.to_re "MMM")) (re.+ (str.to_re "N"))) (re.++ (re.union (re.+ (str.to_re "O")) (re.union (str.to_re "PP") (str.to_re "QQQ"))) (re.++ (re.union (re.* (str.to_re "RR")) (re.* (str.to_re "S"))) (re.++ (re.* (re.union (str.to_re "T") (str.to_re "UU"))) (re.++ (re.* (re.+ (str.to_re "VVV"))) (re.++ (re.+ (re.union (str.to_re "W") (str.to_re "XX"))) (re.++ (re.+ (re.union (str.to_re "YY") (str.to_re "ZZZ"))) (re.++ (re.union (re.* (str.to_re "!!!")) (re.+ (str.to_re """"))) (re.++ (re.* (re.union (str.to_re "##") (str.to_re "$"))) (re.++ (re.+ (re.union (str.to_re "%%") (str.to_re "&&&"))) (re.++ (re.* (re.+ (str.to_re "'"))) (re.++ (re.+ (re.union (str.to_re "(((") (str.to_re ")"))) (re.++ (re.* (re.* (str.to_re "**"))) (re.++ (re.union (re.* (str.to_re "++")) (re.* (str.to_re ",,,"))) (re.* (re.union (str.to_re "--") (str.to_re ".."))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
