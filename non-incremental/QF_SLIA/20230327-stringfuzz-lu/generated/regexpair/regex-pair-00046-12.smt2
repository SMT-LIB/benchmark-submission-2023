(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (str.to_re "000"))) (re.++ (re.* (re.union (str.to_re "11") (str.to_re "22"))) (re.++ (re.* (re.+ (str.to_re "3"))) (re.++ (re.union (re.* (str.to_re "444")) (re.union (str.to_re "555") (str.to_re "666"))) (re.++ (re.union (re.+ (str.to_re "777")) (re.* (str.to_re "8"))) (re.++ (re.union (re.union (str.to_re "999") (str.to_re "aaa")) (re.union (str.to_re "bbb") (str.to_re "ccc"))) (re.++ (re.union (re.* (str.to_re "d")) (re.union (str.to_re "e") (str.to_re "fff"))) (re.++ (re.* (re.* (str.to_re "g"))) (re.++ (re.union (re.+ (str.to_re "hh")) (re.+ (str.to_re "iii"))) (re.++ (re.* (re.* (str.to_re "jjj"))) (re.++ (re.+ (re.union (str.to_re "kkk") (str.to_re "lll"))) (re.++ (re.union (re.union (str.to_re "m") (str.to_re "n")) (re.* (str.to_re "o"))) (re.++ (re.+ (re.union (str.to_re "ppp") (str.to_re "q"))) (re.++ (re.* (re.union (str.to_re "rrr") (str.to_re "ss"))) (re.++ (re.union (re.* (str.to_re "tt")) (re.+ (str.to_re "uu"))) (re.++ (re.* (re.+ (str.to_re "v"))) (re.++ (re.union (re.union (str.to_re "w") (str.to_re "xx")) (re.union (str.to_re "yy") (str.to_re "zz"))) (re.++ (re.union (re.+ (str.to_re "AAA")) (re.+ (str.to_re "BB"))) (re.++ (re.union (re.* (str.to_re "CC")) (re.* (str.to_re "D"))) (re.++ (re.union (re.+ (str.to_re "E")) (re.union (str.to_re "FFF") (str.to_re "GG"))) (re.++ (re.+ (re.+ (str.to_re "HHH"))) (re.++ (re.union (re.union (str.to_re "II") (str.to_re "JJ")) (re.union (str.to_re "KKK") (str.to_re "L"))) (re.++ (re.union (re.* (str.to_re "MM")) (re.+ (str.to_re "NNN"))) (re.++ (re.union (re.union (str.to_re "OOO") (str.to_re "P")) (re.+ (str.to_re "QQQ"))) (re.++ (re.+ (re.union (str.to_re "R") (str.to_re "SS"))) (re.++ (re.* (re.union (str.to_re "T") (str.to_re "U"))) (re.++ (re.+ (re.* (str.to_re "V"))) (re.++ (re.+ (re.* (str.to_re "WWW"))) (re.++ (re.+ (re.* (str.to_re "X"))) (re.++ (re.union (re.* (str.to_re "Y")) (re.union (str.to_re "ZZ") (str.to_re "!!"))) (re.++ (re.union (re.+ (str.to_re """""""")) (re.* (str.to_re "#"))) (re.++ (re.+ (re.* (str.to_re "$$$"))) (re.++ (re.union (re.union (str.to_re "%%") (str.to_re "&")) (re.+ (str.to_re "''"))) (re.++ (re.* (re.+ (str.to_re "("))) (re.++ (re.* (re.union (str.to_re ")))") (str.to_re "*"))) (re.++ (re.* (re.+ (str.to_re "+"))) (re.++ (re.* (re.union (str.to_re ",,") (str.to_re "-"))) (re.++ (re.union (re.+ (str.to_re "...")) (re.* (str.to_re "///"))) (re.++ (re.union (re.union (str.to_re "::") (str.to_re ";;")) (re.+ (str.to_re "<<"))) (re.++ (re.+ (re.* (str.to_re "=="))) (re.++ (re.* (re.* (str.to_re ">>"))) (re.++ (re.+ (re.union (str.to_re "???") (str.to_re "@@@"))) (re.++ (re.* (re.union (str.to_re "[") (str.to_re "\\\\\\"))) (re.++ (re.* (re.+ (str.to_re "]"))) (re.++ (re.union (re.union (str.to_re "^") (str.to_re "___")) (re.* (str.to_re "``"))) (re.+ (re.* (str.to_re "{{"))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "00") (str.to_re "11"))) (re.++ (re.* (re.union (str.to_re "22") (str.to_re "3"))) (re.++ (re.union (re.+ (str.to_re "4")) (re.union (str.to_re "555") (str.to_re "66"))) (re.++ (re.+ (re.union (str.to_re "777") (str.to_re "888"))) (re.++ (re.union (re.+ (str.to_re "99")) (re.* (str.to_re "aa"))) (re.++ (re.union (re.union (str.to_re "bbb") (str.to_re "cc")) (re.union (str.to_re "dd") (str.to_re "e"))) (re.++ (re.+ (re.union (str.to_re "ff") (str.to_re "g"))) (re.++ (re.union (re.union (str.to_re "h") (str.to_re "iii")) (re.* (str.to_re "jj"))) (re.++ (re.* (re.+ (str.to_re "kk"))) (re.++ (re.* (re.* (str.to_re "ll"))) (re.++ (re.* (re.union (str.to_re "m") (str.to_re "nnn"))) (re.++ (re.* (re.union (str.to_re "ooo") (str.to_re "ppp"))) (re.++ (re.union (re.* (str.to_re "q")) (re.* (str.to_re "r"))) (re.++ (re.union (re.+ (str.to_re "ss")) (re.* (str.to_re "ttt"))) (re.++ (re.* (re.union (str.to_re "uu") (str.to_re "vvv"))) (re.++ (re.+ (re.* (str.to_re "www"))) (re.++ (re.union (re.* (str.to_re "xxx")) (re.* (str.to_re "yy"))) (re.++ (re.+ (re.+ (str.to_re "zzz"))) (re.++ (re.* (re.* (str.to_re "AAA"))) (re.++ (re.* (re.* (str.to_re "BB"))) (re.++ (re.+ (re.* (str.to_re "CC"))) (re.++ (re.* (re.+ (str.to_re "DDD"))) (re.++ (re.union (re.* (str.to_re "E")) (re.union (str.to_re "F") (str.to_re "GGG"))) (re.++ (re.+ (re.+ (str.to_re "HHH"))) (re.++ (re.union (re.+ (str.to_re "III")) (re.* (str.to_re "J"))) (re.++ (re.union (re.+ (str.to_re "K")) (re.* (str.to_re "LL"))) (re.++ (re.+ (re.+ (str.to_re "M"))) (re.++ (re.* (re.+ (str.to_re "N"))) (re.++ (re.union (re.* (str.to_re "O")) (re.union (str.to_re "P") (str.to_re "QQ"))) (re.++ (re.* (re.* (str.to_re "RR"))) (re.++ (re.union (re.* (str.to_re "SSS")) (re.+ (str.to_re "TTT"))) (re.++ (re.+ (re.* (str.to_re "UUU"))) (re.++ (re.union (re.* (str.to_re "VVV")) (re.* (str.to_re "W"))) (re.++ (re.+ (re.+ (str.to_re "X"))) (re.++ (re.+ (re.union (str.to_re "YY") (str.to_re "ZZ"))) (re.++ (re.* (re.* (str.to_re "!!!"))) (re.++ (re.* (re.+ (str.to_re """"))) (re.++ (re.union (re.* (str.to_re "###")) (re.* (str.to_re "$$"))) (re.++ (re.* (re.+ (str.to_re "%%"))) (re.++ (re.* (re.+ (str.to_re "&&&"))) (re.++ (re.* (re.* (str.to_re "''"))) (re.++ (re.union (re.* (str.to_re "(((")) (re.* (str.to_re ")))"))) (re.++ (re.union (re.* (str.to_re "*")) (re.* (str.to_re "++"))) (re.++ (re.* (re.union (str.to_re ",,") (str.to_re "--"))) (re.++ (re.+ (re.+ (str.to_re ".."))) (re.union (re.+ (str.to_re "/")) (re.+ (str.to_re ":")))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
