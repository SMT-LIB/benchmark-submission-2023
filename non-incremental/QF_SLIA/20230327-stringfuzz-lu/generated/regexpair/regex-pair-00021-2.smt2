(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "0")) (re.* (str.to_re "111"))) (re.++ (re.+ (re.* (str.to_re "222"))) (re.++ (re.union (re.* (str.to_re "3")) (re.union (str.to_re "44") (str.to_re "555"))) (re.++ (re.+ (re.* (str.to_re "6"))) (re.++ (re.+ (re.* (str.to_re "7"))) (re.++ (re.union (re.* (str.to_re "8")) (re.* (str.to_re "999"))) (re.++ (re.+ (re.+ (str.to_re "aaa"))) (re.++ (re.* (re.* (str.to_re "b"))) (re.++ (re.union (re.+ (str.to_re "c")) (re.union (str.to_re "ddd") (str.to_re "eee"))) (re.++ (re.union (re.union (str.to_re "ff") (str.to_re "g")) (re.union (str.to_re "hh") (str.to_re "ii"))) (re.++ (re.union (re.* (str.to_re "jj")) (re.* (str.to_re "kk"))) (re.++ (re.+ (re.union (str.to_re "l") (str.to_re "m"))) (re.++ (re.union (re.+ (str.to_re "nn")) (re.union (str.to_re "o") (str.to_re "p"))) (re.++ (re.+ (re.* (str.to_re "qq"))) (re.++ (re.union (re.* (str.to_re "rrr")) (re.union (str.to_re "s") (str.to_re "t"))) (re.++ (re.union (re.* (str.to_re "uuu")) (re.union (str.to_re "vvv") (str.to_re "w"))) (re.++ (re.* (re.union (str.to_re "xx") (str.to_re "yy"))) (re.++ (re.union (re.+ (str.to_re "zzz")) (re.* (str.to_re "AA"))) (re.++ (re.union (re.+ (str.to_re "B")) (re.union (str.to_re "CCC") (str.to_re "DDD"))) (re.++ (re.* (re.* (str.to_re "EE"))) (re.* (re.union (str.to_re "FFF") (str.to_re "G")))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "000"))) (re.++ (re.union (re.* (str.to_re "111")) (re.union (str.to_re "222") (str.to_re "33"))) (re.++ (re.* (re.+ (str.to_re "444"))) (re.++ (re.union (re.* (str.to_re "55")) (re.+ (str.to_re "6"))) (re.++ (re.+ (re.* (str.to_re "7"))) (re.++ (re.+ (re.* (str.to_re "8"))) (re.++ (re.* (re.+ (str.to_re "99"))) (re.++ (re.+ (re.* (str.to_re "aa"))) (re.++ (re.* (re.union (str.to_re "b") (str.to_re "cc"))) (re.++ (re.+ (re.+ (str.to_re "ddd"))) (re.++ (re.+ (re.+ (str.to_re "ee"))) (re.++ (re.union (re.union (str.to_re "fff") (str.to_re "g")) (re.* (str.to_re "hhh"))) (re.++ (re.* (re.* (str.to_re "i"))) (re.++ (re.* (re.* (str.to_re "j"))) (re.++ (re.union (re.* (str.to_re "k")) (re.* (str.to_re "lll"))) (re.++ (re.* (re.union (str.to_re "m") (str.to_re "nn"))) (re.++ (re.union (re.union (str.to_re "ooo") (str.to_re "p")) (re.union (str.to_re "qqq") (str.to_re "rr"))) (re.++ (re.union (re.+ (str.to_re "sss")) (re.union (str.to_re "ttt") (str.to_re "uu"))) (re.++ (re.union (re.* (str.to_re "vv")) (re.+ (str.to_re "ww"))) (re.++ (re.union (re.union (str.to_re "xx") (str.to_re "yyy")) (re.* (str.to_re "zzz"))) (re.union (re.union (str.to_re "AAA") (str.to_re "B")) (re.+ (str.to_re "CC"))))))))))))))))))))))))))
(check-sat)
(exit)
