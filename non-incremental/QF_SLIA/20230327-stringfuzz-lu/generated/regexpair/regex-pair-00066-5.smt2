(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "0"))) (re.++ (re.+ (re.+ (str.to_re "111"))) (re.++ (re.+ (re.+ (str.to_re "2"))) (re.++ (re.union (re.* (str.to_re "333")) (re.+ (str.to_re "44"))) (re.++ (re.* (re.union (str.to_re "55") (str.to_re "66"))) (re.++ (re.+ (re.union (str.to_re "7") (str.to_re "88"))) (re.++ (re.+ (re.union (str.to_re "999") (str.to_re "a"))) (re.++ (re.* (re.+ (str.to_re "bb"))) (re.++ (re.+ (re.* (str.to_re "ccc"))) (re.++ (re.union (re.+ (str.to_re "ddd")) (re.union (str.to_re "eee") (str.to_re "ff"))) (re.++ (re.* (re.union (str.to_re "ggg") (str.to_re "hh"))) (re.++ (re.+ (re.union (str.to_re "i") (str.to_re "j"))) (re.++ (re.* (re.union (str.to_re "kk") (str.to_re "lll"))) (re.++ (re.+ (re.+ (str.to_re "mm"))) (re.++ (re.+ (re.+ (str.to_re "n"))) (re.++ (re.* (re.+ (str.to_re "o"))) (re.++ (re.* (re.+ (str.to_re "p"))) (re.++ (re.+ (re.union (str.to_re "qq") (str.to_re "rr"))) (re.++ (re.* (re.union (str.to_re "s") (str.to_re "t"))) (re.++ (re.* (re.union (str.to_re "u") (str.to_re "vvv"))) (re.++ (re.union (re.* (str.to_re "w")) (re.+ (str.to_re "x"))) (re.++ (re.union (re.+ (str.to_re "yy")) (re.+ (str.to_re "zz"))) (re.++ (re.+ (re.union (str.to_re "AA") (str.to_re "BB"))) (re.++ (re.union (re.+ (str.to_re "CCC")) (re.+ (str.to_re "DDD"))) (re.++ (re.union (re.* (str.to_re "E")) (re.* (str.to_re "FF"))) (re.++ (re.* (re.union (str.to_re "GGG") (str.to_re "HHH"))) (re.++ (re.union (re.union (str.to_re "II") (str.to_re "JJJ")) (re.+ (str.to_re "K"))) (re.++ (re.* (re.+ (str.to_re "LLL"))) (re.++ (re.union (re.* (str.to_re "M")) (re.+ (str.to_re "N"))) (re.++ (re.* (re.union (str.to_re "O") (str.to_re "P"))) (re.++ (re.union (re.union (str.to_re "QQ") (str.to_re "RRR")) (re.union (str.to_re "S") (str.to_re "T"))) (re.++ (re.* (re.+ (str.to_re "UU"))) (re.++ (re.* (re.union (str.to_re "V") (str.to_re "WW"))) (re.++ (re.* (re.+ (str.to_re "X"))) (re.++ (re.* (re.union (str.to_re "YY") (str.to_re "Z"))) (re.++ (re.union (re.+ (str.to_re "!!!")) (re.* (str.to_re """"""))) (re.++ (re.* (re.union (str.to_re "##") (str.to_re "$$$"))) (re.++ (re.union (re.union (str.to_re "%%%") (str.to_re "&")) (re.union (str.to_re "'''") (str.to_re "((("))) (re.++ (re.union (re.* (str.to_re ")))")) (re.union (str.to_re "***") (str.to_re "++"))) (re.++ (re.+ (re.+ (str.to_re ",,"))) (re.++ (re.union (re.* (str.to_re "---")) (re.* (str.to_re ".."))) (re.++ (re.union (re.+ (str.to_re "//")) (re.* (str.to_re ":"))) (re.++ (re.union (re.* (str.to_re ";;")) (re.+ (str.to_re "<"))) (re.++ (re.* (re.union (str.to_re "==") (str.to_re ">"))) (re.++ (re.+ (re.* (str.to_re "?"))) (re.++ (re.+ (re.* (str.to_re "@@"))) (re.++ (re.* (re.union (str.to_re "[[[") (str.to_re "\\"))) (re.++ (re.union (re.union (str.to_re "]]]") (str.to_re "^^")) (re.* (str.to_re "_"))) (re.++ (re.union (re.* (str.to_re "`")) (re.* (str.to_re "{"))) (re.++ (re.union (re.union (str.to_re "|") (str.to_re "}}}")) (re.union (str.to_re "~~") (str.to_re "00"))) (re.++ (re.* (re.+ (str.to_re "11"))) (re.++ (re.union (re.+ (str.to_re "22")) (re.union (str.to_re "333") (str.to_re "44"))) (re.++ (re.union (re.* (str.to_re "555")) (re.* (str.to_re "6"))) (re.++ (re.+ (re.union (str.to_re "77") (str.to_re "88"))) (re.++ (re.union (re.union (str.to_re "9") (str.to_re "a")) (re.+ (str.to_re "bb"))) (re.++ (re.* (re.union (str.to_re "c") (str.to_re "dd"))) (re.++ (re.union (re.union (str.to_re "ee") (str.to_re "fff")) (re.* (str.to_re "g"))) (re.++ (re.+ (re.* (str.to_re "hhh"))) (re.++ (re.union (re.+ (str.to_re "iii")) (re.union (str.to_re "jj") (str.to_re "kkk"))) (re.++ (re.* (re.union (str.to_re "l") (str.to_re "mmm"))) (re.++ (re.union (re.* (str.to_re "nnn")) (re.* (str.to_re "ooo"))) (re.++ (re.* (re.union (str.to_re "p") (str.to_re "q"))) (re.++ (re.* (re.* (str.to_re "rr"))) (re.++ (re.* (re.+ (str.to_re "sss"))) (re.++ (re.* (re.+ (str.to_re "t"))) (re.union (re.* (str.to_re "uu")) (re.union (str.to_re "v") (str.to_re "ww"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "00"))) (re.++ (re.+ (re.* (str.to_re "111"))) (re.++ (re.+ (re.* (str.to_re "2"))) (re.++ (re.union (re.* (str.to_re "33")) (re.+ (str.to_re "444"))) (re.++ (re.* (re.union (str.to_re "555") (str.to_re "6"))) (re.++ (re.union (re.* (str.to_re "7")) (re.+ (str.to_re "888"))) (re.++ (re.union (re.union (str.to_re "999") (str.to_re "aa")) (re.* (str.to_re "b"))) (re.++ (re.union (re.+ (str.to_re "cc")) (re.* (str.to_re "dd"))) (re.++ (re.* (re.union (str.to_re "e") (str.to_re "ff"))) (re.++ (re.+ (re.* (str.to_re "ggg"))) (re.++ (re.+ (re.* (str.to_re "hhh"))) (re.++ (re.* (re.union (str.to_re "i") (str.to_re "jjj"))) (re.++ (re.* (re.* (str.to_re "kkk"))) (re.++ (re.* (re.+ (str.to_re "ll"))) (re.++ (re.union (re.+ (str.to_re "m")) (re.union (str.to_re "n") (str.to_re "o"))) (re.++ (re.union (re.union (str.to_re "p") (str.to_re "qqq")) (re.union (str.to_re "rrr") (str.to_re "sss"))) (re.++ (re.union (re.+ (str.to_re "t")) (re.* (str.to_re "uuu"))) (re.++ (re.+ (re.* (str.to_re "vvv"))) (re.++ (re.* (re.union (str.to_re "w") (str.to_re "xxx"))) (re.++ (re.union (re.* (str.to_re "yy")) (re.union (str.to_re "z") (str.to_re "A"))) (re.++ (re.union (re.* (str.to_re "BB")) (re.* (str.to_re "C"))) (re.++ (re.+ (re.* (str.to_re "DDD"))) (re.++ (re.* (re.union (str.to_re "EE") (str.to_re "FF"))) (re.++ (re.+ (re.+ (str.to_re "GG"))) (re.++ (re.+ (re.+ (str.to_re "H"))) (re.++ (re.* (re.union (str.to_re "II") (str.to_re "J"))) (re.++ (re.union (re.* (str.to_re "KK")) (re.+ (str.to_re "LL"))) (re.++ (re.+ (re.* (str.to_re "MMM"))) (re.++ (re.+ (re.+ (str.to_re "N"))) (re.++ (re.* (re.+ (str.to_re "OOO"))) (re.++ (re.* (re.union (str.to_re "PP") (str.to_re "QQQ"))) (re.++ (re.union (re.union (str.to_re "RRR") (str.to_re "S")) (re.* (str.to_re "T"))) (re.++ (re.* (re.* (str.to_re "U"))) (re.++ (re.+ (re.union (str.to_re "VVV") (str.to_re "W"))) (re.++ (re.union (re.* (str.to_re "XX")) (re.+ (str.to_re "Y"))) (re.++ (re.+ (re.+ (str.to_re "Z"))) (re.++ (re.union (re.union (str.to_re "!!!") (str.to_re """""""")) (re.+ (str.to_re "###"))) (re.++ (re.+ (re.* (str.to_re "$"))) (re.++ (re.union (re.union (str.to_re "%") (str.to_re "&&")) (re.* (str.to_re "'''"))) (re.++ (re.+ (re.+ (str.to_re "("))) (re.++ (re.+ (re.* (str.to_re "))"))) (re.++ (re.+ (re.+ (str.to_re "***"))) (re.++ (re.+ (re.+ (str.to_re "+"))) (re.++ (re.+ (re.union (str.to_re ",,") (str.to_re "---"))) (re.++ (re.union (re.* (str.to_re "..")) (re.+ (str.to_re "//"))) (re.++ (re.+ (re.* (str.to_re "::"))) (re.++ (re.+ (re.+ (str.to_re ";;"))) (re.++ (re.+ (re.+ (str.to_re "<<<"))) (re.++ (re.* (re.+ (str.to_re "=="))) (re.++ (re.* (re.* (str.to_re ">>>"))) (re.++ (re.union (re.* (str.to_re "??")) (re.* (str.to_re "@@"))) (re.++ (re.* (re.* (str.to_re "[[["))) (re.++ (re.* (re.+ (str.to_re "\\\\\\"))) (re.++ (re.* (re.+ (str.to_re "]]"))) (re.++ (re.union (re.union (str.to_re "^") (str.to_re "___")) (re.union (str.to_re "`") (str.to_re "{"))) (re.++ (re.+ (re.union (str.to_re "||") (str.to_re "}"))) (re.++ (re.union (re.* (str.to_re "~~~")) (re.* (str.to_re "00"))) (re.++ (re.* (re.union (str.to_re "11") (str.to_re "2"))) (re.++ (re.* (re.+ (str.to_re "333"))) (re.++ (re.union (re.union (str.to_re "444") (str.to_re "555")) (re.+ (str.to_re "66"))) (re.++ (re.+ (re.union (str.to_re "7") (str.to_re "888"))) (re.++ (re.* (re.union (str.to_re "9") (str.to_re "a"))) (re.++ (re.+ (re.+ (str.to_re "bb"))) (re.++ (re.union (re.+ (str.to_re "cc")) (re.* (str.to_re "d"))) (re.++ (re.union (re.* (str.to_re "e")) (re.+ (str.to_re "ff"))) (re.+ (re.* (str.to_re "gg")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
