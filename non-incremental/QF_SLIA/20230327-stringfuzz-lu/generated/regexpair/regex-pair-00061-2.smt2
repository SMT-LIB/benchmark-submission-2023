(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "00")) (re.+ (str.to_re "111"))) (re.++ (re.* (re.* (str.to_re "222"))) (re.++ (re.* (re.+ (str.to_re "3"))) (re.++ (re.* (re.+ (str.to_re "44"))) (re.++ (re.* (re.* (str.to_re "555"))) (re.++ (re.* (re.union (str.to_re "666") (str.to_re "777"))) (re.++ (re.+ (re.+ (str.to_re "8"))) (re.++ (re.union (re.* (str.to_re "999")) (re.+ (str.to_re "aa"))) (re.++ (re.* (re.* (str.to_re "bbb"))) (re.++ (re.union (re.* (str.to_re "ccc")) (re.+ (str.to_re "ddd"))) (re.++ (re.* (re.union (str.to_re "e") (str.to_re "fff"))) (re.++ (re.union (re.* (str.to_re "g")) (re.union (str.to_re "h") (str.to_re "ii"))) (re.++ (re.* (re.union (str.to_re "jj") (str.to_re "kkk"))) (re.++ (re.union (re.* (str.to_re "lll")) (re.* (str.to_re "mm"))) (re.++ (re.+ (re.+ (str.to_re "nn"))) (re.++ (re.+ (re.+ (str.to_re "ooo"))) (re.++ (re.+ (re.* (str.to_re "pp"))) (re.++ (re.+ (re.+ (str.to_re "qq"))) (re.++ (re.+ (re.* (str.to_re "r"))) (re.++ (re.* (re.* (str.to_re "ss"))) (re.++ (re.+ (re.* (str.to_re "ttt"))) (re.++ (re.union (re.* (str.to_re "uuu")) (re.+ (str.to_re "vvv"))) (re.++ (re.union (re.+ (str.to_re "w")) (re.+ (str.to_re "x"))) (re.++ (re.union (re.* (str.to_re "y")) (re.* (str.to_re "zzz"))) (re.++ (re.union (re.+ (str.to_re "AA")) (re.union (str.to_re "BB") (str.to_re "C"))) (re.++ (re.union (re.+ (str.to_re "DD")) (re.* (str.to_re "E"))) (re.++ (re.* (re.* (str.to_re "FFF"))) (re.++ (re.+ (re.* (str.to_re "GG"))) (re.++ (re.union (re.+ (str.to_re "HH")) (re.+ (str.to_re "II"))) (re.++ (re.* (re.+ (str.to_re "J"))) (re.++ (re.* (re.union (str.to_re "K") (str.to_re "LLL"))) (re.++ (re.union (re.+ (str.to_re "M")) (re.+ (str.to_re "NN"))) (re.++ (re.union (re.union (str.to_re "O") (str.to_re "P")) (re.* (str.to_re "QQ"))) (re.++ (re.* (re.+ (str.to_re "R"))) (re.++ (re.union (re.union (str.to_re "S") (str.to_re "T")) (re.union (str.to_re "UU") (str.to_re "V"))) (re.++ (re.* (re.union (str.to_re "W") (str.to_re "X"))) (re.++ (re.* (re.* (str.to_re "YYY"))) (re.++ (re.+ (re.union (str.to_re "ZZZ") (str.to_re "!"))) (re.++ (re.+ (re.union (str.to_re """""") (str.to_re "#"))) (re.++ (re.+ (re.+ (str.to_re "$$"))) (re.++ (re.+ (re.union (str.to_re "%") (str.to_re "&"))) (re.++ (re.union (re.union (str.to_re "''") (str.to_re "(")) (re.+ (str.to_re ")))"))) (re.++ (re.union (re.union (str.to_re "**") (str.to_re "++")) (re.+ (str.to_re ",,"))) (re.++ (re.* (re.+ (str.to_re "---"))) (re.++ (re.union (re.* (str.to_re "...")) (re.+ (str.to_re "///"))) (re.++ (re.union (re.union (str.to_re ":::") (str.to_re ";;")) (re.+ (str.to_re "<<"))) (re.++ (re.+ (re.* (str.to_re "="))) (re.++ (re.union (re.* (str.to_re ">>")) (re.union (str.to_re "?") (str.to_re "@@"))) (re.++ (re.+ (re.* (str.to_re "["))) (re.++ (re.* (re.+ (str.to_re "\\"))) (re.++ (re.+ (re.* (str.to_re "]]]"))) (re.++ (re.* (re.* (str.to_re "^^"))) (re.++ (re.union (re.* (str.to_re "__")) (re.* (str.to_re "``"))) (re.++ (re.* (re.+ (str.to_re "{"))) (re.++ (re.* (re.union (str.to_re "|||") (str.to_re "}"))) (re.++ (re.+ (re.+ (str.to_re "~~~"))) (re.++ (re.* (re.+ (str.to_re "00"))) (re.++ (re.* (re.* (str.to_re "1"))) (re.++ (re.* (re.union (str.to_re "2") (str.to_re "3"))) (re.++ (re.+ (re.+ (str.to_re "444"))) (re.+ (re.* (str.to_re "5")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "00")) (re.union (str.to_re "11") (str.to_re "22"))) (re.++ (re.union (re.union (str.to_re "3") (str.to_re "4")) (re.+ (str.to_re "555"))) (re.++ (re.+ (re.+ (str.to_re "666"))) (re.++ (re.* (re.* (str.to_re "7"))) (re.++ (re.* (re.* (str.to_re "88"))) (re.++ (re.union (re.union (str.to_re "99") (str.to_re "a")) (re.union (str.to_re "bbb") (str.to_re "cc"))) (re.++ (re.union (re.* (str.to_re "ddd")) (re.union (str.to_re "ee") (str.to_re "f"))) (re.++ (re.* (re.* (str.to_re "ggg"))) (re.++ (re.+ (re.+ (str.to_re "h"))) (re.++ (re.+ (re.union (str.to_re "i") (str.to_re "jj"))) (re.++ (re.+ (re.+ (str.to_re "k"))) (re.++ (re.+ (re.+ (str.to_re "lll"))) (re.++ (re.* (re.+ (str.to_re "m"))) (re.++ (re.+ (re.* (str.to_re "nnn"))) (re.++ (re.union (re.union (str.to_re "oo") (str.to_re "p")) (re.+ (str.to_re "q"))) (re.++ (re.+ (re.* (str.to_re "rrr"))) (re.++ (re.union (re.union (str.to_re "sss") (str.to_re "tt")) (re.* (str.to_re "u"))) (re.++ (re.* (re.union (str.to_re "vvv") (str.to_re "w"))) (re.++ (re.+ (re.+ (str.to_re "xxx"))) (re.++ (re.union (re.+ (str.to_re "yy")) (re.union (str.to_re "zzz") (str.to_re "A"))) (re.++ (re.+ (re.* (str.to_re "BBB"))) (re.++ (re.* (re.+ (str.to_re "CC"))) (re.++ (re.+ (re.* (str.to_re "D"))) (re.++ (re.+ (re.union (str.to_re "EEE") (str.to_re "FF"))) (re.++ (re.* (re.* (str.to_re "GG"))) (re.++ (re.* (re.union (str.to_re "H") (str.to_re "II"))) (re.++ (re.union (re.+ (str.to_re "JJ")) (re.+ (str.to_re "KKK"))) (re.++ (re.union (re.* (str.to_re "LL")) (re.* (str.to_re "MM"))) (re.++ (re.union (re.+ (str.to_re "N")) (re.* (str.to_re "OO"))) (re.++ (re.union (re.union (str.to_re "P") (str.to_re "QQ")) (re.+ (str.to_re "RRR"))) (re.++ (re.union (re.* (str.to_re "S")) (re.union (str.to_re "TT") (str.to_re "UU"))) (re.++ (re.* (re.+ (str.to_re "V"))) (re.++ (re.union (re.union (str.to_re "WW") (str.to_re "X")) (re.+ (str.to_re "YY"))) (re.++ (re.* (re.union (str.to_re "ZZ") (str.to_re "!"))) (re.++ (re.union (re.union (str.to_re """""""") (str.to_re "###")) (re.* (str.to_re "$$"))) (re.++ (re.union (re.union (str.to_re "%") (str.to_re "&&")) (re.+ (str.to_re "'''"))) (re.++ (re.+ (re.union (str.to_re "(((") (str.to_re ")"))) (re.++ (re.* (re.* (str.to_re "**"))) (re.++ (re.union (re.union (str.to_re "+") (str.to_re ",")) (re.union (str.to_re "---") (str.to_re ".."))) (re.++ (re.union (re.* (str.to_re "//")) (re.* (str.to_re "::"))) (re.++ (re.* (re.* (str.to_re ";;;"))) (re.++ (re.+ (re.* (str.to_re "<"))) (re.++ (re.+ (re.* (str.to_re "=="))) (re.++ (re.* (re.* (str.to_re ">>>"))) (re.++ (re.* (re.union (str.to_re "???") (str.to_re "@"))) (re.++ (re.+ (re.* (str.to_re "["))) (re.++ (re.+ (re.* (str.to_re "\\"))) (re.++ (re.* (re.union (str.to_re "]") (str.to_re "^^^"))) (re.++ (re.union (re.union (str.to_re "___") (str.to_re "`")) (re.* (str.to_re "{{{"))) (re.++ (re.* (re.* (str.to_re "||"))) (re.++ (re.* (re.union (str.to_re "}}}") (str.to_re "~~~"))) (re.++ (re.* (re.* (str.to_re "000"))) (re.++ (re.* (re.union (str.to_re "111") (str.to_re "222"))) (re.++ (re.union (re.+ (str.to_re "33")) (re.union (str.to_re "4") (str.to_re "5"))) (re.++ (re.+ (re.union (str.to_re "666") (str.to_re "777"))) (re.++ (re.union (re.+ (str.to_re "888")) (re.* (str.to_re "999"))) (re.++ (re.+ (re.* (str.to_re "a"))) (re.++ (re.+ (re.union (str.to_re "b") (str.to_re "c"))) (re.++ (re.+ (re.+ (str.to_re "dd"))) (re.++ (re.union (re.union (str.to_re "ee") (str.to_re "f")) (re.* (str.to_re "ggg"))) (re.union (re.* (str.to_re "h")) (re.union (str.to_re "i") (str.to_re "j"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
