(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "0")) (re.union (str.to_re "11") (str.to_re "2"))) (re.++ (re.+ (re.union (str.to_re "33") (str.to_re "444"))) (re.++ (re.* (re.union (str.to_re "5") (str.to_re "666"))) (re.++ (re.+ (re.+ (str.to_re "77"))) (re.++ (re.* (re.+ (str.to_re "8"))) (re.++ (re.+ (re.union (str.to_re "99") (str.to_re "a"))) (re.++ (re.union (re.* (str.to_re "bbb")) (re.union (str.to_re "ccc") (str.to_re "dd"))) (re.++ (re.union (re.union (str.to_re "e") (str.to_re "ff")) (re.* (str.to_re "gg"))) (re.++ (re.union (re.+ (str.to_re "hh")) (re.+ (str.to_re "i"))) (re.++ (re.* (re.union (str.to_re "jj") (str.to_re "kkk"))) (re.++ (re.union (re.* (str.to_re "l")) (re.union (str.to_re "m") (str.to_re "nn"))) (re.++ (re.* (re.union (str.to_re "ooo") (str.to_re "ppp"))) (re.++ (re.union (re.* (str.to_re "qqq")) (re.+ (str.to_re "r"))) (re.++ (re.union (re.+ (str.to_re "sss")) (re.union (str.to_re "tt") (str.to_re "u"))) (re.++ (re.+ (re.union (str.to_re "vv") (str.to_re "w"))) (re.++ (re.* (re.+ (str.to_re "xxx"))) (re.++ (re.* (re.union (str.to_re "yyy") (str.to_re "zz"))) (re.++ (re.+ (re.union (str.to_re "AA") (str.to_re "B"))) (re.++ (re.* (re.union (str.to_re "CCC") (str.to_re "D"))) (re.++ (re.* (re.union (str.to_re "EEE") (str.to_re "FF"))) (re.++ (re.* (re.* (str.to_re "G"))) (re.++ (re.union (re.* (str.to_re "HHH")) (re.* (str.to_re "I"))) (re.++ (re.* (re.* (str.to_re "J"))) (re.++ (re.* (re.union (str.to_re "K") (str.to_re "L"))) (re.++ (re.* (re.union (str.to_re "MM") (str.to_re "N"))) (re.++ (re.union (re.* (str.to_re "OO")) (re.+ (str.to_re "PP"))) (re.++ (re.+ (re.* (str.to_re "Q"))) (re.++ (re.* (re.+ (str.to_re "RRR"))) (re.++ (re.+ (re.* (str.to_re "S"))) (re.++ (re.union (re.+ (str.to_re "TT")) (re.* (str.to_re "UU"))) (re.++ (re.union (re.* (str.to_re "V")) (re.+ (str.to_re "WWW"))) (re.++ (re.+ (re.* (str.to_re "XX"))) (re.++ (re.+ (re.* (str.to_re "YY"))) (re.++ (re.+ (re.+ (str.to_re "ZZZ"))) (re.++ (re.union (re.+ (str.to_re "!!!")) (re.* (str.to_re """"))) (re.++ (re.union (re.+ (str.to_re "###")) (re.+ (str.to_re "$$"))) (re.++ (re.* (re.+ (str.to_re "%%%"))) (re.++ (re.* (re.union (str.to_re "&&") (str.to_re "'"))) (re.++ (re.union (re.+ (str.to_re "(")) (re.* (str.to_re ")"))) (re.++ (re.union (re.+ (str.to_re "*")) (re.* (str.to_re "+++"))) (re.++ (re.+ (re.union (str.to_re ",") (str.to_re "--"))) (re.++ (re.* (re.* (str.to_re "."))) (re.++ (re.+ (re.+ (str.to_re "/"))) (re.++ (re.* (re.+ (str.to_re ":"))) (re.++ (re.+ (re.* (str.to_re ";"))) (re.++ (re.* (re.union (str.to_re "<<") (str.to_re "==="))) (re.++ (re.union (re.union (str.to_re ">>>") (str.to_re "?")) (re.+ (str.to_re "@"))) (re.++ (re.+ (re.* (str.to_re "["))) (re.++ (re.+ (re.union (str.to_re "\\\\\\") (str.to_re "]"))) (re.++ (re.* (re.+ (str.to_re "^"))) (re.union (re.union (str.to_re "_") (str.to_re "``")) (re.+ (str.to_re "{{{")))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.* (re.union (str.to_re "00") (str.to_re "11"))) (re.++ (re.union (re.union (str.to_re "22") (str.to_re "3")) (re.+ (str.to_re "4"))) (re.++ (re.* (re.union (str.to_re "55") (str.to_re "666"))) (re.++ (re.* (re.union (str.to_re "7") (str.to_re "88"))) (re.++ (re.union (re.+ (str.to_re "99")) (re.union (str.to_re "aa") (str.to_re "bbb"))) (re.++ (re.union (re.* (str.to_re "c")) (re.+ (str.to_re "ddd"))) (re.++ (re.* (re.+ (str.to_re "eee"))) (re.++ (re.+ (re.union (str.to_re "ff") (str.to_re "ggg"))) (re.++ (re.* (re.+ (str.to_re "hhh"))) (re.++ (re.+ (re.+ (str.to_re "ii"))) (re.++ (re.+ (re.* (str.to_re "j"))) (re.++ (re.* (re.+ (str.to_re "k"))) (re.++ (re.union (re.* (str.to_re "ll")) (re.* (str.to_re "m"))) (re.++ (re.union (re.union (str.to_re "nnn") (str.to_re "o")) (re.+ (str.to_re "ppp"))) (re.++ (re.* (re.union (str.to_re "q") (str.to_re "rr"))) (re.++ (re.union (re.* (str.to_re "s")) (re.* (str.to_re "tt"))) (re.++ (re.union (re.union (str.to_re "uu") (str.to_re "v")) (re.* (str.to_re "w"))) (re.++ (re.union (re.union (str.to_re "x") (str.to_re "yyy")) (re.* (str.to_re "zzz"))) (re.++ (re.union (re.+ (str.to_re "AAA")) (re.union (str.to_re "B") (str.to_re "C"))) (re.++ (re.* (re.union (str.to_re "DDD") (str.to_re "E"))) (re.++ (re.+ (re.+ (str.to_re "F"))) (re.++ (re.union (re.* (str.to_re "GG")) (re.+ (str.to_re "H"))) (re.++ (re.+ (re.* (str.to_re "II"))) (re.++ (re.union (re.union (str.to_re "J") (str.to_re "KKK")) (re.union (str.to_re "LLL") (str.to_re "MMM"))) (re.++ (re.+ (re.+ (str.to_re "N"))) (re.++ (re.+ (re.+ (str.to_re "OOO"))) (re.++ (re.* (re.+ (str.to_re "PP"))) (re.++ (re.+ (re.union (str.to_re "Q") (str.to_re "RR"))) (re.++ (re.+ (re.+ (str.to_re "S"))) (re.++ (re.union (re.* (str.to_re "T")) (re.+ (str.to_re "UU"))) (re.++ (re.+ (re.union (str.to_re "V") (str.to_re "W"))) (re.++ (re.+ (re.union (str.to_re "X") (str.to_re "YYY"))) (re.++ (re.union (re.* (str.to_re "Z")) (re.* (str.to_re "!"))) (re.++ (re.* (re.union (str.to_re """""") (str.to_re "#"))) (re.++ (re.* (re.union (str.to_re "$") (str.to_re "%%%"))) (re.++ (re.union (re.* (str.to_re "&&&")) (re.* (str.to_re "''"))) (re.++ (re.+ (re.union (str.to_re "((") (str.to_re ")"))) (re.++ (re.* (re.* (str.to_re "***"))) (re.++ (re.union (re.* (str.to_re "+++")) (re.* (str.to_re ","))) (re.++ (re.union (re.+ (str.to_re "---")) (re.+ (str.to_re "."))) (re.++ (re.+ (re.* (str.to_re "/"))) (re.++ (re.+ (re.union (str.to_re ":") (str.to_re ";;"))) (re.++ (re.+ (re.* (str.to_re "<"))) (re.++ (re.+ (re.* (str.to_re "==="))) (re.++ (re.union (re.* (str.to_re ">>")) (re.union (str.to_re "?") (str.to_re "@@"))) (re.++ (re.* (re.+ (str.to_re "[[["))) (re.++ (re.* (re.union (str.to_re "\\") (str.to_re "]"))) (re.++ (re.* (re.* (str.to_re "^^"))) (re.++ (re.+ (re.* (str.to_re "___"))) (re.++ (re.+ (re.* (str.to_re "`"))) (re.+ (re.+ (str.to_re "{{{"))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
