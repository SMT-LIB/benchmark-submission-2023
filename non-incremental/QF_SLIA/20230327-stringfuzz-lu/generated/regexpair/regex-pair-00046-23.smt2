(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (str.to_re "000") (str.to_re "1")) (re.union (str.to_re "22") (str.to_re "333"))) (re.++ (re.+ (re.union (str.to_re "4") (str.to_re "55"))) (re.++ (re.* (re.union (str.to_re "66") (str.to_re "777"))) (re.++ (re.* (re.+ (str.to_re "8"))) (re.++ (re.union (re.+ (str.to_re "99")) (re.+ (str.to_re "a"))) (re.++ (re.* (re.union (str.to_re "bbb") (str.to_re "cc"))) (re.++ (re.* (re.+ (str.to_re "dd"))) (re.++ (re.union (re.+ (str.to_re "e")) (re.+ (str.to_re "fff"))) (re.++ (re.union (re.union (str.to_re "gg") (str.to_re "h")) (re.* (str.to_re "ii"))) (re.++ (re.* (re.* (str.to_re "jjj"))) (re.++ (re.* (re.+ (str.to_re "kkk"))) (re.++ (re.+ (re.+ (str.to_re "ll"))) (re.++ (re.union (re.+ (str.to_re "mmm")) (re.* (str.to_re "nnn"))) (re.++ (re.* (re.+ (str.to_re "o"))) (re.++ (re.* (re.+ (str.to_re "ppp"))) (re.++ (re.+ (re.* (str.to_re "qqq"))) (re.++ (re.* (re.* (str.to_re "rr"))) (re.++ (re.+ (re.union (str.to_re "s") (str.to_re "ttt"))) (re.++ (re.+ (re.union (str.to_re "uu") (str.to_re "v"))) (re.++ (re.+ (re.* (str.to_re "ww"))) (re.++ (re.union (re.union (str.to_re "x") (str.to_re "yy")) (re.* (str.to_re "zz"))) (re.++ (re.* (re.union (str.to_re "A") (str.to_re "BBB"))) (re.++ (re.union (re.+ (str.to_re "C")) (re.union (str.to_re "D") (str.to_re "EE"))) (re.++ (re.union (re.+ (str.to_re "FF")) (re.+ (str.to_re "GGG"))) (re.++ (re.+ (re.+ (str.to_re "HHH"))) (re.++ (re.union (re.+ (str.to_re "I")) (re.+ (str.to_re "J"))) (re.++ (re.union (re.* (str.to_re "KK")) (re.union (str.to_re "L") (str.to_re "MM"))) (re.++ (re.+ (re.+ (str.to_re "N"))) (re.++ (re.* (re.+ (str.to_re "O"))) (re.++ (re.* (re.* (str.to_re "PP"))) (re.++ (re.* (re.* (str.to_re "Q"))) (re.++ (re.union (re.union (str.to_re "R") (str.to_re "SS")) (re.+ (str.to_re "T"))) (re.++ (re.union (re.+ (str.to_re "UUU")) (re.+ (str.to_re "VVV"))) (re.++ (re.union (re.* (str.to_re "W")) (re.+ (str.to_re "XXX"))) (re.++ (re.union (re.+ (str.to_re "YY")) (re.+ (str.to_re "Z"))) (re.++ (re.+ (re.+ (str.to_re "!"))) (re.++ (re.* (re.union (str.to_re """""""") (str.to_re "#"))) (re.++ (re.* (re.union (str.to_re "$") (str.to_re "%"))) (re.++ (re.* (re.* (str.to_re "&&&"))) (re.++ (re.union (re.* (str.to_re "'")) (re.* (str.to_re "(("))) (re.++ (re.union (re.union (str.to_re ")))") (str.to_re "***")) (re.* (str.to_re "+++"))) (re.++ (re.+ (re.union (str.to_re ",,,") (str.to_re "--"))) (re.++ (re.union (re.union (str.to_re "...") (str.to_re "//")) (re.+ (str.to_re "::"))) (re.++ (re.union (re.* (str.to_re ";;")) (re.union (str.to_re "<<<") (str.to_re "=="))) (re.++ (re.* (re.+ (str.to_re ">"))) (re.union (re.+ (str.to_re "??")) (re.union (str.to_re "@") (str.to_re "[[["))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "00"))) (re.++ (re.union (re.union (str.to_re "1") (str.to_re "2")) (re.* (str.to_re "3"))) (re.++ (re.* (re.* (str.to_re "4"))) (re.++ (re.union (re.+ (str.to_re "555")) (re.union (str.to_re "66") (str.to_re "7"))) (re.++ (re.union (re.union (str.to_re "88") (str.to_re "999")) (re.+ (str.to_re "a"))) (re.++ (re.union (re.union (str.to_re "bb") (str.to_re "c")) (re.+ (str.to_re "dd"))) (re.++ (re.* (re.+ (str.to_re "eee"))) (re.++ (re.* (re.+ (str.to_re "f"))) (re.++ (re.union (re.+ (str.to_re "gg")) (re.* (str.to_re "hh"))) (re.++ (re.* (re.* (str.to_re "i"))) (re.++ (re.* (re.union (str.to_re "jjj") (str.to_re "k"))) (re.++ (re.union (re.* (str.to_re "ll")) (re.+ (str.to_re "m"))) (re.++ (re.* (re.* (str.to_re "nn"))) (re.++ (re.union (re.+ (str.to_re "oo")) (re.* (str.to_re "ppp"))) (re.++ (re.* (re.+ (str.to_re "qq"))) (re.++ (re.* (re.+ (str.to_re "r"))) (re.++ (re.* (re.union (str.to_re "s") (str.to_re "tt"))) (re.++ (re.+ (re.+ (str.to_re "u"))) (re.++ (re.* (re.* (str.to_re "vvv"))) (re.++ (re.* (re.union (str.to_re "w") (str.to_re "xx"))) (re.++ (re.* (re.+ (str.to_re "y"))) (re.++ (re.* (re.+ (str.to_re "zzz"))) (re.++ (re.union (re.union (str.to_re "AAA") (str.to_re "B")) (re.+ (str.to_re "CC"))) (re.++ (re.+ (re.+ (str.to_re "D"))) (re.++ (re.+ (re.+ (str.to_re "EEE"))) (re.++ (re.union (re.union (str.to_re "FFF") (str.to_re "GGG")) (re.* (str.to_re "HHH"))) (re.++ (re.* (re.+ (str.to_re "I"))) (re.++ (re.* (re.* (str.to_re "JJJ"))) (re.++ (re.* (re.union (str.to_re "KK") (str.to_re "L"))) (re.++ (re.+ (re.union (str.to_re "MMM") (str.to_re "NNN"))) (re.++ (re.+ (re.* (str.to_re "O"))) (re.++ (re.+ (re.* (str.to_re "PPP"))) (re.++ (re.* (re.union (str.to_re "QQQ") (str.to_re "RRR"))) (re.++ (re.* (re.+ (str.to_re "S"))) (re.++ (re.+ (re.* (str.to_re "T"))) (re.++ (re.union (re.+ (str.to_re "U")) (re.+ (str.to_re "VVV"))) (re.++ (re.+ (re.+ (str.to_re "W"))) (re.++ (re.* (re.* (str.to_re "XXX"))) (re.++ (re.+ (re.union (str.to_re "Y") (str.to_re "ZZZ"))) (re.++ (re.+ (re.union (str.to_re "!!") (str.to_re """"""))) (re.++ (re.union (re.+ (str.to_re "##")) (re.* (str.to_re "$"))) (re.++ (re.union (re.+ (str.to_re "%%")) (re.+ (str.to_re "&"))) (re.++ (re.* (re.union (str.to_re "''") (str.to_re "("))) (re.++ (re.+ (re.+ (str.to_re ")"))) (re.++ (re.* (re.* (str.to_re "**"))) (re.union (re.union (str.to_re "+") (str.to_re ",,")) (re.* (str.to_re "-")))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
