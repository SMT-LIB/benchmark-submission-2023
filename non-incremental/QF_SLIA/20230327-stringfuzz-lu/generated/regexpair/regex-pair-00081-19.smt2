(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "000") (str.to_re "111"))) (re.++ (re.+ (re.* (str.to_re "22"))) (re.++ (re.union (re.* (str.to_re "3")) (re.+ (str.to_re "4"))) (re.++ (re.* (re.* (str.to_re "55"))) (re.++ (re.+ (re.* (str.to_re "66"))) (re.++ (re.+ (re.* (str.to_re "7"))) (re.++ (re.* (re.* (str.to_re "8"))) (re.++ (re.union (re.union (str.to_re "99") (str.to_re "a")) (re.* (str.to_re "bb"))) (re.++ (re.* (re.* (str.to_re "cc"))) (re.++ (re.+ (re.union (str.to_re "d") (str.to_re "e"))) (re.++ (re.union (re.* (str.to_re "f")) (re.* (str.to_re "ggg"))) (re.++ (re.union (re.union (str.to_re "hhh") (str.to_re "i")) (re.+ (str.to_re "jj"))) (re.++ (re.union (re.+ (str.to_re "k")) (re.union (str.to_re "lll") (str.to_re "mmm"))) (re.++ (re.union (re.union (str.to_re "nn") (str.to_re "o")) (re.* (str.to_re "ppp"))) (re.++ (re.* (re.union (str.to_re "qqq") (str.to_re "r"))) (re.++ (re.+ (re.* (str.to_re "sss"))) (re.++ (re.union (re.+ (str.to_re "ttt")) (re.+ (str.to_re "uuu"))) (re.++ (re.union (re.+ (str.to_re "v")) (re.* (str.to_re "w"))) (re.++ (re.union (re.* (str.to_re "xxx")) (re.+ (str.to_re "yy"))) (re.++ (re.union (re.union (str.to_re "zz") (str.to_re "A")) (re.* (str.to_re "BB"))) (re.++ (re.* (re.union (str.to_re "C") (str.to_re "DD"))) (re.++ (re.+ (re.union (str.to_re "EE") (str.to_re "FF"))) (re.++ (re.+ (re.union (str.to_re "GG") (str.to_re "HH"))) (re.++ (re.+ (re.* (str.to_re "I"))) (re.++ (re.+ (re.* (str.to_re "JJJ"))) (re.++ (re.* (re.+ (str.to_re "K"))) (re.++ (re.+ (re.* (str.to_re "LLL"))) (re.++ (re.union (re.union (str.to_re "M") (str.to_re "N")) (re.+ (str.to_re "OOO"))) (re.++ (re.+ (re.+ (str.to_re "P"))) (re.++ (re.+ (re.* (str.to_re "Q"))) (re.++ (re.* (re.union (str.to_re "RRR") (str.to_re "S"))) (re.++ (re.union (re.* (str.to_re "TT")) (re.union (str.to_re "UUU") (str.to_re "VVV"))) (re.++ (re.union (re.union (str.to_re "WWW") (str.to_re "XXX")) (re.* (str.to_re "Y"))) (re.++ (re.* (re.* (str.to_re "Z"))) (re.++ (re.union (re.+ (str.to_re "!")) (re.+ (str.to_re """"""))) (re.++ (re.union (re.* (str.to_re "##")) (re.union (str.to_re "$$$") (str.to_re "%"))) (re.++ (re.+ (re.+ (str.to_re "&"))) (re.++ (re.+ (re.* (str.to_re "''"))) (re.++ (re.* (re.+ (str.to_re "("))) (re.++ (re.union (re.union (str.to_re ")") (str.to_re "**")) (re.* (str.to_re "++"))) (re.++ (re.+ (re.* (str.to_re ",,,"))) (re.++ (re.union (re.+ (str.to_re "---")) (re.+ (str.to_re "..."))) (re.++ (re.* (re.+ (str.to_re "//"))) (re.++ (re.+ (re.union (str.to_re ":::") (str.to_re ";;"))) (re.++ (re.+ (re.union (str.to_re "<") (str.to_re "="))) (re.++ (re.+ (re.union (str.to_re ">") (str.to_re "???"))) (re.++ (re.union (re.union (str.to_re "@@") (str.to_re "[[")) (re.* (str.to_re "\\\\\\"))) (re.++ (re.+ (re.union (str.to_re "]") (str.to_re "^"))) (re.++ (re.union (re.+ (str.to_re "_")) (re.union (str.to_re "`") (str.to_re "{{"))) (re.++ (re.* (re.+ (str.to_re "||"))) (re.++ (re.* (re.* (str.to_re "}}"))) (re.++ (re.+ (re.+ (str.to_re "~"))) (re.++ (re.union (re.union (str.to_re "000") (str.to_re "111")) (re.+ (str.to_re "222"))) (re.++ (re.union (re.+ (str.to_re "333")) (re.+ (str.to_re "444"))) (re.++ (re.union (re.* (str.to_re "555")) (re.+ (str.to_re "66"))) (re.++ (re.union (re.union (str.to_re "777") (str.to_re "88")) (re.* (str.to_re "9"))) (re.++ (re.+ (re.* (str.to_re "a"))) (re.++ (re.* (re.union (str.to_re "bbb") (str.to_re "cc"))) (re.++ (re.union (re.+ (str.to_re "dd")) (re.* (str.to_re "eee"))) (re.++ (re.union (re.* (str.to_re "ff")) (re.union (str.to_re "ggg") (str.to_re "h"))) (re.++ (re.union (re.* (str.to_re "iii")) (re.+ (str.to_re "jjj"))) (re.++ (re.union (re.* (str.to_re "kk")) (re.union (str.to_re "lll") (str.to_re "m"))) (re.++ (re.union (re.union (str.to_re "n") (str.to_re "o")) (re.+ (str.to_re "ppp"))) (re.++ (re.union (re.+ (str.to_re "q")) (re.+ (str.to_re "rr"))) (re.++ (re.+ (re.+ (str.to_re "s"))) (re.++ (re.+ (re.* (str.to_re "tt"))) (re.++ (re.* (re.union (str.to_re "u") (str.to_re "vvv"))) (re.++ (re.* (re.+ (str.to_re "w"))) (re.++ (re.* (re.* (str.to_re "xx"))) (re.++ (re.union (re.union (str.to_re "yyy") (str.to_re "zzz")) (re.+ (str.to_re "AA"))) (re.++ (re.+ (re.+ (str.to_re "BBB"))) (re.++ (re.* (re.+ (str.to_re "CC"))) (re.++ (re.* (re.* (str.to_re "D"))) (re.++ (re.* (re.+ (str.to_re "EEE"))) (re.++ (re.union (re.* (str.to_re "FFF")) (re.* (str.to_re "GG"))) (re.++ (re.* (re.* (str.to_re "HH"))) (re.++ (re.* (re.* (str.to_re "I"))) (re.++ (re.union (re.* (str.to_re "JJ")) (re.* (str.to_re "K"))) (re.++ (re.* (re.* (str.to_re "LLL"))) (re.++ (re.* (re.* (str.to_re "MM"))) (re.union (re.* (str.to_re "N")) (re.+ (str.to_re "OO")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.* (re.union (str.to_re "000") (str.to_re "11"))) (re.++ (re.* (re.* (str.to_re "222"))) (re.++ (re.union (re.+ (str.to_re "333")) (re.union (str.to_re "44") (str.to_re "555"))) (re.++ (re.+ (re.* (str.to_re "6"))) (re.++ (re.* (re.* (str.to_re "77"))) (re.++ (re.union (re.union (str.to_re "8") (str.to_re "999")) (re.union (str.to_re "a") (str.to_re "b"))) (re.++ (re.+ (re.union (str.to_re "cc") (str.to_re "ddd"))) (re.++ (re.+ (re.* (str.to_re "e"))) (re.++ (re.* (re.+ (str.to_re "ff"))) (re.++ (re.+ (re.union (str.to_re "g") (str.to_re "hhh"))) (re.++ (re.+ (re.* (str.to_re "i"))) (re.++ (re.+ (re.union (str.to_re "j") (str.to_re "kk"))) (re.++ (re.union (re.union (str.to_re "lll") (str.to_re "m")) (re.+ (str.to_re "n"))) (re.++ (re.+ (re.union (str.to_re "oo") (str.to_re "p"))) (re.++ (re.+ (re.* (str.to_re "q"))) (re.++ (re.* (re.* (str.to_re "rrr"))) (re.++ (re.union (re.+ (str.to_re "s")) (re.+ (str.to_re "t"))) (re.++ (re.* (re.+ (str.to_re "uu"))) (re.++ (re.union (re.* (str.to_re "vvv")) (re.+ (str.to_re "w"))) (re.++ (re.+ (re.* (str.to_re "xxx"))) (re.++ (re.union (re.* (str.to_re "yyy")) (re.* (str.to_re "zzz"))) (re.++ (re.union (re.+ (str.to_re "A")) (re.* (str.to_re "BB"))) (re.++ (re.+ (re.* (str.to_re "CCC"))) (re.++ (re.* (re.+ (str.to_re "DDD"))) (re.++ (re.* (re.+ (str.to_re "EEE"))) (re.++ (re.* (re.union (str.to_re "FF") (str.to_re "GGG"))) (re.++ (re.* (re.* (str.to_re "HH"))) (re.++ (re.* (re.+ (str.to_re "II"))) (re.++ (re.* (re.* (str.to_re "JJ"))) (re.++ (re.+ (re.* (str.to_re "KK"))) (re.++ (re.union (re.union (str.to_re "LL") (str.to_re "MMM")) (re.union (str.to_re "NNN") (str.to_re "OOO"))) (re.++ (re.union (re.* (str.to_re "PP")) (re.union (str.to_re "QQ") (str.to_re "RR"))) (re.++ (re.* (re.* (str.to_re "S"))) (re.++ (re.* (re.* (str.to_re "TT"))) (re.++ (re.+ (re.+ (str.to_re "UUU"))) (re.++ (re.union (re.+ (str.to_re "VV")) (re.+ (str.to_re "WWW"))) (re.++ (re.+ (re.union (str.to_re "XX") (str.to_re "YY"))) (re.++ (re.union (re.+ (str.to_re "ZZ")) (re.* (str.to_re "!!!"))) (re.++ (re.+ (re.* (str.to_re """"""""))) (re.++ (re.+ (re.union (str.to_re "#") (str.to_re "$$"))) (re.++ (re.* (re.+ (str.to_re "%"))) (re.++ (re.union (re.* (str.to_re "&&")) (re.* (str.to_re "'''"))) (re.++ (re.union (re.* (str.to_re "(")) (re.+ (str.to_re ")))"))) (re.++ (re.+ (re.* (str.to_re "*"))) (re.++ (re.* (re.* (str.to_re "++"))) (re.++ (re.+ (re.* (str.to_re ",,,"))) (re.++ (re.+ (re.+ (str.to_re "--"))) (re.++ (re.* (re.union (str.to_re "..") (str.to_re "//"))) (re.++ (re.union (re.* (str.to_re "::")) (re.union (str.to_re ";") (str.to_re "<<"))) (re.++ (re.* (re.* (str.to_re "=="))) (re.++ (re.union (re.+ (str.to_re ">>>")) (re.+ (str.to_re "??"))) (re.++ (re.+ (re.* (str.to_re "@"))) (re.++ (re.union (re.+ (str.to_re "[[")) (re.* (str.to_re "\\\\"))) (re.++ (re.+ (re.+ (str.to_re "]]"))) (re.++ (re.+ (re.+ (str.to_re "^^^"))) (re.++ (re.union (re.union (str.to_re "__") (str.to_re "``")) (re.* (str.to_re "{{"))) (re.++ (re.* (re.union (str.to_re "||") (str.to_re "}}}"))) (re.++ (re.union (re.union (str.to_re "~~") (str.to_re "000")) (re.* (str.to_re "1"))) (re.++ (re.* (re.union (str.to_re "222") (str.to_re "33"))) (re.++ (re.union (re.* (str.to_re "4")) (re.* (str.to_re "5"))) (re.++ (re.union (re.union (str.to_re "666") (str.to_re "7")) (re.+ (str.to_re "8"))) (re.++ (re.+ (re.* (str.to_re "999"))) (re.++ (re.* (re.union (str.to_re "aaa") (str.to_re "b"))) (re.++ (re.union (re.* (str.to_re "ccc")) (re.* (str.to_re "dd"))) (re.++ (re.union (re.union (str.to_re "eee") (str.to_re "ff")) (re.* (str.to_re "ggg"))) (re.++ (re.union (re.* (str.to_re "h")) (re.+ (str.to_re "i"))) (re.++ (re.+ (re.* (str.to_re "jj"))) (re.++ (re.+ (re.+ (str.to_re "kkk"))) (re.++ (re.+ (re.+ (str.to_re "ll"))) (re.++ (re.+ (re.* (str.to_re "m"))) (re.++ (re.+ (re.union (str.to_re "nnn") (str.to_re "oo"))) (re.++ (re.* (re.* (str.to_re "ppp"))) (re.++ (re.* (re.* (str.to_re "qq"))) (re.++ (re.* (re.* (str.to_re "rrr"))) (re.++ (re.union (re.+ (str.to_re "sss")) (re.union (str.to_re "tt") (str.to_re "uu"))) (re.++ (re.union (re.union (str.to_re "vv") (str.to_re "w")) (re.+ (str.to_re "xxx"))) (re.++ (re.* (re.* (str.to_re "yyy"))) (re.++ (re.* (re.+ (str.to_re "z"))) (re.++ (re.* (re.union (str.to_re "AAA") (str.to_re "B"))) (re.++ (re.* (re.union (str.to_re "CCC") (str.to_re "DDD"))) (re.+ (re.+ (str.to_re "E"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
