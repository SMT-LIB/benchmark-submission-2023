(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "0"))) (re.++ (re.+ (re.+ (str.to_re "11"))) (re.++ (re.union (re.* (str.to_re "2")) (re.union (str.to_re "3") (str.to_re "44"))) (re.++ (re.* (re.union (str.to_re "55") (str.to_re "6"))) (re.++ (re.+ (re.union (str.to_re "7") (str.to_re "888"))) (re.++ (re.* (re.union (str.to_re "9") (str.to_re "aaa"))) (re.++ (re.+ (re.+ (str.to_re "bbb"))) (re.++ (re.* (re.union (str.to_re "c") (str.to_re "ddd"))) (re.++ (re.* (re.union (str.to_re "e") (str.to_re "ff"))) (re.++ (re.+ (re.union (str.to_re "g") (str.to_re "h"))) (re.++ (re.union (re.* (str.to_re "ii")) (re.+ (str.to_re "jj"))) (re.++ (re.* (re.+ (str.to_re "kk"))) (re.++ (re.+ (re.+ (str.to_re "ll"))) (re.++ (re.union (re.+ (str.to_re "mmm")) (re.union (str.to_re "nn") (str.to_re "ooo"))) (re.++ (re.union (re.* (str.to_re "ppp")) (re.+ (str.to_re "q"))) (re.++ (re.* (re.+ (str.to_re "rrr"))) (re.++ (re.+ (re.+ (str.to_re "s"))) (re.++ (re.+ (re.* (str.to_re "tt"))) (re.++ (re.+ (re.union (str.to_re "uuu") (str.to_re "v"))) (re.++ (re.* (re.union (str.to_re "www") (str.to_re "xx"))) (re.++ (re.+ (re.+ (str.to_re "yyy"))) (re.++ (re.* (re.union (str.to_re "zz") (str.to_re "AA"))) (re.++ (re.+ (re.union (str.to_re "BBB") (str.to_re "CC"))) (re.++ (re.+ (re.union (str.to_re "DD") (str.to_re "E"))) (re.++ (re.union (re.+ (str.to_re "FF")) (re.* (str.to_re "GG"))) (re.++ (re.union (re.+ (str.to_re "HH")) (re.+ (str.to_re "I"))) (re.++ (re.+ (re.union (str.to_re "JJJ") (str.to_re "K"))) (re.++ (re.union (re.union (str.to_re "LLL") (str.to_re "M")) (re.union (str.to_re "N") (str.to_re "O"))) (re.++ (re.union (re.+ (str.to_re "PP")) (re.* (str.to_re "QQ"))) (re.++ (re.+ (re.+ (str.to_re "R"))) (re.++ (re.union (re.* (str.to_re "SS")) (re.* (str.to_re "TTT"))) (re.++ (re.union (re.union (str.to_re "UU") (str.to_re "V")) (re.union (str.to_re "WW") (str.to_re "XXX"))) (re.++ (re.* (re.union (str.to_re "Y") (str.to_re "Z"))) (re.++ (re.union (re.union (str.to_re "!!!") (str.to_re """")) (re.* (str.to_re "###"))) (re.++ (re.* (re.+ (str.to_re "$$$"))) (re.++ (re.union (re.* (str.to_re "%%%")) (re.union (str.to_re "&") (str.to_re "''"))) (re.++ (re.union (re.+ (str.to_re "(((")) (re.union (str.to_re ")") (str.to_re "*"))) (re.++ (re.union (re.+ (str.to_re "+++")) (re.union (str.to_re ",,,") (str.to_re "-"))) (re.++ (re.union (re.union (str.to_re "..") (str.to_re "/")) (re.+ (str.to_re "::"))) (re.++ (re.+ (re.* (str.to_re ";;;"))) (re.++ (re.union (re.* (str.to_re "<<")) (re.union (str.to_re "==") (str.to_re ">>>"))) (re.++ (re.+ (re.+ (str.to_re "???"))) (re.++ (re.union (re.* (str.to_re "@@@")) (re.union (str.to_re "[[") (str.to_re "\\\\"))) (re.++ (re.union (re.* (str.to_re "]")) (re.union (str.to_re "^^") (str.to_re "_"))) (re.++ (re.union (re.* (str.to_re "`")) (re.union (str.to_re "{") (str.to_re "|"))) (re.++ (re.union (re.+ (str.to_re "}}}")) (re.+ (str.to_re "~~~"))) (re.++ (re.* (re.union (str.to_re "000") (str.to_re "1"))) (re.++ (re.union (re.+ (str.to_re "22")) (re.+ (str.to_re "33"))) (re.++ (re.+ (re.+ (str.to_re "44"))) (re.++ (re.+ (re.union (str.to_re "5") (str.to_re "666"))) (re.++ (re.+ (re.* (str.to_re "777"))) (re.++ (re.* (re.union (str.to_re "888") (str.to_re "99"))) (re.++ (re.* (re.* (str.to_re "aa"))) (re.++ (re.+ (re.* (str.to_re "bb"))) (re.++ (re.union (re.union (str.to_re "ccc") (str.to_re "dd")) (re.* (str.to_re "ee"))) (re.++ (re.* (re.union (str.to_re "ff") (str.to_re "ggg"))) (re.++ (re.union (re.* (str.to_re "hhh")) (re.* (str.to_re "i"))) (re.++ (re.union (re.+ (str.to_re "j")) (re.+ (str.to_re "kk"))) (re.++ (re.+ (re.+ (str.to_re "l"))) (re.++ (re.+ (re.union (str.to_re "m") (str.to_re "nnn"))) (re.++ (re.union (re.union (str.to_re "ooo") (str.to_re "pp")) (re.+ (str.to_re "qq"))) (re.++ (re.+ (re.* (str.to_re "rrr"))) (re.++ (re.* (re.* (str.to_re "sss"))) (re.++ (re.* (re.union (str.to_re "ttt") (str.to_re "uu"))) (re.++ (re.union (re.+ (str.to_re "v")) (re.* (str.to_re "ww"))) (re.* (re.* (str.to_re "xx"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "00"))) (re.++ (re.+ (re.union (str.to_re "11") (str.to_re "2"))) (re.++ (re.union (re.* (str.to_re "33")) (re.* (str.to_re "4"))) (re.++ (re.+ (re.union (str.to_re "5") (str.to_re "6"))) (re.++ (re.+ (re.+ (str.to_re "7"))) (re.++ (re.* (re.* (str.to_re "88"))) (re.++ (re.+ (re.union (str.to_re "99") (str.to_re "aa"))) (re.++ (re.+ (re.union (str.to_re "b") (str.to_re "c"))) (re.++ (re.* (re.union (str.to_re "ddd") (str.to_re "ee"))) (re.++ (re.union (re.+ (str.to_re "ff")) (re.+ (str.to_re "gg"))) (re.++ (re.* (re.union (str.to_re "hh") (str.to_re "iii"))) (re.++ (re.union (re.+ (str.to_re "jj")) (re.+ (str.to_re "kkk"))) (re.++ (re.union (re.* (str.to_re "lll")) (re.* (str.to_re "mmm"))) (re.++ (re.+ (re.+ (str.to_re "nnn"))) (re.++ (re.union (re.+ (str.to_re "o")) (re.* (str.to_re "pp"))) (re.++ (re.* (re.union (str.to_re "qqq") (str.to_re "rr"))) (re.++ (re.* (re.+ (str.to_re "ss"))) (re.++ (re.union (re.* (str.to_re "t")) (re.+ (str.to_re "u"))) (re.++ (re.union (re.* (str.to_re "vvv")) (re.union (str.to_re "ww") (str.to_re "xx"))) (re.++ (re.union (re.* (str.to_re "y")) (re.+ (str.to_re "zz"))) (re.++ (re.* (re.+ (str.to_re "A"))) (re.++ (re.union (re.+ (str.to_re "B")) (re.* (str.to_re "CCC"))) (re.++ (re.* (re.+ (str.to_re "DD"))) (re.++ (re.+ (re.union (str.to_re "E") (str.to_re "F"))) (re.++ (re.union (re.+ (str.to_re "GGG")) (re.+ (str.to_re "HH"))) (re.++ (re.* (re.* (str.to_re "III"))) (re.++ (re.union (re.+ (str.to_re "JJJ")) (re.+ (str.to_re "KKK"))) (re.++ (re.+ (re.+ (str.to_re "LL"))) (re.++ (re.+ (re.union (str.to_re "MM") (str.to_re "NN"))) (re.++ (re.union (re.+ (str.to_re "OOO")) (re.+ (str.to_re "PP"))) (re.++ (re.+ (re.union (str.to_re "Q") (str.to_re "RR"))) (re.++ (re.+ (re.* (str.to_re "S"))) (re.++ (re.+ (re.* (str.to_re "TT"))) (re.++ (re.* (re.union (str.to_re "U") (str.to_re "VV"))) (re.++ (re.* (re.+ (str.to_re "WWW"))) (re.++ (re.* (re.union (str.to_re "XX") (str.to_re "YY"))) (re.++ (re.union (re.union (str.to_re "Z") (str.to_re "!")) (re.+ (str.to_re """"""""))) (re.++ (re.* (re.union (str.to_re "##") (str.to_re "$$"))) (re.++ (re.+ (re.+ (str.to_re "%"))) (re.++ (re.+ (re.* (str.to_re "&&&"))) (re.++ (re.* (re.* (str.to_re "''"))) (re.++ (re.* (re.union (str.to_re "((") (str.to_re "))"))) (re.++ (re.* (re.+ (str.to_re "*"))) (re.++ (re.* (re.+ (str.to_re "+"))) (re.++ (re.+ (re.+ (str.to_re ",,"))) (re.++ (re.* (re.+ (str.to_re "--"))) (re.++ (re.+ (re.union (str.to_re "..") (str.to_re "/"))) (re.++ (re.union (re.* (str.to_re ":::")) (re.union (str.to_re ";;") (str.to_re "<"))) (re.++ (re.* (re.+ (str.to_re "=="))) (re.++ (re.* (re.* (str.to_re ">>"))) (re.++ (re.union (re.* (str.to_re "??")) (re.* (str.to_re "@"))) (re.++ (re.+ (re.union (str.to_re "[") (str.to_re "\\\\"))) (re.++ (re.union (re.union (str.to_re "]") (str.to_re "^")) (re.union (str.to_re "_") (str.to_re "`"))) (re.++ (re.* (re.+ (str.to_re "{"))) (re.++ (re.+ (re.* (str.to_re "|"))) (re.++ (re.* (re.+ (str.to_re "}"))) (re.++ (re.union (re.* (str.to_re "~~~")) (re.union (str.to_re "0") (str.to_re "1"))) (re.++ (re.+ (re.union (str.to_re "2") (str.to_re "3"))) (re.++ (re.union (re.+ (str.to_re "4")) (re.union (str.to_re "5") (str.to_re "6"))) (re.++ (re.* (re.union (str.to_re "77") (str.to_re "8"))) (re.++ (re.+ (re.* (str.to_re "999"))) (re.++ (re.+ (re.* (str.to_re "a"))) (re.++ (re.+ (re.+ (str.to_re "bb"))) (re.++ (re.+ (re.+ (str.to_re "c"))) (re.++ (re.+ (re.union (str.to_re "d") (str.to_re "e"))) (re.* (re.* (str.to_re "ff")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
