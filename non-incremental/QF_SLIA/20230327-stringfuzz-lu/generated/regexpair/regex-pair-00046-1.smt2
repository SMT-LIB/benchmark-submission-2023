(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "0")) (re.+ (str.to_re "11"))) (re.++ (re.+ (re.* (str.to_re "222"))) (re.++ (re.* (re.* (str.to_re "33"))) (re.++ (re.+ (re.union (str.to_re "4") (str.to_re "555"))) (re.++ (re.union (re.union (str.to_re "666") (str.to_re "7")) (re.union (str.to_re "88") (str.to_re "999"))) (re.++ (re.+ (re.+ (str.to_re "aaa"))) (re.++ (re.union (re.+ (str.to_re "bbb")) (re.* (str.to_re "ccc"))) (re.++ (re.+ (re.+ (str.to_re "d"))) (re.++ (re.union (re.* (str.to_re "ee")) (re.+ (str.to_re "fff"))) (re.++ (re.union (re.+ (str.to_re "g")) (re.+ (str.to_re "h"))) (re.++ (re.union (re.* (str.to_re "iii")) (re.* (str.to_re "j"))) (re.++ (re.union (re.union (str.to_re "kk") (str.to_re "lll")) (re.* (str.to_re "m"))) (re.++ (re.union (re.* (str.to_re "n")) (re.+ (str.to_re "oo"))) (re.++ (re.+ (re.+ (str.to_re "pp"))) (re.++ (re.+ (re.union (str.to_re "qq") (str.to_re "r"))) (re.++ (re.* (re.union (str.to_re "ss") (str.to_re "tt"))) (re.++ (re.union (re.+ (str.to_re "uu")) (re.* (str.to_re "vvv"))) (re.++ (re.* (re.+ (str.to_re "www"))) (re.++ (re.* (re.union (str.to_re "xxx") (str.to_re "y"))) (re.++ (re.+ (re.* (str.to_re "zzz"))) (re.++ (re.* (re.union (str.to_re "AA") (str.to_re "BBB"))) (re.++ (re.union (re.* (str.to_re "CC")) (re.+ (str.to_re "D"))) (re.++ (re.* (re.* (str.to_re "EE"))) (re.++ (re.+ (re.+ (str.to_re "F"))) (re.++ (re.+ (re.+ (str.to_re "G"))) (re.++ (re.* (re.+ (str.to_re "HH"))) (re.++ (re.union (re.+ (str.to_re "I")) (re.* (str.to_re "J"))) (re.++ (re.union (re.* (str.to_re "KK")) (re.* (str.to_re "LL"))) (re.++ (re.union (re.+ (str.to_re "M")) (re.* (str.to_re "N"))) (re.++ (re.* (re.* (str.to_re "O"))) (re.++ (re.* (re.+ (str.to_re "PPP"))) (re.++ (re.* (re.union (str.to_re "Q") (str.to_re "RR"))) (re.++ (re.union (re.union (str.to_re "SSS") (str.to_re "TT")) (re.* (str.to_re "UU"))) (re.++ (re.union (re.union (str.to_re "VVV") (str.to_re "WW")) (re.union (str.to_re "XXX") (str.to_re "YYY"))) (re.++ (re.union (re.* (str.to_re "Z")) (re.union (str.to_re "!!") (str.to_re """"))) (re.++ (re.+ (re.union (str.to_re "##") (str.to_re "$$"))) (re.++ (re.* (re.* (str.to_re "%"))) (re.++ (re.* (re.+ (str.to_re "&&"))) (re.++ (re.union (re.+ (str.to_re "'")) (re.* (str.to_re "((("))) (re.++ (re.union (re.* (str.to_re ")))")) (re.union (str.to_re "**") (str.to_re "+++"))) (re.++ (re.+ (re.* (str.to_re ","))) (re.++ (re.+ (re.union (str.to_re "--") (str.to_re "."))) (re.++ (re.+ (re.+ (str.to_re "//"))) (re.++ (re.+ (re.union (str.to_re "::") (str.to_re ";;"))) (re.++ (re.+ (re.union (str.to_re "<") (str.to_re "=="))) (re.* (re.union (str.to_re ">>>") (str.to_re "?"))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "00") (str.to_re "1"))) (re.++ (re.union (re.union (str.to_re "2") (str.to_re "3")) (re.+ (str.to_re "4"))) (re.++ (re.+ (re.union (str.to_re "5") (str.to_re "666"))) (re.++ (re.+ (re.union (str.to_re "77") (str.to_re "88"))) (re.++ (re.+ (re.union (str.to_re "999") (str.to_re "aa"))) (re.++ (re.+ (re.+ (str.to_re "b"))) (re.++ (re.union (re.union (str.to_re "cc") (str.to_re "ddd")) (re.* (str.to_re "e"))) (re.++ (re.+ (re.union (str.to_re "fff") (str.to_re "ggg"))) (re.++ (re.union (re.union (str.to_re "h") (str.to_re "iii")) (re.+ (str.to_re "j"))) (re.++ (re.+ (re.+ (str.to_re "kk"))) (re.++ (re.union (re.union (str.to_re "l") (str.to_re "mm")) (re.+ (str.to_re "n"))) (re.++ (re.+ (re.+ (str.to_re "o"))) (re.++ (re.union (re.* (str.to_re "p")) (re.union (str.to_re "qqq") (str.to_re "rrr"))) (re.++ (re.* (re.union (str.to_re "s") (str.to_re "tt"))) (re.++ (re.+ (re.* (str.to_re "uuu"))) (re.++ (re.+ (re.union (str.to_re "v") (str.to_re "www"))) (re.++ (re.+ (re.* (str.to_re "x"))) (re.++ (re.+ (re.+ (str.to_re "yyy"))) (re.++ (re.+ (re.union (str.to_re "zzz") (str.to_re "A"))) (re.++ (re.+ (re.* (str.to_re "BBB"))) (re.++ (re.+ (re.union (str.to_re "C") (str.to_re "DD"))) (re.++ (re.+ (re.+ (str.to_re "E"))) (re.++ (re.union (re.+ (str.to_re "FF")) (re.+ (str.to_re "GG"))) (re.++ (re.+ (re.union (str.to_re "H") (str.to_re "I"))) (re.++ (re.union (re.+ (str.to_re "JJ")) (re.+ (str.to_re "K"))) (re.++ (re.+ (re.union (str.to_re "LL") (str.to_re "MMM"))) (re.++ (re.+ (re.* (str.to_re "NNN"))) (re.++ (re.+ (re.+ (str.to_re "OOO"))) (re.++ (re.+ (re.+ (str.to_re "PPP"))) (re.++ (re.+ (re.union (str.to_re "QQ") (str.to_re "RRR"))) (re.++ (re.* (re.* (str.to_re "SSS"))) (re.++ (re.* (re.union (str.to_re "TT") (str.to_re "UU"))) (re.++ (re.* (re.+ (str.to_re "VV"))) (re.++ (re.+ (re.* (str.to_re "WW"))) (re.++ (re.union (re.* (str.to_re "XX")) (re.+ (str.to_re "YYY"))) (re.++ (re.+ (re.union (str.to_re "ZZ") (str.to_re "!!"))) (re.++ (re.+ (re.* (str.to_re """"))) (re.++ (re.+ (re.union (str.to_re "#") (str.to_re "$"))) (re.++ (re.union (re.+ (str.to_re "%")) (re.* (str.to_re "&"))) (re.++ (re.+ (re.* (str.to_re "''"))) (re.++ (re.+ (re.* (str.to_re "(("))) (re.++ (re.+ (re.+ (str.to_re ")"))) (re.++ (re.union (re.* (str.to_re "***")) (re.* (str.to_re "+++"))) (re.++ (re.union (re.union (str.to_re ",,,") (str.to_re "-")) (re.+ (str.to_re "."))) (re.++ (re.union (re.* (str.to_re "//")) (re.union (str.to_re ":") (str.to_re ";;"))) (re.+ (re.+ (str.to_re "<<")))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
