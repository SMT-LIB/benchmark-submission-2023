(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "00")) (re.+ (str.to_re "111"))) (re.++ (re.+ (re.union (str.to_re "22") (str.to_re "3"))) (re.++ (re.* (re.union (str.to_re "44") (str.to_re "555"))) (re.++ (re.union (re.+ (str.to_re "666")) (re.* (str.to_re "77"))) (re.++ (re.union (re.union (str.to_re "8") (str.to_re "9")) (re.+ (str.to_re "aa"))) (re.++ (re.union (re.union (str.to_re "b") (str.to_re "cc")) (re.* (str.to_re "d"))) (re.++ (re.union (re.* (str.to_re "eee")) (re.* (str.to_re "fff"))) (re.++ (re.+ (re.+ (str.to_re "g"))) (re.++ (re.+ (re.+ (str.to_re "hhh"))) (re.++ (re.+ (re.+ (str.to_re "iii"))) (re.++ (re.* (re.* (str.to_re "jjj"))) (re.++ (re.+ (re.+ (str.to_re "kkk"))) (re.++ (re.* (re.union (str.to_re "lll") (str.to_re "mmm"))) (re.++ (re.* (re.+ (str.to_re "nn"))) (re.++ (re.+ (re.* (str.to_re "ooo"))) (re.++ (re.* (re.* (str.to_re "pp"))) (re.++ (re.* (re.union (str.to_re "q") (str.to_re "r"))) (re.++ (re.union (re.union (str.to_re "s") (str.to_re "ttt")) (re.union (str.to_re "u") (str.to_re "vv"))) (re.++ (re.union (re.+ (str.to_re "www")) (re.+ (str.to_re "xxx"))) (re.++ (re.union (re.union (str.to_re "yyy") (str.to_re "z")) (re.union (str.to_re "AA") (str.to_re "B"))) (re.++ (re.+ (re.+ (str.to_re "CC"))) (re.++ (re.+ (re.+ (str.to_re "DD"))) (re.++ (re.* (re.* (str.to_re "EE"))) (re.++ (re.union (re.+ (str.to_re "FFF")) (re.+ (str.to_re "G"))) (re.++ (re.* (re.union (str.to_re "HH") (str.to_re "I"))) (re.++ (re.* (re.+ (str.to_re "J"))) (re.++ (re.union (re.* (str.to_re "KKK")) (re.union (str.to_re "L") (str.to_re "M"))) (re.++ (re.+ (re.* (str.to_re "N"))) (re.++ (re.union (re.* (str.to_re "OO")) (re.* (str.to_re "PP"))) (re.++ (re.union (re.* (str.to_re "Q")) (re.union (str.to_re "RR") (str.to_re "S"))) (re.++ (re.+ (re.union (str.to_re "T") (str.to_re "U"))) (re.++ (re.* (re.union (str.to_re "VVV") (str.to_re "WWW"))) (re.++ (re.+ (re.* (str.to_re "XX"))) (re.++ (re.+ (re.* (str.to_re "YY"))) (re.++ (re.+ (re.* (str.to_re "ZZ"))) (re.++ (re.union (re.+ (str.to_re "!!")) (re.* (str.to_re """"""""))) (re.++ (re.* (re.* (str.to_re "###"))) (re.++ (re.+ (re.* (str.to_re "$$$"))) (re.++ (re.+ (re.* (str.to_re "%"))) (re.++ (re.union (re.union (str.to_re "&&") (str.to_re "'")) (re.* (str.to_re "(("))) (re.++ (re.+ (re.+ (str.to_re "))"))) (re.++ (re.* (re.union (str.to_re "***") (str.to_re "++"))) (re.++ (re.+ (re.union (str.to_re ",,") (str.to_re "-"))) (re.++ (re.union (re.+ (str.to_re "..")) (re.+ (str.to_re "///"))) (re.++ (re.* (re.* (str.to_re ":"))) (re.union (re.union (str.to_re ";") (str.to_re "<<")) (re.union (str.to_re "=") (str.to_re ">>>"))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.+ (re.* (str.to_re "1"))) (re.++ (re.+ (re.union (str.to_re "222") (str.to_re "33"))) (re.++ (re.* (re.+ (str.to_re "444"))) (re.++ (re.* (re.+ (str.to_re "55"))) (re.++ (re.* (re.* (str.to_re "6"))) (re.++ (re.* (re.* (str.to_re "77"))) (re.++ (re.+ (re.* (str.to_re "8"))) (re.++ (re.union (re.union (str.to_re "99") (str.to_re "aaa")) (re.* (str.to_re "bbb"))) (re.++ (re.+ (re.* (str.to_re "c"))) (re.++ (re.* (re.* (str.to_re "ddd"))) (re.++ (re.* (re.union (str.to_re "e") (str.to_re "ff"))) (re.++ (re.* (re.+ (str.to_re "gg"))) (re.++ (re.* (re.union (str.to_re "hhh") (str.to_re "i"))) (re.++ (re.+ (re.union (str.to_re "j") (str.to_re "kkk"))) (re.++ (re.* (re.* (str.to_re "lll"))) (re.++ (re.union (re.union (str.to_re "mmm") (str.to_re "n")) (re.union (str.to_re "o") (str.to_re "p"))) (re.++ (re.* (re.union (str.to_re "qqq") (str.to_re "r"))) (re.++ (re.* (re.* (str.to_re "ss"))) (re.++ (re.union (re.union (str.to_re "tt") (str.to_re "uu")) (re.+ (str.to_re "vvv"))) (re.++ (re.+ (re.union (str.to_re "www") (str.to_re "xx"))) (re.++ (re.union (re.union (str.to_re "yyy") (str.to_re "zzz")) (re.+ (str.to_re "A"))) (re.++ (re.union (re.* (str.to_re "BB")) (re.union (str.to_re "CC") (str.to_re "DD"))) (re.++ (re.union (re.union (str.to_re "EEE") (str.to_re "FF")) (re.+ (str.to_re "G"))) (re.++ (re.* (re.+ (str.to_re "HH"))) (re.++ (re.* (re.* (str.to_re "III"))) (re.++ (re.* (re.union (str.to_re "JJJ") (str.to_re "K"))) (re.++ (re.+ (re.+ (str.to_re "L"))) (re.++ (re.* (re.+ (str.to_re "MM"))) (re.++ (re.+ (re.union (str.to_re "NN") (str.to_re "OO"))) (re.++ (re.+ (re.union (str.to_re "PP") (str.to_re "Q"))) (re.++ (re.+ (re.union (str.to_re "R") (str.to_re "S"))) (re.++ (re.+ (re.+ (str.to_re "TTT"))) (re.++ (re.+ (re.* (str.to_re "UU"))) (re.++ (re.+ (re.union (str.to_re "VVV") (str.to_re "WW"))) (re.++ (re.* (re.* (str.to_re "XXX"))) (re.++ (re.* (re.union (str.to_re "YY") (str.to_re "Z"))) (re.++ (re.+ (re.* (str.to_re "!!!"))) (re.++ (re.+ (re.union (str.to_re """") (str.to_re "###"))) (re.++ (re.+ (re.+ (str.to_re "$$"))) (re.++ (re.union (re.* (str.to_re "%")) (re.* (str.to_re "&&"))) (re.++ (re.union (re.union (str.to_re "'''") (str.to_re "(((")) (re.+ (str.to_re ")"))) (re.++ (re.union (re.* (str.to_re "***")) (re.union (str.to_re "++") (str.to_re ",,,"))) (re.++ (re.union (re.* (str.to_re "-")) (re.union (str.to_re "..") (str.to_re "//"))) (re.++ (re.+ (re.+ (str.to_re ":"))) (re.* (re.* (str.to_re ";;")))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
