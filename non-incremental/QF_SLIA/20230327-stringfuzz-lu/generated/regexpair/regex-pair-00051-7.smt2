(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "000") (str.to_re "1"))) (re.++ (re.* (re.* (str.to_re "222"))) (re.++ (re.* (re.* (str.to_re "3"))) (re.++ (re.* (re.+ (str.to_re "44"))) (re.++ (re.union (re.union (str.to_re "55") (str.to_re "66")) (re.* (str.to_re "777"))) (re.++ (re.+ (re.union (str.to_re "888") (str.to_re "999"))) (re.++ (re.* (re.+ (str.to_re "a"))) (re.++ (re.union (re.+ (str.to_re "bb")) (re.* (str.to_re "ccc"))) (re.++ (re.* (re.* (str.to_re "ddd"))) (re.++ (re.+ (re.+ (str.to_re "ee"))) (re.++ (re.+ (re.* (str.to_re "fff"))) (re.++ (re.+ (re.* (str.to_re "ggg"))) (re.++ (re.* (re.* (str.to_re "h"))) (re.++ (re.* (re.+ (str.to_re "iii"))) (re.++ (re.* (re.+ (str.to_re "j"))) (re.++ (re.union (re.union (str.to_re "k") (str.to_re "l")) (re.union (str.to_re "m") (str.to_re "nn"))) (re.++ (re.union (re.union (str.to_re "o") (str.to_re "p")) (re.+ (str.to_re "qq"))) (re.++ (re.+ (re.+ (str.to_re "rrr"))) (re.++ (re.union (re.* (str.to_re "ss")) (re.+ (str.to_re "ttt"))) (re.++ (re.* (re.+ (str.to_re "u"))) (re.++ (re.* (re.union (str.to_re "v") (str.to_re "ww"))) (re.++ (re.+ (re.+ (str.to_re "x"))) (re.++ (re.union (re.union (str.to_re "y") (str.to_re "zzz")) (re.union (str.to_re "A") (str.to_re "B"))) (re.++ (re.+ (re.union (str.to_re "CC") (str.to_re "D"))) (re.++ (re.* (re.* (str.to_re "E"))) (re.++ (re.union (re.+ (str.to_re "FF")) (re.union (str.to_re "G") (str.to_re "HH"))) (re.++ (re.+ (re.+ (str.to_re "II"))) (re.++ (re.+ (re.union (str.to_re "J") (str.to_re "K"))) (re.++ (re.* (re.+ (str.to_re "LLL"))) (re.++ (re.union (re.* (str.to_re "MM")) (re.* (str.to_re "N"))) (re.++ (re.* (re.+ (str.to_re "OO"))) (re.++ (re.+ (re.union (str.to_re "PPP") (str.to_re "Q"))) (re.++ (re.+ (re.union (str.to_re "RRR") (str.to_re "SSS"))) (re.++ (re.+ (re.+ (str.to_re "TT"))) (re.++ (re.union (re.+ (str.to_re "UU")) (re.union (str.to_re "VVV") (str.to_re "W"))) (re.++ (re.union (re.* (str.to_re "XXX")) (re.+ (str.to_re "YY"))) (re.++ (re.union (re.* (str.to_re "ZZ")) (re.union (str.to_re "!") (str.to_re """"""))) (re.++ (re.union (re.* (str.to_re "###")) (re.* (str.to_re "$$$"))) (re.++ (re.+ (re.* (str.to_re "%%"))) (re.++ (re.* (re.* (str.to_re "&&"))) (re.++ (re.union (re.+ (str.to_re "'''")) (re.* (str.to_re "((("))) (re.++ (re.+ (re.+ (str.to_re "))"))) (re.++ (re.* (re.+ (str.to_re "*"))) (re.++ (re.+ (re.* (str.to_re "+"))) (re.++ (re.union (re.* (str.to_re ",")) (re.* (str.to_re "--"))) (re.++ (re.* (re.+ (str.to_re "."))) (re.++ (re.* (re.union (str.to_re "/") (str.to_re ":"))) (re.++ (re.union (re.+ (str.to_re ";;")) (re.* (str.to_re "<<<"))) (re.++ (re.+ (re.+ (str.to_re "="))) (re.++ (re.+ (re.+ (str.to_re ">>>"))) (re.union (re.* (str.to_re "?")) (re.+ (str.to_re "@@")))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "0"))) (re.++ (re.+ (re.union (str.to_re "111") (str.to_re "22"))) (re.++ (re.+ (re.union (str.to_re "33") (str.to_re "44"))) (re.++ (re.+ (re.+ (str.to_re "5"))) (re.++ (re.union (re.* (str.to_re "666")) (re.* (str.to_re "7"))) (re.++ (re.* (re.* (str.to_re "8"))) (re.++ (re.+ (re.+ (str.to_re "999"))) (re.++ (re.union (re.+ (str.to_re "aaa")) (re.union (str.to_re "bb") (str.to_re "c"))) (re.++ (re.+ (re.+ (str.to_re "d"))) (re.++ (re.union (re.+ (str.to_re "eee")) (re.* (str.to_re "f"))) (re.++ (re.+ (re.* (str.to_re "gg"))) (re.++ (re.+ (re.union (str.to_re "hhh") (str.to_re "i"))) (re.++ (re.+ (re.+ (str.to_re "jj"))) (re.++ (re.union (re.+ (str.to_re "k")) (re.* (str.to_re "lll"))) (re.++ (re.* (re.* (str.to_re "m"))) (re.++ (re.union (re.+ (str.to_re "n")) (re.* (str.to_re "ooo"))) (re.++ (re.+ (re.union (str.to_re "p") (str.to_re "qqq"))) (re.++ (re.union (re.* (str.to_re "r")) (re.+ (str.to_re "s"))) (re.++ (re.union (re.+ (str.to_re "ttt")) (re.union (str.to_re "uu") (str.to_re "vv"))) (re.++ (re.union (re.union (str.to_re "w") (str.to_re "x")) (re.* (str.to_re "y"))) (re.++ (re.* (re.union (str.to_re "zzz") (str.to_re "AA"))) (re.++ (re.union (re.union (str.to_re "BBB") (str.to_re "CCC")) (re.* (str.to_re "DD"))) (re.++ (re.union (re.union (str.to_re "EE") (str.to_re "FFF")) (re.union (str.to_re "GG") (str.to_re "H"))) (re.++ (re.* (re.* (str.to_re "III"))) (re.++ (re.* (re.union (str.to_re "JJ") (str.to_re "KKK"))) (re.++ (re.* (re.* (str.to_re "LLL"))) (re.++ (re.+ (re.* (str.to_re "MM"))) (re.++ (re.union (re.* (str.to_re "N")) (re.union (str.to_re "OOO") (str.to_re "P"))) (re.++ (re.union (re.* (str.to_re "Q")) (re.* (str.to_re "R"))) (re.++ (re.union (re.+ (str.to_re "SSS")) (re.* (str.to_re "T"))) (re.++ (re.+ (re.+ (str.to_re "UUU"))) (re.++ (re.union (re.* (str.to_re "VV")) (re.+ (str.to_re "WW"))) (re.++ (re.union (re.+ (str.to_re "XXX")) (re.union (str.to_re "YYY") (str.to_re "ZZZ"))) (re.++ (re.union (re.union (str.to_re "!!!") (str.to_re """")) (re.union (str.to_re "###") (str.to_re "$$$"))) (re.++ (re.+ (re.* (str.to_re "%%"))) (re.++ (re.* (re.* (str.to_re "&"))) (re.++ (re.* (re.union (str.to_re "''") (str.to_re "((("))) (re.++ (re.* (re.* (str.to_re ")"))) (re.++ (re.union (re.* (str.to_re "*")) (re.* (str.to_re "+"))) (re.++ (re.+ (re.* (str.to_re ",,,"))) (re.++ (re.union (re.union (str.to_re "---") (str.to_re "..")) (re.union (str.to_re "//") (str.to_re ":"))) (re.++ (re.+ (re.+ (str.to_re ";;;"))) (re.++ (re.+ (re.* (str.to_re "<<<"))) (re.++ (re.+ (re.+ (str.to_re "=="))) (re.++ (re.+ (re.union (str.to_re ">") (str.to_re "???"))) (re.++ (re.+ (re.union (str.to_re "@@") (str.to_re "[[["))) (re.++ (re.+ (re.* (str.to_re "\\"))) (re.++ (re.+ (re.union (str.to_re "]") (str.to_re "^"))) (re.++ (re.* (re.* (str.to_re "___"))) (re.++ (re.* (re.union (str.to_re "```") (str.to_re "{"))) (re.union (re.+ (str.to_re "|")) (re.union (str.to_re "}") (str.to_re "~"))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
