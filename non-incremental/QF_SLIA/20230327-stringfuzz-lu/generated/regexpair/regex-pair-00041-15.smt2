(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "0"))) (re.++ (re.+ (re.+ (str.to_re "111"))) (re.++ (re.* (re.+ (str.to_re "22"))) (re.++ (re.* (re.* (str.to_re "33"))) (re.++ (re.+ (re.* (str.to_re "444"))) (re.++ (re.+ (re.* (str.to_re "555"))) (re.++ (re.* (re.* (str.to_re "666"))) (re.++ (re.union (re.+ (str.to_re "777")) (re.* (str.to_re "8"))) (re.++ (re.+ (re.union (str.to_re "9") (str.to_re "a"))) (re.++ (re.+ (re.* (str.to_re "bbb"))) (re.++ (re.union (re.+ (str.to_re "cc")) (re.* (str.to_re "ddd"))) (re.++ (re.* (re.* (str.to_re "ee"))) (re.++ (re.* (re.+ (str.to_re "ff"))) (re.++ (re.* (re.union (str.to_re "g") (str.to_re "hhh"))) (re.++ (re.union (re.+ (str.to_re "iii")) (re.union (str.to_re "j") (str.to_re "kk"))) (re.++ (re.* (re.union (str.to_re "lll") (str.to_re "mmm"))) (re.++ (re.+ (re.union (str.to_re "n") (str.to_re "o"))) (re.++ (re.* (re.+ (str.to_re "ppp"))) (re.++ (re.+ (re.* (str.to_re "qq"))) (re.++ (re.union (re.union (str.to_re "rr") (str.to_re "s")) (re.union (str.to_re "ttt") (str.to_re "uuu"))) (re.++ (re.* (re.* (str.to_re "v"))) (re.++ (re.+ (re.+ (str.to_re "ww"))) (re.++ (re.+ (re.* (str.to_re "x"))) (re.++ (re.union (re.* (str.to_re "yyy")) (re.* (str.to_re "zzz"))) (re.++ (re.* (re.+ (str.to_re "AA"))) (re.++ (re.* (re.+ (str.to_re "BB"))) (re.++ (re.union (re.+ (str.to_re "CCC")) (re.+ (str.to_re "DDD"))) (re.++ (re.union (re.* (str.to_re "EE")) (re.union (str.to_re "F") (str.to_re "GG"))) (re.++ (re.+ (re.union (str.to_re "HHH") (str.to_re "III"))) (re.++ (re.* (re.+ (str.to_re "JJ"))) (re.++ (re.+ (re.* (str.to_re "K"))) (re.++ (re.* (re.+ (str.to_re "LL"))) (re.++ (re.+ (re.* (str.to_re "MM"))) (re.++ (re.union (re.union (str.to_re "NNN") (str.to_re "OOO")) (re.* (str.to_re "PPP"))) (re.++ (re.union (re.+ (str.to_re "Q")) (re.+ (str.to_re "RR"))) (re.++ (re.union (re.* (str.to_re "SSS")) (re.* (str.to_re "TT"))) (re.++ (re.+ (re.union (str.to_re "UU") (str.to_re "VV"))) (re.++ (re.+ (re.+ (str.to_re "WW"))) (re.++ (re.union (re.* (str.to_re "X")) (re.+ (str.to_re "YYY"))) (re.++ (re.* (re.* (str.to_re "ZZ"))) (re.* (re.* (str.to_re "!!")))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.+ (re.+ (str.to_re "11"))) (re.++ (re.union (re.* (str.to_re "2")) (re.union (str.to_re "33") (str.to_re "444"))) (re.++ (re.union (re.* (str.to_re "5")) (re.+ (str.to_re "6"))) (re.++ (re.* (re.+ (str.to_re "7"))) (re.++ (re.+ (re.* (str.to_re "88"))) (re.++ (re.+ (re.+ (str.to_re "99"))) (re.++ (re.* (re.+ (str.to_re "aa"))) (re.++ (re.+ (re.* (str.to_re "bbb"))) (re.++ (re.* (re.union (str.to_re "c") (str.to_re "ddd"))) (re.++ (re.+ (re.union (str.to_re "e") (str.to_re "fff"))) (re.++ (re.union (re.+ (str.to_re "g")) (re.union (str.to_re "hh") (str.to_re "iii"))) (re.++ (re.+ (re.* (str.to_re "jjj"))) (re.++ (re.union (re.union (str.to_re "kk") (str.to_re "lll")) (re.* (str.to_re "mm"))) (re.++ (re.+ (re.union (str.to_re "n") (str.to_re "oo"))) (re.++ (re.union (re.+ (str.to_re "p")) (re.+ (str.to_re "qq"))) (re.++ (re.+ (re.+ (str.to_re "r"))) (re.++ (re.* (re.* (str.to_re "ss"))) (re.++ (re.* (re.+ (str.to_re "ttt"))) (re.++ (re.union (re.* (str.to_re "uu")) (re.* (str.to_re "vvv"))) (re.++ (re.union (re.* (str.to_re "www")) (re.union (str.to_re "x") (str.to_re "yy"))) (re.++ (re.union (re.* (str.to_re "zzz")) (re.union (str.to_re "AA") (str.to_re "B"))) (re.++ (re.+ (re.+ (str.to_re "CC"))) (re.++ (re.union (re.union (str.to_re "DD") (str.to_re "EEE")) (re.* (str.to_re "F"))) (re.++ (re.union (re.union (str.to_re "G") (str.to_re "H")) (re.+ (str.to_re "III"))) (re.++ (re.+ (re.* (str.to_re "JJ"))) (re.++ (re.* (re.* (str.to_re "K"))) (re.++ (re.+ (re.+ (str.to_re "LLL"))) (re.++ (re.* (re.* (str.to_re "MMM"))) (re.++ (re.union (re.union (str.to_re "N") (str.to_re "O")) (re.union (str.to_re "P") (str.to_re "QQ"))) (re.++ (re.+ (re.* (str.to_re "RRR"))) (re.++ (re.union (re.* (str.to_re "SS")) (re.union (str.to_re "TT") (str.to_re "UUU"))) (re.++ (re.+ (re.* (str.to_re "VVV"))) (re.++ (re.union (re.+ (str.to_re "WW")) (re.+ (str.to_re "X"))) (re.++ (re.union (re.+ (str.to_re "Y")) (re.* (str.to_re "ZZZ"))) (re.++ (re.+ (re.union (str.to_re "!!!") (str.to_re """"""""))) (re.++ (re.+ (re.union (str.to_re "###") (str.to_re "$$"))) (re.++ (re.union (re.union (str.to_re "%%%") (str.to_re "&&&")) (re.union (str.to_re "'''") (str.to_re "("))) (re.++ (re.union (re.union (str.to_re ")") (str.to_re "***")) (re.* (str.to_re "+"))) (re.++ (re.* (re.+ (str.to_re ",,,"))) (re.+ (re.+ (str.to_re "--"))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
