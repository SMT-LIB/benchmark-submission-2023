(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.union (str.to_re "000") (str.to_re "1"))) (re.++ (re.+ (re.union (str.to_re "2") (str.to_re "33"))) (re.++ (re.* (re.+ (str.to_re "444"))) (re.++ (re.* (re.+ (str.to_re "55"))) (re.++ (re.+ (re.+ (str.to_re "66"))) (re.++ (re.+ (re.+ (str.to_re "77"))) (re.++ (re.* (re.+ (str.to_re "8"))) (re.++ (re.* (re.+ (str.to_re "999"))) (re.++ (re.union (re.union (str.to_re "aaa") (str.to_re "bb")) (re.+ (str.to_re "c"))) (re.++ (re.* (re.+ (str.to_re "dd"))) (re.++ (re.* (re.union (str.to_re "e") (str.to_re "ff"))) (re.++ (re.union (re.* (str.to_re "ggg")) (re.* (str.to_re "hh"))) (re.++ (re.union (re.+ (str.to_re "ii")) (re.union (str.to_re "jj") (str.to_re "kk"))) (re.++ (re.* (re.union (str.to_re "lll") (str.to_re "mm"))) (re.++ (re.+ (re.+ (str.to_re "nnn"))) (re.++ (re.+ (re.union (str.to_re "ooo") (str.to_re "p"))) (re.++ (re.union (re.+ (str.to_re "qqq")) (re.* (str.to_re "r"))) (re.++ (re.+ (re.union (str.to_re "ss") (str.to_re "t"))) (re.++ (re.union (re.union (str.to_re "uu") (str.to_re "vv")) (re.+ (str.to_re "ww"))) (re.++ (re.+ (re.+ (str.to_re "xxx"))) (re.++ (re.+ (re.union (str.to_re "y") (str.to_re "zzz"))) (re.++ (re.+ (re.union (str.to_re "A") (str.to_re "BB"))) (re.++ (re.* (re.union (str.to_re "CCC") (str.to_re "DD"))) (re.++ (re.+ (re.* (str.to_re "EE"))) (re.++ (re.+ (re.+ (str.to_re "F"))) (re.++ (re.* (re.* (str.to_re "G"))) (re.++ (re.+ (re.+ (str.to_re "H"))) (re.++ (re.* (re.* (str.to_re "III"))) (re.++ (re.* (re.* (str.to_re "JJ"))) (re.++ (re.* (re.* (str.to_re "K"))) (re.++ (re.* (re.union (str.to_re "L") (str.to_re "M"))) (re.++ (re.union (re.+ (str.to_re "N")) (re.+ (str.to_re "OOO"))) (re.++ (re.+ (re.* (str.to_re "P"))) (re.++ (re.+ (re.union (str.to_re "QQQ") (str.to_re "RRR"))) (re.++ (re.* (re.* (str.to_re "S"))) (re.++ (re.union (re.* (str.to_re "T")) (re.* (str.to_re "U"))) (re.++ (re.+ (re.union (str.to_re "VV") (str.to_re "W"))) (re.++ (re.union (re.* (str.to_re "X")) (re.* (str.to_re "YYY"))) (re.++ (re.* (re.+ (str.to_re "ZZZ"))) (re.++ (re.* (re.+ (str.to_re "!"))) (re.++ (re.+ (re.* (str.to_re """"))) (re.++ (re.union (re.+ (str.to_re "##")) (re.+ (str.to_re "$"))) (re.++ (re.* (re.* (str.to_re "%%%"))) (re.++ (re.union (re.+ (str.to_re "&")) (re.+ (str.to_re "'"))) (re.++ (re.+ (re.+ (str.to_re "("))) (re.union (re.* (str.to_re "))")) (re.union (str.to_re "**") (str.to_re "+++"))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "00"))) (re.++ (re.+ (re.* (str.to_re "111"))) (re.++ (re.union (re.+ (str.to_re "222")) (re.+ (str.to_re "333"))) (re.++ (re.union (re.* (str.to_re "4")) (re.union (str.to_re "5") (str.to_re "66"))) (re.++ (re.* (re.union (str.to_re "77") (str.to_re "8"))) (re.++ (re.+ (re.* (str.to_re "999"))) (re.++ (re.union (re.union (str.to_re "aaa") (str.to_re "bbb")) (re.union (str.to_re "c") (str.to_re "d"))) (re.++ (re.* (re.* (str.to_re "e"))) (re.++ (re.* (re.+ (str.to_re "fff"))) (re.++ (re.* (re.* (str.to_re "g"))) (re.++ (re.+ (re.* (str.to_re "hh"))) (re.++ (re.* (re.union (str.to_re "ii") (str.to_re "jjj"))) (re.++ (re.* (re.* (str.to_re "kk"))) (re.++ (re.* (re.* (str.to_re "lll"))) (re.++ (re.* (re.union (str.to_re "mm") (str.to_re "n"))) (re.++ (re.+ (re.+ (str.to_re "oo"))) (re.++ (re.+ (re.* (str.to_re "p"))) (re.++ (re.union (re.union (str.to_re "q") (str.to_re "rrr")) (re.union (str.to_re "ss") (str.to_re "tt"))) (re.++ (re.union (re.union (str.to_re "uu") (str.to_re "vv")) (re.union (str.to_re "ww") (str.to_re "xxx"))) (re.++ (re.* (re.union (str.to_re "yy") (str.to_re "z"))) (re.++ (re.* (re.* (str.to_re "AAA"))) (re.++ (re.* (re.+ (str.to_re "BBB"))) (re.++ (re.+ (re.+ (str.to_re "CCC"))) (re.++ (re.union (re.+ (str.to_re "DDD")) (re.+ (str.to_re "EE"))) (re.++ (re.* (re.* (str.to_re "F"))) (re.++ (re.union (re.* (str.to_re "GG")) (re.union (str.to_re "HH") (str.to_re "I"))) (re.++ (re.+ (re.* (str.to_re "J"))) (re.++ (re.* (re.* (str.to_re "K"))) (re.++ (re.* (re.* (str.to_re "LLL"))) (re.++ (re.union (re.+ (str.to_re "M")) (re.* (str.to_re "NNN"))) (re.++ (re.* (re.* (str.to_re "OOO"))) (re.++ (re.+ (re.* (str.to_re "PPP"))) (re.++ (re.+ (re.+ (str.to_re "QQ"))) (re.++ (re.+ (re.* (str.to_re "R"))) (re.++ (re.+ (re.* (str.to_re "SS"))) (re.++ (re.+ (re.* (str.to_re "TTT"))) (re.++ (re.+ (re.union (str.to_re "U") (str.to_re "V"))) (re.++ (re.+ (re.+ (str.to_re "W"))) (re.++ (re.union (re.* (str.to_re "XXX")) (re.union (str.to_re "YY") (str.to_re "Z"))) (re.++ (re.union (re.* (str.to_re "!!")) (re.+ (str.to_re """"""""))) (re.++ (re.union (re.* (str.to_re "###")) (re.union (str.to_re "$$") (str.to_re "%%"))) (re.++ (re.union (re.+ (str.to_re "&")) (re.union (str.to_re "''") (str.to_re "("))) (re.++ (re.* (re.union (str.to_re "))") (str.to_re "*"))) (re.++ (re.union (re.union (str.to_re "+") (str.to_re ",,,")) (re.* (str.to_re "-"))) (re.++ (re.* (re.+ (str.to_re ".."))) (re.* (re.* (str.to_re "/")))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
