(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "00")) (re.+ (str.to_re "11"))) (re.++ (re.union (re.+ (str.to_re "2")) (re.union (str.to_re "3") (str.to_re "44"))) (re.++ (re.+ (re.+ (str.to_re "55"))) (re.++ (re.+ (re.* (str.to_re "66"))) (re.++ (re.* (re.* (str.to_re "777"))) (re.++ (re.+ (re.union (str.to_re "8") (str.to_re "99"))) (re.++ (re.* (re.* (str.to_re "aaa"))) (re.++ (re.+ (re.union (str.to_re "bbb") (str.to_re "ccc"))) (re.++ (re.union (re.+ (str.to_re "dd")) (re.union (str.to_re "e") (str.to_re "ff"))) (re.++ (re.* (re.union (str.to_re "ggg") (str.to_re "h"))) (re.++ (re.* (re.union (str.to_re "ii") (str.to_re "jj"))) (re.++ (re.+ (re.union (str.to_re "k") (str.to_re "l"))) (re.++ (re.union (re.+ (str.to_re "mmm")) (re.* (str.to_re "n"))) (re.++ (re.* (re.+ (str.to_re "oo"))) (re.++ (re.union (re.union (str.to_re "pp") (str.to_re "q")) (re.* (str.to_re "r"))) (re.++ (re.+ (re.* (str.to_re "sss"))) (re.++ (re.union (re.+ (str.to_re "tt")) (re.* (str.to_re "u"))) (re.++ (re.+ (re.union (str.to_re "vvv") (str.to_re "w"))) (re.++ (re.union (re.* (str.to_re "xx")) (re.union (str.to_re "yyy") (str.to_re "zzz"))) (re.++ (re.+ (re.+ (str.to_re "AA"))) (re.++ (re.union (re.* (str.to_re "BB")) (re.* (str.to_re "CCC"))) (re.++ (re.union (re.union (str.to_re "DDD") (str.to_re "E")) (re.union (str.to_re "FFF") (str.to_re "GG"))) (re.++ (re.+ (re.* (str.to_re "H"))) (re.++ (re.union (re.+ (str.to_re "II")) (re.+ (str.to_re "JJ"))) (re.++ (re.+ (re.* (str.to_re "K"))) (re.++ (re.* (re.union (str.to_re "LL") (str.to_re "MMM"))) (re.++ (re.+ (re.+ (str.to_re "N"))) (re.++ (re.* (re.union (str.to_re "OO") (str.to_re "PPP"))) (re.++ (re.+ (re.* (str.to_re "Q"))) (re.++ (re.* (re.* (str.to_re "R"))) (re.++ (re.+ (re.union (str.to_re "S") (str.to_re "TT"))) (re.++ (re.union (re.* (str.to_re "UUU")) (re.+ (str.to_re "V"))) (re.++ (re.* (re.* (str.to_re "WW"))) (re.++ (re.+ (re.union (str.to_re "XX") (str.to_re "YY"))) (re.++ (re.+ (re.union (str.to_re "ZZZ") (str.to_re "!!"))) (re.++ (re.union (re.union (str.to_re """""") (str.to_re "##")) (re.union (str.to_re "$$") (str.to_re "%"))) (re.++ (re.+ (re.* (str.to_re "&"))) (re.++ (re.* (re.+ (str.to_re "'''"))) (re.++ (re.+ (re.+ (str.to_re "((("))) (re.++ (re.+ (re.* (str.to_re ")"))) (re.union (re.+ (str.to_re "**")) (re.+ (str.to_re "+")))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.union (re.* (str.to_re "000")) (re.+ (str.to_re "11"))) (re.++ (re.* (re.+ (str.to_re "2"))) (re.++ (re.union (re.* (str.to_re "333")) (re.* (str.to_re "4"))) (re.++ (re.union (re.* (str.to_re "5")) (re.union (str.to_re "6") (str.to_re "777"))) (re.++ (re.* (re.* (str.to_re "8"))) (re.++ (re.+ (re.* (str.to_re "9"))) (re.++ (re.+ (re.+ (str.to_re "aaa"))) (re.++ (re.+ (re.union (str.to_re "b") (str.to_re "cc"))) (re.++ (re.* (re.union (str.to_re "dd") (str.to_re "eee"))) (re.++ (re.+ (re.* (str.to_re "f"))) (re.++ (re.union (re.* (str.to_re "ggg")) (re.union (str.to_re "hh") (str.to_re "i"))) (re.++ (re.* (re.union (str.to_re "jj") (str.to_re "k"))) (re.++ (re.* (re.union (str.to_re "lll") (str.to_re "mmm"))) (re.++ (re.* (re.+ (str.to_re "nnn"))) (re.++ (re.union (re.* (str.to_re "o")) (re.union (str.to_re "pp") (str.to_re "q"))) (re.++ (re.union (re.union (str.to_re "r") (str.to_re "s")) (re.* (str.to_re "tt"))) (re.++ (re.union (re.union (str.to_re "uuu") (str.to_re "v")) (re.union (str.to_re "www") (str.to_re "xx"))) (re.++ (re.union (re.* (str.to_re "yy")) (re.* (str.to_re "z"))) (re.++ (re.* (re.* (str.to_re "A"))) (re.++ (re.union (re.union (str.to_re "BB") (str.to_re "C")) (re.* (str.to_re "DDD"))) (re.++ (re.union (re.union (str.to_re "E") (str.to_re "FFF")) (re.+ (str.to_re "GGG"))) (re.++ (re.* (re.union (str.to_re "HHH") (str.to_re "I"))) (re.++ (re.union (re.+ (str.to_re "JJ")) (re.union (str.to_re "KK") (str.to_re "LL"))) (re.++ (re.union (re.* (str.to_re "MMM")) (re.+ (str.to_re "NNN"))) (re.++ (re.* (re.union (str.to_re "O") (str.to_re "P"))) (re.++ (re.+ (re.* (str.to_re "QQQ"))) (re.++ (re.* (re.+ (str.to_re "R"))) (re.++ (re.+ (re.union (str.to_re "SS") (str.to_re "TT"))) (re.++ (re.+ (re.* (str.to_re "U"))) (re.++ (re.union (re.* (str.to_re "VVV")) (re.union (str.to_re "WWW") (str.to_re "XXX"))) (re.++ (re.* (re.+ (str.to_re "YY"))) (re.++ (re.* (re.union (str.to_re "ZZZ") (str.to_re "!!"))) (re.++ (re.* (re.+ (str.to_re """"""))) (re.++ (re.* (re.* (str.to_re "##"))) (re.++ (re.+ (re.* (str.to_re "$"))) (re.++ (re.union (re.* (str.to_re "%%")) (re.* (str.to_re "&&"))) (re.++ (re.union (re.* (str.to_re "''")) (re.union (str.to_re "((") (str.to_re ")))"))) (re.++ (re.union (re.+ (str.to_re "*")) (re.+ (str.to_re "++"))) (re.++ (re.+ (re.union (str.to_re ",") (str.to_re "--"))) (re.++ (re.* (re.* (str.to_re "."))) (re.+ (re.+ (str.to_re "//"))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
