(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.union (str.to_re "000") (str.to_re "11"))) (re.++ (re.* (re.+ (str.to_re "22"))) (re.++ (re.+ (re.union (str.to_re "3") (str.to_re "444"))) (re.++ (re.* (re.union (str.to_re "55") (str.to_re "66"))) (re.++ (re.+ (re.union (str.to_re "77") (str.to_re "888"))) (re.++ (re.* (re.+ (str.to_re "999"))) (re.++ (re.union (re.union (str.to_re "a") (str.to_re "b")) (re.union (str.to_re "ccc") (str.to_re "dd"))) (re.++ (re.* (re.union (str.to_re "e") (str.to_re "fff"))) (re.++ (re.union (re.union (str.to_re "gg") (str.to_re "hhh")) (re.union (str.to_re "ii") (str.to_re "jjj"))) (re.++ (re.union (re.+ (str.to_re "k")) (re.* (str.to_re "ll"))) (re.++ (re.union (re.* (str.to_re "mmm")) (re.union (str.to_re "nnn") (str.to_re "oo"))) (re.++ (re.+ (re.union (str.to_re "p") (str.to_re "q"))) (re.++ (re.* (re.+ (str.to_re "rr"))) (re.++ (re.+ (re.union (str.to_re "ss") (str.to_re "t"))) (re.++ (re.union (re.union (str.to_re "u") (str.to_re "vv")) (re.+ (str.to_re "ww"))) (re.++ (re.union (re.* (str.to_re "xxx")) (re.+ (str.to_re "y"))) (re.++ (re.+ (re.+ (str.to_re "zz"))) (re.++ (re.* (re.* (str.to_re "AAA"))) (re.++ (re.+ (re.* (str.to_re "BB"))) (re.++ (re.* (re.* (str.to_re "C"))) (re.++ (re.+ (re.union (str.to_re "DDD") (str.to_re "EE"))) (re.++ (re.union (re.+ (str.to_re "FF")) (re.+ (str.to_re "GG"))) (re.++ (re.+ (re.* (str.to_re "H"))) (re.++ (re.+ (re.* (str.to_re "III"))) (re.++ (re.+ (re.* (str.to_re "JJJ"))) (re.++ (re.+ (re.+ (str.to_re "KK"))) (re.++ (re.+ (re.union (str.to_re "LLL") (str.to_re "MMM"))) (re.++ (re.* (re.+ (str.to_re "N"))) (re.++ (re.+ (re.* (str.to_re "OOO"))) (re.++ (re.union (re.union (str.to_re "PP") (str.to_re "Q")) (re.union (str.to_re "RR") (str.to_re "S"))) (re.++ (re.* (re.* (str.to_re "T"))) (re.++ (re.union (re.+ (str.to_re "UUU")) (re.+ (str.to_re "VV"))) (re.++ (re.union (re.union (str.to_re "WWW") (str.to_re "XX")) (re.* (str.to_re "YY"))) (re.++ (re.union (re.* (str.to_re "Z")) (re.union (str.to_re "!!") (str.to_re """"""""))) (re.++ (re.* (re.* (str.to_re "###"))) (re.++ (re.union (re.* (str.to_re "$$")) (re.* (str.to_re "%%%"))) (re.++ (re.union (re.+ (str.to_re "&&")) (re.+ (str.to_re "'''"))) (re.++ (re.* (re.union (str.to_re "(((") (str.to_re "))"))) (re.++ (re.union (re.* (str.to_re "**")) (re.union (str.to_re "+") (str.to_re ","))) (re.++ (re.* (re.union (str.to_re "---") (str.to_re ".."))) (re.union (re.union (str.to_re "//") (str.to_re ":::")) (re.+ (str.to_re ";;;")))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.+ (re.* (str.to_re "111"))) (re.++ (re.+ (re.+ (str.to_re "2"))) (re.++ (re.union (re.union (str.to_re "33") (str.to_re "4")) (re.+ (str.to_re "555"))) (re.++ (re.+ (re.+ (str.to_re "66"))) (re.++ (re.* (re.* (str.to_re "77"))) (re.++ (re.* (re.union (str.to_re "888") (str.to_re "99"))) (re.++ (re.* (re.union (str.to_re "a") (str.to_re "b"))) (re.++ (re.union (re.union (str.to_re "ccc") (str.to_re "d")) (re.* (str.to_re "eee"))) (re.++ (re.union (re.union (str.to_re "fff") (str.to_re "g")) (re.* (str.to_re "h"))) (re.++ (re.+ (re.union (str.to_re "i") (str.to_re "j"))) (re.++ (re.* (re.+ (str.to_re "kkk"))) (re.++ (re.* (re.* (str.to_re "l"))) (re.++ (re.union (re.+ (str.to_re "mmm")) (re.union (str.to_re "nnn") (str.to_re "o"))) (re.++ (re.+ (re.* (str.to_re "pp"))) (re.++ (re.* (re.* (str.to_re "qq"))) (re.++ (re.union (re.union (str.to_re "rrr") (str.to_re "sss")) (re.* (str.to_re "ttt"))) (re.++ (re.* (re.* (str.to_re "u"))) (re.++ (re.* (re.* (str.to_re "vvv"))) (re.++ (re.* (re.union (str.to_re "ww") (str.to_re "xxx"))) (re.++ (re.union (re.union (str.to_re "yyy") (str.to_re "z")) (re.+ (str.to_re "A"))) (re.++ (re.* (re.union (str.to_re "BBB") (str.to_re "C"))) (re.++ (re.* (re.+ (str.to_re "DD"))) (re.++ (re.union (re.union (str.to_re "EEE") (str.to_re "FFF")) (re.* (str.to_re "GG"))) (re.++ (re.+ (re.* (str.to_re "H"))) (re.++ (re.* (re.+ (str.to_re "I"))) (re.++ (re.* (re.* (str.to_re "JJJ"))) (re.++ (re.* (re.+ (str.to_re "KK"))) (re.++ (re.+ (re.+ (str.to_re "L"))) (re.++ (re.union (re.union (str.to_re "MMM") (str.to_re "N")) (re.* (str.to_re "OOO"))) (re.++ (re.+ (re.+ (str.to_re "PPP"))) (re.++ (re.union (re.* (str.to_re "QQ")) (re.* (str.to_re "RRR"))) (re.++ (re.* (re.union (str.to_re "SSS") (str.to_re "TT"))) (re.++ (re.* (re.union (str.to_re "U") (str.to_re "VV"))) (re.++ (re.union (re.union (str.to_re "W") (str.to_re "XX")) (re.union (str.to_re "Y") (str.to_re "ZZZ"))) (re.++ (re.* (re.* (str.to_re "!!"))) (re.++ (re.* (re.* (str.to_re """"""))) (re.++ (re.+ (re.* (str.to_re "###"))) (re.++ (re.union (re.union (str.to_re "$$") (str.to_re "%%%")) (re.* (str.to_re "&&&"))) (re.++ (re.union (re.+ (str.to_re "''")) (re.* (str.to_re "((("))) (re.* (re.+ (str.to_re ")"))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
