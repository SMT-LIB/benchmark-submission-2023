(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.union (str.to_re "0") (str.to_re "11"))) (re.++ (re.union (re.union (str.to_re "2") (str.to_re "3")) (re.union (str.to_re "4") (str.to_re "55"))) (re.++ (re.+ (re.union (str.to_re "6") (str.to_re "7"))) (re.++ (re.* (re.union (str.to_re "8") (str.to_re "99"))) (re.++ (re.+ (re.* (str.to_re "a"))) (re.++ (re.* (re.* (str.to_re "b"))) (re.++ (re.+ (re.union (str.to_re "c") (str.to_re "ddd"))) (re.++ (re.union (re.union (str.to_re "ee") (str.to_re "fff")) (re.* (str.to_re "gg"))) (re.++ (re.+ (re.+ (str.to_re "hhh"))) (re.++ (re.union (re.+ (str.to_re "ii")) (re.* (str.to_re "jjj"))) (re.++ (re.* (re.union (str.to_re "kkk") (str.to_re "l"))) (re.++ (re.* (re.* (str.to_re "m"))) (re.++ (re.union (re.* (str.to_re "nnn")) (re.union (str.to_re "ooo") (str.to_re "p"))) (re.++ (re.union (re.+ (str.to_re "qq")) (re.+ (str.to_re "r"))) (re.++ (re.+ (re.* (str.to_re "ss"))) (re.++ (re.+ (re.+ (str.to_re "t"))) (re.++ (re.+ (re.+ (str.to_re "uuu"))) (re.++ (re.union (re.* (str.to_re "vvv")) (re.union (str.to_re "ww") (str.to_re "xx"))) (re.++ (re.+ (re.+ (str.to_re "y"))) (re.++ (re.union (re.* (str.to_re "z")) (re.* (str.to_re "AA"))) (re.++ (re.+ (re.* (str.to_re "BB"))) (re.++ (re.union (re.* (str.to_re "C")) (re.+ (str.to_re "D"))) (re.++ (re.+ (re.+ (str.to_re "EEE"))) (re.++ (re.* (re.+ (str.to_re "FFF"))) (re.++ (re.* (re.union (str.to_re "GGG") (str.to_re "HH"))) (re.++ (re.+ (re.* (str.to_re "II"))) (re.++ (re.* (re.* (str.to_re "J"))) (re.++ (re.union (re.union (str.to_re "KK") (str.to_re "L")) (re.* (str.to_re "MM"))) (re.++ (re.+ (re.union (str.to_re "N") (str.to_re "OOO"))) (re.++ (re.+ (re.* (str.to_re "P"))) (re.++ (re.+ (re.union (str.to_re "QQQ") (str.to_re "RRR"))) (re.++ (re.* (re.union (str.to_re "S") (str.to_re "TT"))) (re.++ (re.union (re.union (str.to_re "UU") (str.to_re "VVV")) (re.+ (str.to_re "WW"))) (re.++ (re.union (re.+ (str.to_re "XX")) (re.union (str.to_re "YY") (str.to_re "ZZZ"))) (re.++ (re.* (re.union (str.to_re "!!!") (str.to_re """"""))) (re.++ (re.union (re.* (str.to_re "##")) (re.* (str.to_re "$"))) (re.++ (re.+ (re.+ (str.to_re "%"))) (re.++ (re.+ (re.* (str.to_re "&&"))) (re.++ (re.+ (re.+ (str.to_re "''"))) (re.++ (re.* (re.union (str.to_re "((") (str.to_re "))"))) (re.++ (re.+ (re.+ (str.to_re "***"))) (re.++ (re.* (re.+ (str.to_re "+"))) (re.++ (re.+ (re.+ (str.to_re ","))) (re.++ (re.union (re.+ (str.to_re "--")) (re.+ (str.to_re "..."))) (re.++ (re.+ (re.union (str.to_re "///") (str.to_re ":"))) (re.++ (re.union (re.* (str.to_re ";;")) (re.union (str.to_re "<") (str.to_re "="))) (re.++ (re.* (re.+ (str.to_re ">>"))) (re.++ (re.+ (re.+ (str.to_re "???"))) (re.++ (re.union (re.+ (str.to_re "@")) (re.+ (str.to_re "[["))) (re.++ (re.union (re.* (str.to_re "\\\\")) (re.+ (str.to_re "]]]"))) (re.* (re.union (str.to_re "^^^") (str.to_re "_")))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "00"))) (re.++ (re.+ (re.* (str.to_re "11"))) (re.++ (re.* (re.* (str.to_re "2"))) (re.++ (re.union (re.union (str.to_re "33") (str.to_re "444")) (re.union (str.to_re "555") (str.to_re "6"))) (re.++ (re.union (re.+ (str.to_re "7")) (re.+ (str.to_re "8"))) (re.++ (re.union (re.union (str.to_re "9") (str.to_re "aaa")) (re.union (str.to_re "b") (str.to_re "cc"))) (re.++ (re.+ (re.* (str.to_re "ddd"))) (re.++ (re.union (re.* (str.to_re "eee")) (re.* (str.to_re "ff"))) (re.++ (re.* (re.* (str.to_re "g"))) (re.++ (re.+ (re.+ (str.to_re "hhh"))) (re.++ (re.+ (re.* (str.to_re "i"))) (re.++ (re.union (re.+ (str.to_re "jjj")) (re.+ (str.to_re "kkk"))) (re.++ (re.* (re.* (str.to_re "l"))) (re.++ (re.+ (re.* (str.to_re "mm"))) (re.++ (re.* (re.union (str.to_re "n") (str.to_re "ooo"))) (re.++ (re.union (re.+ (str.to_re "ppp")) (re.* (str.to_re "q"))) (re.++ (re.union (re.union (str.to_re "r") (str.to_re "sss")) (re.union (str.to_re "t") (str.to_re "uuu"))) (re.++ (re.* (re.* (str.to_re "vv"))) (re.++ (re.union (re.* (str.to_re "ww")) (re.+ (str.to_re "xx"))) (re.++ (re.* (re.* (str.to_re "yy"))) (re.++ (re.+ (re.+ (str.to_re "z"))) (re.++ (re.* (re.union (str.to_re "A") (str.to_re "BBB"))) (re.++ (re.* (re.+ (str.to_re "CC"))) (re.++ (re.* (re.+ (str.to_re "DDD"))) (re.++ (re.* (re.union (str.to_re "EEE") (str.to_re "FFF"))) (re.++ (re.union (re.* (str.to_re "GGG")) (re.* (str.to_re "H"))) (re.++ (re.+ (re.union (str.to_re "III") (str.to_re "JJJ"))) (re.++ (re.union (re.* (str.to_re "KK")) (re.+ (str.to_re "L"))) (re.++ (re.* (re.+ (str.to_re "M"))) (re.++ (re.union (re.union (str.to_re "N") (str.to_re "OOO")) (re.+ (str.to_re "P"))) (re.++ (re.+ (re.+ (str.to_re "Q"))) (re.++ (re.+ (re.+ (str.to_re "RRR"))) (re.++ (re.union (re.union (str.to_re "S") (str.to_re "T")) (re.+ (str.to_re "UU"))) (re.++ (re.+ (re.* (str.to_re "VV"))) (re.++ (re.union (re.union (str.to_re "W") (str.to_re "XXX")) (re.union (str.to_re "YYY") (str.to_re "Z"))) (re.++ (re.+ (re.* (str.to_re "!!!"))) (re.++ (re.+ (re.+ (str.to_re """"""))) (re.++ (re.+ (re.union (str.to_re "###") (str.to_re "$"))) (re.++ (re.+ (re.* (str.to_re "%"))) (re.++ (re.* (re.+ (str.to_re "&&"))) (re.++ (re.union (re.* (str.to_re "'''")) (re.+ (str.to_re "((("))) (re.++ (re.union (re.* (str.to_re "))")) (re.+ (str.to_re "***"))) (re.++ (re.+ (re.+ (str.to_re "+"))) (re.++ (re.union (re.* (str.to_re ",,")) (re.+ (str.to_re "--"))) (re.++ (re.* (re.union (str.to_re "...") (str.to_re "/"))) (re.++ (re.union (re.+ (str.to_re ":")) (re.+ (str.to_re ";;;"))) (re.++ (re.+ (re.+ (str.to_re "<"))) (re.++ (re.union (re.+ (str.to_re "=")) (re.* (str.to_re ">>>"))) (re.++ (re.union (re.union (str.to_re "???") (str.to_re "@@")) (re.+ (str.to_re "["))) (re.++ (re.+ (re.+ (str.to_re "\\\\"))) (re.* (re.+ (str.to_re "]]"))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
