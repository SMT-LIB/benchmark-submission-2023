(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "000")) (re.* (str.to_re "111"))) (re.++ (re.* (re.+ (str.to_re "2"))) (re.++ (re.* (re.union (str.to_re "333") (str.to_re "444"))) (re.++ (re.* (re.union (str.to_re "55") (str.to_re "66"))) (re.++ (re.* (re.+ (str.to_re "77"))) (re.++ (re.union (re.* (str.to_re "88")) (re.+ (str.to_re "999"))) (re.++ (re.union (re.union (str.to_re "aaa") (str.to_re "bbb")) (re.union (str.to_re "cc") (str.to_re "d"))) (re.++ (re.* (re.union (str.to_re "e") (str.to_re "ff"))) (re.++ (re.union (re.union (str.to_re "ggg") (str.to_re "hhh")) (re.union (str.to_re "i") (str.to_re "jj"))) (re.++ (re.+ (re.* (str.to_re "kkk"))) (re.++ (re.union (re.* (str.to_re "l")) (re.+ (str.to_re "mm"))) (re.++ (re.union (re.* (str.to_re "n")) (re.* (str.to_re "oo"))) (re.++ (re.union (re.* (str.to_re "ppp")) (re.+ (str.to_re "qq"))) (re.++ (re.union (re.* (str.to_re "rr")) (re.* (str.to_re "ss"))) (re.++ (re.+ (re.union (str.to_re "tt") (str.to_re "uuu"))) (re.++ (re.+ (re.+ (str.to_re "vvv"))) (re.++ (re.* (re.* (str.to_re "www"))) (re.++ (re.union (re.+ (str.to_re "xxx")) (re.* (str.to_re "y"))) (re.++ (re.union (re.+ (str.to_re "zz")) (re.* (str.to_re "AAA"))) (re.++ (re.union (re.union (str.to_re "BBB") (str.to_re "CCC")) (re.union (str.to_re "DDD") (str.to_re "E"))) (re.++ (re.+ (re.+ (str.to_re "F"))) (re.++ (re.union (re.+ (str.to_re "GGG")) (re.* (str.to_re "HH"))) (re.++ (re.* (re.* (str.to_re "III"))) (re.++ (re.* (re.union (str.to_re "J") (str.to_re "KK"))) (re.++ (re.union (re.+ (str.to_re "LL")) (re.+ (str.to_re "MMM"))) (re.++ (re.+ (re.+ (str.to_re "NNN"))) (re.++ (re.+ (re.union (str.to_re "OOO") (str.to_re "P"))) (re.++ (re.union (re.union (str.to_re "Q") (str.to_re "R")) (re.union (str.to_re "SS") (str.to_re "TTT"))) (re.++ (re.* (re.* (str.to_re "UU"))) (re.++ (re.* (re.union (str.to_re "VV") (str.to_re "W"))) (re.++ (re.+ (re.+ (str.to_re "XX"))) (re.++ (re.* (re.* (str.to_re "YY"))) (re.++ (re.+ (re.union (str.to_re "Z") (str.to_re "!!"))) (re.++ (re.* (re.* (str.to_re """"""))) (re.++ (re.+ (re.* (str.to_re "#"))) (re.+ (re.* (str.to_re "$$"))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.union (re.union (str.to_re "0") (str.to_re "111")) (re.union (str.to_re "22") (str.to_re "33"))) (re.++ (re.union (re.union (str.to_re "4") (str.to_re "55")) (re.union (str.to_re "66") (str.to_re "777"))) (re.++ (re.+ (re.union (str.to_re "88") (str.to_re "9"))) (re.++ (re.+ (re.+ (str.to_re "aa"))) (re.++ (re.union (re.* (str.to_re "b")) (re.* (str.to_re "c"))) (re.++ (re.* (re.* (str.to_re "d"))) (re.++ (re.+ (re.union (str.to_re "e") (str.to_re "f"))) (re.++ (re.* (re.* (str.to_re "g"))) (re.++ (re.+ (re.union (str.to_re "h") (str.to_re "ii"))) (re.++ (re.+ (re.+ (str.to_re "jj"))) (re.++ (re.union (re.+ (str.to_re "kk")) (re.+ (str.to_re "ll"))) (re.++ (re.+ (re.union (str.to_re "mmm") (str.to_re "nn"))) (re.++ (re.+ (re.+ (str.to_re "oo"))) (re.++ (re.+ (re.union (str.to_re "ppp") (str.to_re "q"))) (re.++ (re.union (re.union (str.to_re "rr") (str.to_re "sss")) (re.+ (str.to_re "t"))) (re.++ (re.union (re.union (str.to_re "u") (str.to_re "vvv")) (re.* (str.to_re "ww"))) (re.++ (re.union (re.union (str.to_re "xx") (str.to_re "yy")) (re.union (str.to_re "zzz") (str.to_re "A"))) (re.++ (re.union (re.union (str.to_re "BB") (str.to_re "C")) (re.union (str.to_re "DDD") (str.to_re "EEE"))) (re.++ (re.+ (re.+ (str.to_re "FFF"))) (re.++ (re.+ (re.union (str.to_re "G") (str.to_re "H"))) (re.++ (re.+ (re.* (str.to_re "II"))) (re.++ (re.* (re.+ (str.to_re "J"))) (re.++ (re.union (re.+ (str.to_re "K")) (re.union (str.to_re "LLL") (str.to_re "MMM"))) (re.++ (re.* (re.union (str.to_re "N") (str.to_re "OO"))) (re.++ (re.union (re.* (str.to_re "PP")) (re.* (str.to_re "QQQ"))) (re.++ (re.* (re.union (str.to_re "RR") (str.to_re "S"))) (re.++ (re.union (re.* (str.to_re "TTT")) (re.+ (str.to_re "UU"))) (re.++ (re.union (re.* (str.to_re "VVV")) (re.+ (str.to_re "WW"))) (re.++ (re.union (re.union (str.to_re "XX") (str.to_re "Y")) (re.union (str.to_re "ZZ") (str.to_re "!"))) (re.++ (re.union (re.union (str.to_re """") (str.to_re "#")) (re.* (str.to_re "$"))) (re.++ (re.+ (re.* (str.to_re "%%"))) (re.++ (re.+ (re.* (str.to_re "&"))) (re.++ (re.* (re.union (str.to_re "'") (str.to_re "((("))) (re.++ (re.* (re.* (str.to_re ")))"))) (re.++ (re.* (re.+ (str.to_re "*"))) (re.+ (re.union (str.to_re "++") (str.to_re ",,")))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
