(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "0"))) (re.++ (re.union (re.union (str.to_re "1") (str.to_re "2")) (re.* (str.to_re "333"))) (re.++ (re.* (re.union (str.to_re "4") (str.to_re "555"))) (re.++ (re.* (re.+ (str.to_re "6"))) (re.++ (re.union (re.union (str.to_re "777") (str.to_re "8")) (re.union (str.to_re "9") (str.to_re "aaa"))) (re.++ (re.* (re.+ (str.to_re "bb"))) (re.++ (re.+ (re.union (str.to_re "c") (str.to_re "d"))) (re.++ (re.* (re.* (str.to_re "ee"))) (re.++ (re.+ (re.* (str.to_re "f"))) (re.++ (re.union (re.union (str.to_re "g") (str.to_re "hhh")) (re.* (str.to_re "iii"))) (re.++ (re.+ (re.* (str.to_re "jjj"))) (re.++ (re.+ (re.+ (str.to_re "kkk"))) (re.++ (re.+ (re.+ (str.to_re "l"))) (re.++ (re.+ (re.+ (str.to_re "mm"))) (re.++ (re.+ (re.union (str.to_re "n") (str.to_re "ooo"))) (re.++ (re.* (re.* (str.to_re "p"))) (re.++ (re.* (re.union (str.to_re "q") (str.to_re "r"))) (re.++ (re.+ (re.* (str.to_re "sss"))) (re.++ (re.+ (re.* (str.to_re "t"))) (re.++ (re.union (re.* (str.to_re "uu")) (re.+ (str.to_re "v"))) (re.++ (re.+ (re.+ (str.to_re "www"))) (re.++ (re.union (re.union (str.to_re "xx") (str.to_re "yyy")) (re.* (str.to_re "zzz"))) (re.++ (re.union (re.+ (str.to_re "AA")) (re.* (str.to_re "BBB"))) (re.++ (re.union (re.+ (str.to_re "C")) (re.+ (str.to_re "D"))) (re.++ (re.* (re.+ (str.to_re "E"))) (re.++ (re.* (re.union (str.to_re "F") (str.to_re "G"))) (re.++ (re.+ (re.+ (str.to_re "HH"))) (re.++ (re.+ (re.union (str.to_re "I") (str.to_re "JJJ"))) (re.++ (re.union (re.* (str.to_re "K")) (re.* (str.to_re "LLL"))) (re.++ (re.* (re.union (str.to_re "MM") (str.to_re "N"))) (re.* (re.* (str.to_re "OO")))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.* (str.to_re "00"))) (re.++ (re.* (re.+ (str.to_re "11"))) (re.++ (re.union (re.* (str.to_re "2")) (re.+ (str.to_re "33"))) (re.++ (re.union (re.+ (str.to_re "4")) (re.* (str.to_re "55"))) (re.++ (re.union (re.union (str.to_re "6") (str.to_re "7")) (re.+ (str.to_re "888"))) (re.++ (re.union (re.* (str.to_re "9")) (re.union (str.to_re "a") (str.to_re "bbb"))) (re.++ (re.+ (re.union (str.to_re "c") (str.to_re "ddd"))) (re.++ (re.union (re.* (str.to_re "eee")) (re.+ (str.to_re "fff"))) (re.++ (re.* (re.+ (str.to_re "g"))) (re.++ (re.union (re.union (str.to_re "hhh") (str.to_re "ii")) (re.* (str.to_re "jjj"))) (re.++ (re.union (re.+ (str.to_re "kkk")) (re.union (str.to_re "l") (str.to_re "m"))) (re.++ (re.union (re.* (str.to_re "nn")) (re.union (str.to_re "ooo") (str.to_re "ppp"))) (re.++ (re.+ (re.* (str.to_re "qq"))) (re.++ (re.+ (re.* (str.to_re "rr"))) (re.++ (re.union (re.* (str.to_re "ss")) (re.union (str.to_re "ttt") (str.to_re "uuu"))) (re.++ (re.* (re.+ (str.to_re "vv"))) (re.++ (re.* (re.+ (str.to_re "www"))) (re.++ (re.+ (re.* (str.to_re "xxx"))) (re.++ (re.union (re.union (str.to_re "yyy") (str.to_re "zz")) (re.* (str.to_re "AAA"))) (re.++ (re.union (re.+ (str.to_re "BB")) (re.* (str.to_re "C"))) (re.++ (re.* (re.+ (str.to_re "DD"))) (re.++ (re.* (re.union (str.to_re "EE") (str.to_re "FFF"))) (re.++ (re.union (re.* (str.to_re "GGG")) (re.* (str.to_re "HH"))) (re.++ (re.+ (re.+ (str.to_re "II"))) (re.++ (re.* (re.union (str.to_re "JJJ") (str.to_re "KKK"))) (re.++ (re.+ (re.+ (str.to_re "L"))) (re.++ (re.union (re.* (str.to_re "M")) (re.+ (str.to_re "NNN"))) (re.++ (re.union (re.* (str.to_re "OOO")) (re.+ (str.to_re "PPP"))) (re.++ (re.* (re.* (str.to_re "QQQ"))) (re.++ (re.+ (re.* (str.to_re "RRR"))) (re.* (re.union (str.to_re "S") (str.to_re "TTT"))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
