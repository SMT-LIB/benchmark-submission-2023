(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "0"))) (re.++ (re.union (re.union (str.to_re "111") (str.to_re "2")) (re.* (str.to_re "33"))) (re.++ (re.union (re.+ (str.to_re "444")) (re.+ (str.to_re "55"))) (re.++ (re.union (re.* (str.to_re "66")) (re.+ (str.to_re "777"))) (re.++ (re.* (re.union (str.to_re "8") (str.to_re "9"))) (re.++ (re.union (re.+ (str.to_re "aa")) (re.union (str.to_re "bbb") (str.to_re "ccc"))) (re.++ (re.union (re.* (str.to_re "d")) (re.+ (str.to_re "e"))) (re.++ (re.* (re.* (str.to_re "fff"))) (re.++ (re.* (re.* (str.to_re "g"))) (re.++ (re.* (re.union (str.to_re "h") (str.to_re "ii"))) (re.++ (re.* (re.union (str.to_re "jjj") (str.to_re "kk"))) (re.++ (re.+ (re.union (str.to_re "lll") (str.to_re "mmm"))) (re.++ (re.union (re.+ (str.to_re "nn")) (re.+ (str.to_re "oo"))) (re.++ (re.* (re.* (str.to_re "ppp"))) (re.++ (re.+ (re.union (str.to_re "q") (str.to_re "rrr"))) (re.++ (re.union (re.* (str.to_re "ss")) (re.+ (str.to_re "t"))) (re.++ (re.* (re.* (str.to_re "u"))) (re.++ (re.union (re.union (str.to_re "vvv") (str.to_re "www")) (re.union (str.to_re "xx") (str.to_re "yy"))) (re.++ (re.* (re.+ (str.to_re "zz"))) (re.++ (re.+ (re.union (str.to_re "AAA") (str.to_re "B"))) (re.++ (re.+ (re.* (str.to_re "CCC"))) (re.++ (re.+ (re.+ (str.to_re "D"))) (re.++ (re.union (re.union (str.to_re "EEE") (str.to_re "FF")) (re.+ (str.to_re "GGG"))) (re.++ (re.union (re.+ (str.to_re "HHH")) (re.* (str.to_re "II"))) (re.++ (re.* (re.* (str.to_re "JJJ"))) (re.++ (re.* (re.union (str.to_re "KK") (str.to_re "LLL"))) (re.++ (re.+ (re.* (str.to_re "M"))) (re.++ (re.+ (re.+ (str.to_re "NNN"))) (re.++ (re.+ (re.union (str.to_re "O") (str.to_re "PPP"))) (re.++ (re.* (re.+ (str.to_re "Q"))) (re.++ (re.+ (re.union (str.to_re "RRR") (str.to_re "SS"))) (re.++ (re.union (re.union (str.to_re "T") (str.to_re "U")) (re.union (str.to_re "V") (str.to_re "WWW"))) (re.++ (re.+ (re.+ (str.to_re "X"))) (re.++ (re.union (re.+ (str.to_re "YY")) (re.* (str.to_re "Z"))) (re.++ (re.+ (re.union (str.to_re "!!!") (str.to_re """"""""))) (re.union (re.union (str.to_re "###") (str.to_re "$")) (re.* (str.to_re "%%%"))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "0"))) (re.++ (re.* (re.+ (str.to_re "111"))) (re.++ (re.* (re.union (str.to_re "22") (str.to_re "333"))) (re.++ (re.+ (re.* (str.to_re "444"))) (re.++ (re.+ (re.union (str.to_re "5") (str.to_re "6"))) (re.++ (re.union (re.+ (str.to_re "7")) (re.* (str.to_re "88"))) (re.++ (re.+ (re.union (str.to_re "9") (str.to_re "aaa"))) (re.++ (re.+ (re.* (str.to_re "b"))) (re.++ (re.union (re.union (str.to_re "ccc") (str.to_re "dd")) (re.* (str.to_re "ee"))) (re.++ (re.* (re.+ (str.to_re "fff"))) (re.++ (re.* (re.union (str.to_re "g") (str.to_re "hh"))) (re.++ (re.union (re.* (str.to_re "i")) (re.union (str.to_re "j") (str.to_re "kkk"))) (re.++ (re.* (re.+ (str.to_re "l"))) (re.++ (re.union (re.* (str.to_re "mmm")) (re.+ (str.to_re "n"))) (re.++ (re.* (re.+ (str.to_re "ooo"))) (re.++ (re.union (re.* (str.to_re "ppp")) (re.union (str.to_re "q") (str.to_re "rrr"))) (re.++ (re.* (re.* (str.to_re "ss"))) (re.++ (re.+ (re.+ (str.to_re "t"))) (re.++ (re.+ (re.+ (str.to_re "u"))) (re.++ (re.* (re.union (str.to_re "vvv") (str.to_re "w"))) (re.++ (re.+ (re.+ (str.to_re "x"))) (re.++ (re.+ (re.+ (str.to_re "yyy"))) (re.++ (re.* (re.union (str.to_re "zzz") (str.to_re "AA"))) (re.++ (re.* (re.* (str.to_re "BBB"))) (re.++ (re.+ (re.* (str.to_re "C"))) (re.++ (re.* (re.+ (str.to_re "D"))) (re.++ (re.* (re.* (str.to_re "E"))) (re.++ (re.+ (re.* (str.to_re "F"))) (re.++ (re.+ (re.+ (str.to_re "G"))) (re.++ (re.union (re.union (str.to_re "HH") (str.to_re "I")) (re.* (str.to_re "J"))) (re.++ (re.union (re.* (str.to_re "KKK")) (re.union (str.to_re "L") (str.to_re "MM"))) (re.++ (re.* (re.* (str.to_re "N"))) (re.++ (re.+ (re.+ (str.to_re "O"))) (re.++ (re.+ (re.* (str.to_re "PP"))) (re.++ (re.union (re.union (str.to_re "Q") (str.to_re "R")) (re.union (str.to_re "SS") (str.to_re "TTT"))) (re.union (re.union (str.to_re "UUU") (str.to_re "VV")) (re.union (str.to_re "W") (str.to_re "X")))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
