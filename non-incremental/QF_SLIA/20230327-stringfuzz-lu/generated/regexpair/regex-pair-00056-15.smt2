(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "00")) (re.* (str.to_re "11"))) (re.++ (re.* (re.+ (str.to_re "222"))) (re.++ (re.union (re.* (str.to_re "33")) (re.+ (str.to_re "444"))) (re.++ (re.union (re.+ (str.to_re "555")) (re.+ (str.to_re "6"))) (re.++ (re.+ (re.* (str.to_re "77"))) (re.++ (re.* (re.* (str.to_re "88"))) (re.++ (re.* (re.+ (str.to_re "9"))) (re.++ (re.union (re.union (str.to_re "aaa") (str.to_re "b")) (re.* (str.to_re "c"))) (re.++ (re.+ (re.union (str.to_re "ddd") (str.to_re "e"))) (re.++ (re.union (re.+ (str.to_re "fff")) (re.+ (str.to_re "gg"))) (re.++ (re.* (re.* (str.to_re "h"))) (re.++ (re.union (re.+ (str.to_re "ii")) (re.* (str.to_re "jjj"))) (re.++ (re.+ (re.union (str.to_re "kkk") (str.to_re "l"))) (re.++ (re.union (re.* (str.to_re "mmm")) (re.union (str.to_re "nn") (str.to_re "o"))) (re.++ (re.+ (re.* (str.to_re "p"))) (re.++ (re.+ (re.* (str.to_re "qq"))) (re.++ (re.* (re.union (str.to_re "r") (str.to_re "sss"))) (re.++ (re.union (re.union (str.to_re "ttt") (str.to_re "u")) (re.+ (str.to_re "v"))) (re.++ (re.union (re.union (str.to_re "ww") (str.to_re "xxx")) (re.* (str.to_re "yyy"))) (re.++ (re.* (re.union (str.to_re "z") (str.to_re "A"))) (re.++ (re.union (re.union (str.to_re "BBB") (str.to_re "CCC")) (re.union (str.to_re "DDD") (str.to_re "E"))) (re.++ (re.union (re.+ (str.to_re "F")) (re.union (str.to_re "GGG") (str.to_re "HH"))) (re.++ (re.* (re.+ (str.to_re "II"))) (re.++ (re.union (re.union (str.to_re "JJJ") (str.to_re "KKK")) (re.* (str.to_re "LLL"))) (re.++ (re.* (re.* (str.to_re "M"))) (re.++ (re.+ (re.+ (str.to_re "N"))) (re.++ (re.union (re.* (str.to_re "OOO")) (re.union (str.to_re "PPP") (str.to_re "QQ"))) (re.++ (re.+ (re.union (str.to_re "RRR") (str.to_re "SSS"))) (re.++ (re.union (re.+ (str.to_re "TTT")) (re.+ (str.to_re "UU"))) (re.++ (re.* (re.union (str.to_re "VVV") (str.to_re "W"))) (re.++ (re.* (re.* (str.to_re "XXX"))) (re.++ (re.* (re.* (str.to_re "YY"))) (re.++ (re.union (re.* (str.to_re "ZZZ")) (re.union (str.to_re "!!!") (str.to_re """"""""))) (re.++ (re.+ (re.union (str.to_re "#") (str.to_re "$$"))) (re.++ (re.+ (re.* (str.to_re "%%"))) (re.++ (re.union (re.union (str.to_re "&") (str.to_re "'")) (re.+ (str.to_re "(("))) (re.++ (re.union (re.* (str.to_re ")))")) (re.union (str.to_re "***") (str.to_re "++"))) (re.++ (re.* (re.+ (str.to_re ",,,"))) (re.++ (re.union (re.union (str.to_re "---") (str.to_re "...")) (re.* (str.to_re "//"))) (re.++ (re.* (re.+ (str.to_re ":"))) (re.++ (re.* (re.* (str.to_re ";;;"))) (re.++ (re.* (re.+ (str.to_re "<"))) (re.++ (re.union (re.union (str.to_re "===") (str.to_re ">>")) (re.union (str.to_re "?") (str.to_re "@@@"))) (re.++ (re.+ (re.union (str.to_re "[") (str.to_re "\\"))) (re.++ (re.+ (re.* (str.to_re "]"))) (re.++ (re.+ (re.* (str.to_re "^^"))) (re.++ (re.+ (re.* (str.to_re "__"))) (re.++ (re.union (re.union (str.to_re "``") (str.to_re "{{{")) (re.* (str.to_re "|"))) (re.++ (re.+ (re.+ (str.to_re "}}}"))) (re.++ (re.* (re.* (str.to_re "~"))) (re.++ (re.+ (re.+ (str.to_re "000"))) (re.++ (re.* (re.* (str.to_re "111"))) (re.++ (re.* (re.+ (str.to_re "222"))) (re.++ (re.* (re.+ (str.to_re "3"))) (re.++ (re.* (re.* (str.to_re "4"))) (re.+ (re.+ (str.to_re "5"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.* (re.union (str.to_re "0") (str.to_re "111"))) (re.++ (re.* (re.+ (str.to_re "222"))) (re.++ (re.+ (re.* (str.to_re "3"))) (re.++ (re.* (re.+ (str.to_re "444"))) (re.++ (re.* (re.+ (str.to_re "5"))) (re.++ (re.+ (re.+ (str.to_re "66"))) (re.++ (re.union (re.* (str.to_re "777")) (re.union (str.to_re "888") (str.to_re "99"))) (re.++ (re.union (re.union (str.to_re "a") (str.to_re "bbb")) (re.+ (str.to_re "c"))) (re.++ (re.union (re.union (str.to_re "dd") (str.to_re "ee")) (re.* (str.to_re "fff"))) (re.++ (re.union (re.+ (str.to_re "ggg")) (re.union (str.to_re "hhh") (str.to_re "iii"))) (re.++ (re.* (re.* (str.to_re "j"))) (re.++ (re.* (re.union (str.to_re "k") (str.to_re "l"))) (re.++ (re.* (re.union (str.to_re "mm") (str.to_re "n"))) (re.++ (re.* (re.+ (str.to_re "ooo"))) (re.++ (re.* (re.union (str.to_re "ppp") (str.to_re "qq"))) (re.++ (re.union (re.+ (str.to_re "rrr")) (re.+ (str.to_re "s"))) (re.++ (re.+ (re.union (str.to_re "ttt") (str.to_re "u"))) (re.++ (re.union (re.+ (str.to_re "vv")) (re.+ (str.to_re "ww"))) (re.++ (re.union (re.* (str.to_re "xx")) (re.+ (str.to_re "yy"))) (re.++ (re.* (re.union (str.to_re "zzz") (str.to_re "AAA"))) (re.++ (re.union (re.* (str.to_re "BBB")) (re.union (str.to_re "C") (str.to_re "D"))) (re.++ (re.* (re.+ (str.to_re "EEE"))) (re.++ (re.+ (re.+ (str.to_re "FF"))) (re.++ (re.+ (re.union (str.to_re "GGG") (str.to_re "HHH"))) (re.++ (re.* (re.* (str.to_re "I"))) (re.++ (re.+ (re.* (str.to_re "JJJ"))) (re.++ (re.union (re.+ (str.to_re "K")) (re.+ (str.to_re "L"))) (re.++ (re.* (re.union (str.to_re "M") (str.to_re "NN"))) (re.++ (re.union (re.* (str.to_re "OO")) (re.+ (str.to_re "PPP"))) (re.++ (re.+ (re.union (str.to_re "QQQ") (str.to_re "RR"))) (re.++ (re.+ (re.+ (str.to_re "SS"))) (re.++ (re.+ (re.+ (str.to_re "TT"))) (re.++ (re.* (re.+ (str.to_re "UUU"))) (re.++ (re.union (re.* (str.to_re "V")) (re.+ (str.to_re "WWW"))) (re.++ (re.union (re.+ (str.to_re "X")) (re.union (str.to_re "YYY") (str.to_re "ZZZ"))) (re.++ (re.union (re.* (str.to_re "!")) (re.+ (str.to_re """"))) (re.++ (re.* (re.* (str.to_re "##"))) (re.++ (re.union (re.union (str.to_re "$$") (str.to_re "%%%")) (re.* (str.to_re "&"))) (re.++ (re.* (re.+ (str.to_re "''"))) (re.++ (re.union (re.+ (str.to_re "(((")) (re.* (str.to_re ")"))) (re.++ (re.+ (re.+ (str.to_re "***"))) (re.++ (re.union (re.* (str.to_re "+++")) (re.+ (str.to_re ",,"))) (re.++ (re.union (re.* (str.to_re "---")) (re.union (str.to_re ".") (str.to_re "///"))) (re.++ (re.+ (re.* (str.to_re "::"))) (re.++ (re.* (re.union (str.to_re ";;;") (str.to_re "<"))) (re.++ (re.+ (re.* (str.to_re "="))) (re.++ (re.+ (re.* (str.to_re ">"))) (re.++ (re.union (re.* (str.to_re "?")) (re.union (str.to_re "@@@") (str.to_re "[[["))) (re.++ (re.+ (re.+ (str.to_re "\\\\\\"))) (re.++ (re.* (re.+ (str.to_re "]]"))) (re.++ (re.+ (re.+ (str.to_re "^^^"))) (re.++ (re.union (re.* (str.to_re "_")) (re.union (str.to_re "``") (str.to_re "{{{"))) (re.++ (re.* (re.+ (str.to_re "|||"))) (re.++ (re.+ (re.+ (str.to_re "}"))) (re.++ (re.* (re.* (str.to_re "~~~"))) (re.union (re.* (str.to_re "00")) (re.* (str.to_re "111")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
