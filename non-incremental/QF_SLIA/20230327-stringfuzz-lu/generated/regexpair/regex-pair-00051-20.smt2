(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (str.to_re "0"))) (re.++ (re.* (re.* (str.to_re "1"))) (re.++ (re.+ (re.union (str.to_re "22") (str.to_re "333"))) (re.++ (re.* (re.+ (str.to_re "4"))) (re.++ (re.+ (re.union (str.to_re "5") (str.to_re "6"))) (re.++ (re.* (re.* (str.to_re "77"))) (re.++ (re.union (re.* (str.to_re "888")) (re.+ (str.to_re "999"))) (re.++ (re.+ (re.+ (str.to_re "aa"))) (re.++ (re.* (re.+ (str.to_re "bb"))) (re.++ (re.* (re.+ (str.to_re "cc"))) (re.++ (re.+ (re.+ (str.to_re "ddd"))) (re.++ (re.* (re.+ (str.to_re "eee"))) (re.++ (re.union (re.* (str.to_re "fff")) (re.union (str.to_re "gg") (str.to_re "hh"))) (re.++ (re.union (re.union (str.to_re "iii") (str.to_re "jjj")) (re.+ (str.to_re "k"))) (re.++ (re.+ (re.* (str.to_re "lll"))) (re.++ (re.+ (re.+ (str.to_re "mm"))) (re.++ (re.union (re.+ (str.to_re "nn")) (re.* (str.to_re "oo"))) (re.++ (re.union (re.+ (str.to_re "p")) (re.union (str.to_re "q") (str.to_re "rrr"))) (re.++ (re.* (re.union (str.to_re "s") (str.to_re "ttt"))) (re.++ (re.* (re.union (str.to_re "uuu") (str.to_re "vv"))) (re.++ (re.* (re.union (str.to_re "w") (str.to_re "xx"))) (re.++ (re.* (re.union (str.to_re "yy") (str.to_re "zz"))) (re.++ (re.* (re.union (str.to_re "AAA") (str.to_re "BBB"))) (re.++ (re.union (re.+ (str.to_re "CC")) (re.+ (str.to_re "D"))) (re.++ (re.union (re.union (str.to_re "EEE") (str.to_re "FFF")) (re.union (str.to_re "GGG") (str.to_re "H"))) (re.++ (re.+ (re.* (str.to_re "II"))) (re.++ (re.+ (re.union (str.to_re "JJ") (str.to_re "KKK"))) (re.++ (re.union (re.union (str.to_re "LLL") (str.to_re "M")) (re.+ (str.to_re "NN"))) (re.++ (re.union (re.union (str.to_re "OOO") (str.to_re "PPP")) (re.union (str.to_re "QQQ") (str.to_re "RR"))) (re.++ (re.union (re.+ (str.to_re "SS")) (re.* (str.to_re "T"))) (re.++ (re.* (re.* (str.to_re "U"))) (re.++ (re.+ (re.union (str.to_re "V") (str.to_re "W"))) (re.++ (re.union (re.+ (str.to_re "XXX")) (re.union (str.to_re "YY") (str.to_re "ZZZ"))) (re.++ (re.* (re.+ (str.to_re "!!!"))) (re.++ (re.+ (re.union (str.to_re """""""") (str.to_re "###"))) (re.++ (re.* (re.* (str.to_re "$"))) (re.++ (re.+ (re.union (str.to_re "%%") (str.to_re "&"))) (re.++ (re.* (re.+ (str.to_re "''"))) (re.++ (re.union (re.union (str.to_re "(") (str.to_re ")")) (re.union (str.to_re "**") (str.to_re "++"))) (re.++ (re.union (re.* (str.to_re ",")) (re.union (str.to_re "-") (str.to_re ".."))) (re.++ (re.union (re.* (str.to_re "//")) (re.+ (str.to_re ":::"))) (re.++ (re.* (re.* (str.to_re ";;;"))) (re.++ (re.union (re.* (str.to_re "<")) (re.+ (str.to_re "="))) (re.++ (re.* (re.* (str.to_re ">"))) (re.++ (re.union (re.* (str.to_re "???")) (re.+ (str.to_re "@"))) (re.++ (re.union (re.+ (str.to_re "[[")) (re.union (str.to_re "\\\\\\") (str.to_re "]]"))) (re.++ (re.+ (re.union (str.to_re "^") (str.to_re "__"))) (re.++ (re.+ (re.* (str.to_re "``"))) (re.++ (re.* (re.* (str.to_re "{{{"))) (re.++ (re.union (re.+ (str.to_re "|")) (re.+ (str.to_re "}}"))) (re.+ (re.union (str.to_re "~") (str.to_re "00")))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.* (re.union (str.to_re "000") (str.to_re "111"))) (re.++ (re.* (re.union (str.to_re "222") (str.to_re "333"))) (re.++ (re.+ (re.union (str.to_re "44") (str.to_re "555"))) (re.++ (re.+ (re.union (str.to_re "6") (str.to_re "77"))) (re.++ (re.+ (re.* (str.to_re "88"))) (re.++ (re.union (re.+ (str.to_re "9")) (re.* (str.to_re "a"))) (re.++ (re.union (re.* (str.to_re "bb")) (re.+ (str.to_re "ccc"))) (re.++ (re.+ (re.+ (str.to_re "ddd"))) (re.++ (re.+ (re.* (str.to_re "eee"))) (re.++ (re.union (re.* (str.to_re "fff")) (re.+ (str.to_re "g"))) (re.++ (re.union (re.+ (str.to_re "hhh")) (re.union (str.to_re "i") (str.to_re "jj"))) (re.++ (re.union (re.* (str.to_re "kkk")) (re.* (str.to_re "lll"))) (re.++ (re.union (re.+ (str.to_re "mm")) (re.* (str.to_re "nnn"))) (re.++ (re.+ (re.union (str.to_re "ooo") (str.to_re "pp"))) (re.++ (re.union (re.union (str.to_re "qqq") (str.to_re "r")) (re.* (str.to_re "ss"))) (re.++ (re.+ (re.* (str.to_re "t"))) (re.++ (re.+ (re.union (str.to_re "uuu") (str.to_re "v"))) (re.++ (re.+ (re.+ (str.to_re "www"))) (re.++ (re.* (re.union (str.to_re "x") (str.to_re "yyy"))) (re.++ (re.* (re.union (str.to_re "zz") (str.to_re "AA"))) (re.++ (re.+ (re.* (str.to_re "BBB"))) (re.++ (re.* (re.union (str.to_re "CC") (str.to_re "DD"))) (re.++ (re.+ (re.+ (str.to_re "EE"))) (re.++ (re.* (re.+ (str.to_re "F"))) (re.++ (re.+ (re.union (str.to_re "GG") (str.to_re "H"))) (re.++ (re.* (re.union (str.to_re "II") (str.to_re "J"))) (re.++ (re.union (re.union (str.to_re "KKK") (str.to_re "LLL")) (re.+ (str.to_re "MMM"))) (re.++ (re.* (re.+ (str.to_re "N"))) (re.++ (re.* (re.* (str.to_re "O"))) (re.++ (re.union (re.* (str.to_re "PP")) (re.+ (str.to_re "Q"))) (re.++ (re.union (re.+ (str.to_re "RR")) (re.* (str.to_re "S"))) (re.++ (re.* (re.union (str.to_re "T") (str.to_re "UU"))) (re.++ (re.* (re.* (str.to_re "VVV"))) (re.++ (re.* (re.union (str.to_re "W") (str.to_re "XX"))) (re.++ (re.* (re.+ (str.to_re "YYY"))) (re.++ (re.+ (re.* (str.to_re "Z"))) (re.++ (re.+ (re.+ (str.to_re "!!"))) (re.++ (re.* (re.union (str.to_re """") (str.to_re "###"))) (re.++ (re.+ (re.+ (str.to_re "$$$"))) (re.++ (re.* (re.* (str.to_re "%%"))) (re.++ (re.* (re.+ (str.to_re "&&"))) (re.++ (re.* (re.union (str.to_re "'''") (str.to_re "((("))) (re.++ (re.* (re.union (str.to_re ")") (str.to_re "***"))) (re.++ (re.+ (re.+ (str.to_re "+"))) (re.++ (re.union (re.union (str.to_re ",,,") (str.to_re "-")) (re.union (str.to_re "...") (str.to_re "//"))) (re.++ (re.union (re.+ (str.to_re ":")) (re.union (str.to_re ";;;") (str.to_re "<<"))) (re.++ (re.+ (re.+ (str.to_re "="))) (re.++ (re.* (re.+ (str.to_re ">>"))) (re.++ (re.* (re.union (str.to_re "???") (str.to_re "@@"))) (re.++ (re.union (re.+ (str.to_re "[")) (re.* (str.to_re "\\"))) (re.+ (re.union (str.to_re "]") (str.to_re "^"))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
