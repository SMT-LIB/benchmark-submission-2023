(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "000")) (re.* (str.to_re "11"))) (re.++ (re.* (re.+ (str.to_re "222"))) (re.++ (re.union (re.* (str.to_re "3")) (re.* (str.to_re "4"))) (re.++ (re.union (re.+ (str.to_re "55")) (re.union (str.to_re "6") (str.to_re "77"))) (re.++ (re.union (re.* (str.to_re "888")) (re.+ (str.to_re "9"))) (re.++ (re.* (re.* (str.to_re "aa"))) (re.++ (re.+ (re.+ (str.to_re "bb"))) (re.++ (re.* (re.+ (str.to_re "ccc"))) (re.++ (re.union (re.union (str.to_re "dd") (str.to_re "ee")) (re.union (str.to_re "f") (str.to_re "ggg"))) (re.++ (re.* (re.union (str.to_re "h") (str.to_re "ii"))) (re.++ (re.union (re.+ (str.to_re "jj")) (re.union (str.to_re "kk") (str.to_re "l"))) (re.++ (re.* (re.+ (str.to_re "mm"))) (re.++ (re.union (re.union (str.to_re "nn") (str.to_re "ooo")) (re.* (str.to_re "pp"))) (re.++ (re.+ (re.+ (str.to_re "q"))) (re.++ (re.* (re.union (str.to_re "rrr") (str.to_re "ss"))) (re.++ (re.+ (re.+ (str.to_re "t"))) (re.++ (re.union (re.+ (str.to_re "uu")) (re.* (str.to_re "vv"))) (re.++ (re.union (re.* (str.to_re "ww")) (re.+ (str.to_re "xxx"))) (re.++ (re.+ (re.+ (str.to_re "yy"))) (re.++ (re.union (re.* (str.to_re "zz")) (re.union (str.to_re "AAA") (str.to_re "B"))) (re.++ (re.* (re.* (str.to_re "CC"))) (re.++ (re.union (re.+ (str.to_re "D")) (re.+ (str.to_re "EEE"))) (re.++ (re.* (re.+ (str.to_re "F"))) (re.++ (re.* (re.+ (str.to_re "GGG"))) (re.++ (re.union (re.union (str.to_re "H") (str.to_re "III")) (re.* (str.to_re "JJJ"))) (re.++ (re.union (re.* (str.to_re "KKK")) (re.union (str.to_re "LLL") (str.to_re "MM"))) (re.++ (re.* (re.union (str.to_re "NN") (str.to_re "O"))) (re.++ (re.+ (re.* (str.to_re "PPP"))) (re.++ (re.+ (re.+ (str.to_re "QQ"))) (re.++ (re.+ (re.+ (str.to_re "RRR"))) (re.++ (re.* (re.* (str.to_re "SSS"))) (re.++ (re.union (re.* (str.to_re "T")) (re.* (str.to_re "UUU"))) (re.++ (re.+ (re.union (str.to_re "VV") (str.to_re "WWW"))) (re.++ (re.union (re.* (str.to_re "XXX")) (re.+ (str.to_re "Y"))) (re.++ (re.* (re.union (str.to_re "Z") (str.to_re "!!!"))) (re.++ (re.+ (re.union (str.to_re """""""") (str.to_re "##"))) (re.++ (re.union (re.* (str.to_re "$$$")) (re.+ (str.to_re "%"))) (re.++ (re.* (re.union (str.to_re "&") (str.to_re "''"))) (re.++ (re.union (re.+ (str.to_re "((")) (re.* (str.to_re ")"))) (re.++ (re.union (re.+ (str.to_re "***")) (re.* (str.to_re "+"))) (re.++ (re.union (re.* (str.to_re ",")) (re.* (str.to_re "--"))) (re.++ (re.* (re.* (str.to_re "."))) (re.++ (re.union (re.+ (str.to_re "//")) (re.* (str.to_re "::"))) (re.++ (re.* (re.union (str.to_re ";") (str.to_re "<"))) (re.++ (re.+ (re.+ (str.to_re "="))) (re.++ (re.union (re.* (str.to_re ">>>")) (re.* (str.to_re "???"))) (re.++ (re.union (re.union (str.to_re "@") (str.to_re "[[")) (re.+ (str.to_re "\\\\\\"))) (re.++ (re.union (re.* (str.to_re "]]")) (re.+ (str.to_re "^^"))) (re.++ (re.union (re.union (str.to_re "___") (str.to_re "`")) (re.+ (str.to_re "{"))) (re.++ (re.* (re.* (str.to_re "|"))) (re.* (re.* (str.to_re "}")))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
