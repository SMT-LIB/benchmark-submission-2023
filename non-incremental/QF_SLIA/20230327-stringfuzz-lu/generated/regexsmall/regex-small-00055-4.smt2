(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "000") (str.to_re "111"))) (re.++ (re.+ (re.union (str.to_re "22") (str.to_re "33"))) (re.++ (re.union (re.union (str.to_re "444") (str.to_re "5")) (re.+ (str.to_re "66"))) (re.++ (re.union (re.+ (str.to_re "7")) (re.+ (str.to_re "8"))) (re.++ (re.* (re.* (str.to_re "99"))) (re.++ (re.* (re.union (str.to_re "aa") (str.to_re "bbb"))) (re.++ (re.+ (re.union (str.to_re "ccc") (str.to_re "ddd"))) (re.++ (re.union (re.* (str.to_re "ee")) (re.+ (str.to_re "fff"))) (re.++ (re.union (re.union (str.to_re "ggg") (str.to_re "h")) (re.union (str.to_re "ii") (str.to_re "j"))) (re.++ (re.union (re.+ (str.to_re "kk")) (re.union (str.to_re "l") (str.to_re "m"))) (re.++ (re.* (re.union (str.to_re "nn") (str.to_re "ooo"))) (re.++ (re.* (re.union (str.to_re "p") (str.to_re "qqq"))) (re.++ (re.union (re.union (str.to_re "rr") (str.to_re "sss")) (re.union (str.to_re "ttt") (str.to_re "uu"))) (re.++ (re.+ (re.+ (str.to_re "v"))) (re.++ (re.+ (re.* (str.to_re "w"))) (re.++ (re.+ (re.union (str.to_re "xx") (str.to_re "y"))) (re.++ (re.+ (re.+ (str.to_re "z"))) (re.++ (re.* (re.union (str.to_re "AAA") (str.to_re "BB"))) (re.++ (re.+ (re.* (str.to_re "C"))) (re.++ (re.+ (re.* (str.to_re "DD"))) (re.++ (re.* (re.* (str.to_re "E"))) (re.++ (re.union (re.* (str.to_re "FF")) (re.union (str.to_re "GG") (str.to_re "HH"))) (re.++ (re.* (re.* (str.to_re "II"))) (re.++ (re.+ (re.* (str.to_re "JJJ"))) (re.++ (re.* (re.* (str.to_re "K"))) (re.++ (re.union (re.union (str.to_re "LL") (str.to_re "MMM")) (re.+ (str.to_re "N"))) (re.++ (re.union (re.+ (str.to_re "OOO")) (re.* (str.to_re "PPP"))) (re.++ (re.union (re.union (str.to_re "Q") (str.to_re "R")) (re.+ (str.to_re "SS"))) (re.++ (re.+ (re.* (str.to_re "T"))) (re.++ (re.union (re.+ (str.to_re "UUU")) (re.union (str.to_re "VVV") (str.to_re "W"))) (re.++ (re.+ (re.union (str.to_re "XXX") (str.to_re "Y"))) (re.++ (re.* (re.union (str.to_re "Z") (str.to_re "!!"))) (re.++ (re.+ (re.union (str.to_re """""""") (str.to_re "###"))) (re.++ (re.union (re.union (str.to_re "$$$") (str.to_re "%")) (re.union (str.to_re "&&&") (str.to_re "'''"))) (re.++ (re.union (re.+ (str.to_re "(")) (re.* (str.to_re ")))"))) (re.++ (re.union (re.+ (str.to_re "**")) (re.* (str.to_re "++"))) (re.++ (re.union (re.* (str.to_re ",")) (re.union (str.to_re "---") (str.to_re "."))) (re.++ (re.union (re.* (str.to_re "//")) (re.union (str.to_re "::") (str.to_re ";;"))) (re.++ (re.union (re.+ (str.to_re "<")) (re.union (str.to_re "===") (str.to_re ">>>"))) (re.++ (re.* (re.+ (str.to_re "?"))) (re.++ (re.+ (re.union (str.to_re "@@@") (str.to_re "[["))) (re.++ (re.* (re.+ (str.to_re "\\"))) (re.++ (re.* (re.* (str.to_re "]]"))) (re.++ (re.union (re.+ (str.to_re "^")) (re.+ (str.to_re "__"))) (re.++ (re.union (re.+ (str.to_re "``")) (re.union (str.to_re "{") (str.to_re "|||"))) (re.++ (re.union (re.+ (str.to_re "}}")) (re.union (str.to_re "~~") (str.to_re "00"))) (re.++ (re.+ (re.union (str.to_re "1") (str.to_re "22"))) (re.++ (re.union (re.* (str.to_re "3")) (re.* (str.to_re "44"))) (re.++ (re.+ (re.* (str.to_re "555"))) (re.++ (re.* (re.union (str.to_re "66") (str.to_re "777"))) (re.++ (re.+ (re.* (str.to_re "888"))) (re.++ (re.* (re.union (str.to_re "999") (str.to_re "a"))) (re.++ (re.union (re.+ (str.to_re "bb")) (re.* (str.to_re "ccc"))) (re.++ (re.* (re.+ (str.to_re "ddd"))) (re.+ (re.* (str.to_re "ee")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
