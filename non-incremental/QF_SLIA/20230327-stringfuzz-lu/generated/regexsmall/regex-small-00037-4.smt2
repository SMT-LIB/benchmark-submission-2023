(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "00")) (re.* (str.to_re "111"))) (re.++ (re.union (re.+ (str.to_re "22")) (re.union (str.to_re "33") (str.to_re "4"))) (re.++ (re.+ (re.* (str.to_re "5"))) (re.++ (re.+ (re.+ (str.to_re "666"))) (re.++ (re.union (re.* (str.to_re "7")) (re.* (str.to_re "8"))) (re.++ (re.+ (re.union (str.to_re "9") (str.to_re "a"))) (re.++ (re.+ (re.union (str.to_re "b") (str.to_re "ccc"))) (re.++ (re.+ (re.union (str.to_re "d") (str.to_re "eee"))) (re.++ (re.union (re.* (str.to_re "f")) (re.+ (str.to_re "gg"))) (re.++ (re.+ (re.* (str.to_re "hhh"))) (re.++ (re.* (re.union (str.to_re "i") (str.to_re "jjj"))) (re.++ (re.union (re.union (str.to_re "k") (str.to_re "lll")) (re.* (str.to_re "m"))) (re.++ (re.+ (re.* (str.to_re "n"))) (re.++ (re.union (re.+ (str.to_re "ooo")) (re.union (str.to_re "pp") (str.to_re "qqq"))) (re.++ (re.union (re.+ (str.to_re "rr")) (re.* (str.to_re "ss"))) (re.++ (re.+ (re.+ (str.to_re "t"))) (re.++ (re.+ (re.+ (str.to_re "u"))) (re.++ (re.+ (re.+ (str.to_re "v"))) (re.++ (re.union (re.union (str.to_re "www") (str.to_re "xxx")) (re.* (str.to_re "yy"))) (re.++ (re.+ (re.+ (str.to_re "zz"))) (re.++ (re.+ (re.union (str.to_re "AA") (str.to_re "B"))) (re.++ (re.* (re.* (str.to_re "CCC"))) (re.++ (re.+ (re.union (str.to_re "DD") (str.to_re "E"))) (re.++ (re.* (re.union (str.to_re "FF") (str.to_re "G"))) (re.++ (re.+ (re.+ (str.to_re "H"))) (re.++ (re.+ (re.union (str.to_re "I") (str.to_re "JJJ"))) (re.++ (re.+ (re.+ (str.to_re "KKK"))) (re.++ (re.+ (re.union (str.to_re "LL") (str.to_re "MM"))) (re.++ (re.union (re.union (str.to_re "NN") (str.to_re "OOO")) (re.* (str.to_re "PPP"))) (re.++ (re.* (re.union (str.to_re "QQQ") (str.to_re "RRR"))) (re.++ (re.+ (re.union (str.to_re "SSS") (str.to_re "T"))) (re.++ (re.+ (re.* (str.to_re "UUU"))) (re.++ (re.union (re.+ (str.to_re "VVV")) (re.* (str.to_re "W"))) (re.++ (re.* (re.* (str.to_re "X"))) (re.++ (re.union (re.+ (str.to_re "YYY")) (re.* (str.to_re "Z"))) (re.++ (re.union (re.+ (str.to_re "!!")) (re.* (str.to_re """"""))) (re.+ (re.* (str.to_re "###")))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
