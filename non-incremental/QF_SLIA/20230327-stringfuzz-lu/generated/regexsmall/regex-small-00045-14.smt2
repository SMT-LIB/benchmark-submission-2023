(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "00"))) (re.++ (re.union (re.union (str.to_re "11") (str.to_re "222")) (re.* (str.to_re "33"))) (re.++ (re.union (re.+ (str.to_re "44")) (re.union (str.to_re "5") (str.to_re "66"))) (re.++ (re.union (re.+ (str.to_re "77")) (re.* (str.to_re "8"))) (re.++ (re.+ (re.+ (str.to_re "999"))) (re.++ (re.union (re.union (str.to_re "aaa") (str.to_re "bb")) (re.+ (str.to_re "cc"))) (re.++ (re.+ (re.* (str.to_re "dd"))) (re.++ (re.union (re.+ (str.to_re "e")) (re.union (str.to_re "f") (str.to_re "gg"))) (re.++ (re.+ (re.union (str.to_re "hhh") (str.to_re "iii"))) (re.++ (re.union (re.union (str.to_re "jj") (str.to_re "kk")) (re.* (str.to_re "ll"))) (re.++ (re.union (re.* (str.to_re "m")) (re.* (str.to_re "nn"))) (re.++ (re.+ (re.+ (str.to_re "o"))) (re.++ (re.+ (re.union (str.to_re "ppp") (str.to_re "q"))) (re.++ (re.union (re.* (str.to_re "rrr")) (re.union (str.to_re "ss") (str.to_re "tt"))) (re.++ (re.+ (re.* (str.to_re "uu"))) (re.++ (re.union (re.* (str.to_re "vv")) (re.+ (str.to_re "w"))) (re.++ (re.+ (re.union (str.to_re "xx") (str.to_re "yyy"))) (re.++ (re.union (re.+ (str.to_re "zzz")) (re.+ (str.to_re "AA"))) (re.++ (re.+ (re.+ (str.to_re "B"))) (re.++ (re.* (re.* (str.to_re "CCC"))) (re.++ (re.* (re.* (str.to_re "DDD"))) (re.++ (re.union (re.union (str.to_re "EE") (str.to_re "F")) (re.union (str.to_re "GGG") (str.to_re "HH"))) (re.++ (re.union (re.+ (str.to_re "III")) (re.* (str.to_re "J"))) (re.++ (re.+ (re.+ (str.to_re "KKK"))) (re.++ (re.* (re.+ (str.to_re "LL"))) (re.++ (re.+ (re.+ (str.to_re "MMM"))) (re.++ (re.+ (re.* (str.to_re "N"))) (re.++ (re.+ (re.* (str.to_re "OOO"))) (re.++ (re.union (re.union (str.to_re "P") (str.to_re "QQ")) (re.union (str.to_re "RRR") (str.to_re "S"))) (re.++ (re.union (re.* (str.to_re "TT")) (re.union (str.to_re "UU") (str.to_re "V"))) (re.++ (re.* (re.union (str.to_re "W") (str.to_re "XXX"))) (re.++ (re.union (re.* (str.to_re "Y")) (re.union (str.to_re "Z") (str.to_re "!!"))) (re.++ (re.union (re.union (str.to_re """") (str.to_re "##")) (re.+ (str.to_re "$"))) (re.++ (re.union (re.* (str.to_re "%")) (re.union (str.to_re "&") (str.to_re "'''"))) (re.++ (re.union (re.+ (str.to_re "((")) (re.+ (str.to_re ")"))) (re.++ (re.* (re.+ (str.to_re "**"))) (re.++ (re.union (re.* (str.to_re "+++")) (re.+ (str.to_re ",,,"))) (re.++ (re.* (re.union (str.to_re "--") (str.to_re "."))) (re.++ (re.union (re.+ (str.to_re "/")) (re.union (str.to_re ":::") (str.to_re ";;"))) (re.++ (re.+ (re.* (str.to_re "<<"))) (re.++ (re.+ (re.* (str.to_re "=="))) (re.++ (re.* (re.* (str.to_re ">>>"))) (re.++ (re.+ (re.union (str.to_re "?") (str.to_re "@@@"))) (re.++ (re.union (re.+ (str.to_re "[[[")) (re.union (str.to_re "\\\\\\") (str.to_re "]]]"))) (re.+ (re.+ (str.to_re "^")))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
