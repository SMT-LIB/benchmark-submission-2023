(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "0"))) (re.++ (re.* (re.union (str.to_re "1") (str.to_re "2"))) (re.++ (re.+ (re.* (str.to_re "33"))) (re.++ (re.* (re.* (str.to_re "4"))) (re.++ (re.* (re.* (str.to_re "555"))) (re.++ (re.+ (re.union (str.to_re "66") (str.to_re "77"))) (re.++ (re.* (re.+ (str.to_re "8"))) (re.++ (re.* (re.+ (str.to_re "9"))) (re.++ (re.union (re.union (str.to_re "a") (str.to_re "bbb")) (re.* (str.to_re "c"))) (re.++ (re.+ (re.* (str.to_re "dd"))) (re.++ (re.+ (re.union (str.to_re "eee") (str.to_re "f"))) (re.++ (re.+ (re.+ (str.to_re "g"))) (re.++ (re.* (re.* (str.to_re "hh"))) (re.++ (re.* (re.+ (str.to_re "ii"))) (re.++ (re.* (re.+ (str.to_re "j"))) (re.++ (re.union (re.union (str.to_re "k") (str.to_re "lll")) (re.union (str.to_re "m") (str.to_re "n"))) (re.++ (re.union (re.* (str.to_re "o")) (re.+ (str.to_re "pp"))) (re.++ (re.union (re.* (str.to_re "qqq")) (re.union (str.to_re "rr") (str.to_re "sss"))) (re.++ (re.+ (re.+ (str.to_re "ttt"))) (re.++ (re.* (re.+ (str.to_re "uu"))) (re.++ (re.union (re.* (str.to_re "vvv")) (re.* (str.to_re "w"))) (re.++ (re.+ (re.+ (str.to_re "xx"))) (re.++ (re.* (re.+ (str.to_re "yy"))) (re.++ (re.* (re.+ (str.to_re "zzz"))) (re.++ (re.* (re.* (str.to_re "AAA"))) (re.++ (re.* (re.+ (str.to_re "BBB"))) (re.++ (re.union (re.* (str.to_re "C")) (re.+ (str.to_re "DD"))) (re.++ (re.union (re.+ (str.to_re "E")) (re.union (str.to_re "FF") (str.to_re "GG"))) (re.++ (re.+ (re.+ (str.to_re "HHH"))) (re.++ (re.union (re.union (str.to_re "I") (str.to_re "J")) (re.+ (str.to_re "KKK"))) (re.++ (re.* (re.* (str.to_re "LLL"))) (re.++ (re.+ (re.+ (str.to_re "MM"))) (re.++ (re.union (re.* (str.to_re "NNN")) (re.* (str.to_re "O"))) (re.++ (re.* (re.* (str.to_re "PPP"))) (re.++ (re.* (re.+ (str.to_re "Q"))) (re.++ (re.union (re.union (str.to_re "R") (str.to_re "SS")) (re.+ (str.to_re "TT"))) (re.++ (re.* (re.+ (str.to_re "U"))) (re.++ (re.* (re.* (str.to_re "V"))) (re.++ (re.* (re.+ (str.to_re "W"))) (re.++ (re.* (re.union (str.to_re "XX") (str.to_re "Y"))) (re.++ (re.union (re.* (str.to_re "Z")) (re.union (str.to_re "!!!") (str.to_re """"))) (re.++ (re.+ (re.* (str.to_re "###"))) (re.* (re.+ (str.to_re "$$$")))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
