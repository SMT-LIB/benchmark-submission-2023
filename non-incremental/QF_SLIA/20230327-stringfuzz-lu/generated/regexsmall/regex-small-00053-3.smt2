(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "000")) (re.union (str.to_re "11") (str.to_re "22"))) (re.++ (re.* (re.union (str.to_re "333") (str.to_re "44"))) (re.++ (re.+ (re.union (str.to_re "5") (str.to_re "66"))) (re.++ (re.* (re.+ (str.to_re "777"))) (re.++ (re.+ (re.+ (str.to_re "888"))) (re.++ (re.union (re.* (str.to_re "99")) (re.union (str.to_re "aaa") (str.to_re "b"))) (re.++ (re.union (re.union (str.to_re "c") (str.to_re "dd")) (re.union (str.to_re "e") (str.to_re "ff"))) (re.++ (re.* (re.union (str.to_re "ggg") (str.to_re "hh"))) (re.++ (re.union (re.* (str.to_re "iii")) (re.* (str.to_re "jj"))) (re.++ (re.union (re.union (str.to_re "k") (str.to_re "ll")) (re.+ (str.to_re "mm"))) (re.++ (re.union (re.union (str.to_re "nn") (str.to_re "oo")) (re.union (str.to_re "p") (str.to_re "q"))) (re.++ (re.+ (re.+ (str.to_re "rrr"))) (re.++ (re.+ (re.union (str.to_re "sss") (str.to_re "ttt"))) (re.++ (re.+ (re.* (str.to_re "u"))) (re.++ (re.* (re.* (str.to_re "vvv"))) (re.++ (re.* (re.+ (str.to_re "w"))) (re.++ (re.union (re.* (str.to_re "x")) (re.* (str.to_re "yy"))) (re.++ (re.* (re.union (str.to_re "zz") (str.to_re "AA"))) (re.++ (re.* (re.* (str.to_re "B"))) (re.++ (re.* (re.* (str.to_re "CC"))) (re.++ (re.+ (re.* (str.to_re "DD"))) (re.++ (re.union (re.union (str.to_re "EE") (str.to_re "FF")) (re.+ (str.to_re "GG"))) (re.++ (re.+ (re.union (str.to_re "HHH") (str.to_re "I"))) (re.++ (re.* (re.union (str.to_re "J") (str.to_re "KK"))) (re.++ (re.* (re.+ (str.to_re "LL"))) (re.++ (re.+ (re.union (str.to_re "MMM") (str.to_re "NN"))) (re.++ (re.* (re.union (str.to_re "OO") (str.to_re "PP"))) (re.++ (re.* (re.* (str.to_re "Q"))) (re.++ (re.* (re.union (str.to_re "RR") (str.to_re "SS"))) (re.++ (re.* (re.+ (str.to_re "TTT"))) (re.++ (re.union (re.+ (str.to_re "U")) (re.union (str.to_re "VV") (str.to_re "W"))) (re.++ (re.* (re.+ (str.to_re "XXX"))) (re.++ (re.* (re.* (str.to_re "YYY"))) (re.++ (re.+ (re.* (str.to_re "ZZ"))) (re.++ (re.+ (re.* (str.to_re "!!"))) (re.++ (re.* (re.+ (str.to_re """"))) (re.++ (re.+ (re.union (str.to_re "#") (str.to_re "$$"))) (re.++ (re.union (re.* (str.to_re "%")) (re.* (str.to_re "&&&"))) (re.++ (re.union (re.* (str.to_re "'''")) (re.* (str.to_re "((("))) (re.++ (re.union (re.+ (str.to_re ")")) (re.* (str.to_re "***"))) (re.++ (re.+ (re.+ (str.to_re "+++"))) (re.++ (re.* (re.* (str.to_re ",,"))) (re.++ (re.* (re.* (str.to_re "---"))) (re.++ (re.+ (re.union (str.to_re "..") (str.to_re "///"))) (re.++ (re.+ (re.+ (str.to_re ":::"))) (re.++ (re.+ (re.+ (str.to_re ";;"))) (re.++ (re.* (re.+ (str.to_re "<<<"))) (re.++ (re.* (re.* (str.to_re "==="))) (re.++ (re.union (re.* (str.to_re ">>>")) (re.+ (str.to_re "??"))) (re.++ (re.union (re.union (str.to_re "@@@") (str.to_re "[")) (re.* (str.to_re "\\\\\\"))) (re.++ (re.union (re.union (str.to_re "]]") (str.to_re "^^^")) (re.union (str.to_re "__") (str.to_re "```"))) (re.++ (re.+ (re.union (str.to_re "{{") (str.to_re "||"))) (re.* (re.+ (str.to_re "}}")))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
