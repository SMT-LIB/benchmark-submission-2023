(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.union (str.to_re "00") (str.to_re "111"))) (re.++ (re.* (re.* (str.to_re "222"))) (re.++ (re.+ (re.union (str.to_re "3") (str.to_re "44"))) (re.++ (re.union (re.union (str.to_re "55") (str.to_re "66")) (re.+ (str.to_re "77"))) (re.++ (re.* (re.union (str.to_re "8") (str.to_re "999"))) (re.++ (re.union (re.union (str.to_re "aaa") (str.to_re "b")) (re.+ (str.to_re "ccc"))) (re.++ (re.* (re.* (str.to_re "dd"))) (re.++ (re.+ (re.* (str.to_re "ee"))) (re.++ (re.union (re.+ (str.to_re "fff")) (re.union (str.to_re "ggg") (str.to_re "h"))) (re.++ (re.* (re.+ (str.to_re "i"))) (re.++ (re.* (re.+ (str.to_re "jjj"))) (re.++ (re.+ (re.+ (str.to_re "kkk"))) (re.++ (re.+ (re.union (str.to_re "l") (str.to_re "mm"))) (re.++ (re.* (re.* (str.to_re "nnn"))) (re.++ (re.union (re.+ (str.to_re "oo")) (re.union (str.to_re "ppp") (str.to_re "qq"))) (re.++ (re.union (re.union (str.to_re "rr") (str.to_re "ss")) (re.* (str.to_re "t"))) (re.++ (re.union (re.* (str.to_re "uu")) (re.union (str.to_re "v") (str.to_re "www"))) (re.++ (re.union (re.union (str.to_re "x") (str.to_re "y")) (re.+ (str.to_re "z"))) (re.++ (re.* (re.+ (str.to_re "AA"))) (re.++ (re.union (re.+ (str.to_re "BBB")) (re.* (str.to_re "C"))) (re.++ (re.* (re.union (str.to_re "DD") (str.to_re "E"))) (re.++ (re.union (re.+ (str.to_re "FFF")) (re.+ (str.to_re "GG"))) (re.++ (re.* (re.* (str.to_re "HH"))) (re.++ (re.* (re.union (str.to_re "III") (str.to_re "JJJ"))) (re.++ (re.* (re.+ (str.to_re "KK"))) (re.++ (re.* (re.* (str.to_re "L"))) (re.++ (re.union (re.+ (str.to_re "MMM")) (re.+ (str.to_re "NNN"))) (re.++ (re.union (re.* (str.to_re "OO")) (re.union (str.to_re "P") (str.to_re "QQQ"))) (re.++ (re.* (re.+ (str.to_re "RRR"))) (re.++ (re.union (re.* (str.to_re "SS")) (re.union (str.to_re "T") (str.to_re "U"))) (re.++ (re.* (re.union (str.to_re "V") (str.to_re "WWW"))) (re.++ (re.+ (re.* (str.to_re "XXX"))) (re.++ (re.+ (re.union (str.to_re "YYY") (str.to_re "Z"))) (re.++ (re.* (re.union (str.to_re "!") (str.to_re """"""))) (re.++ (re.* (re.+ (str.to_re "##"))) (re.++ (re.+ (re.+ (str.to_re "$$$"))) (re.union (re.union (str.to_re "%%%") (str.to_re "&&")) (re.union (str.to_re "'''") (str.to_re "(")))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
