(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.union (re.* (str.to_re "111")) (re.+ (str.to_re "222"))) (re.++ (re.* (re.* (str.to_re "333"))) (re.++ (re.union (re.* (str.to_re "444")) (re.+ (str.to_re "5"))) (re.++ (re.union (re.union (str.to_re "666") (str.to_re "7")) (re.* (str.to_re "888"))) (re.++ (re.+ (re.* (str.to_re "999"))) (re.++ (re.* (re.union (str.to_re "a") (str.to_re "bbb"))) (re.++ (re.+ (re.+ (str.to_re "c"))) (re.++ (re.* (re.* (str.to_re "ddd"))) (re.++ (re.* (re.+ (str.to_re "e"))) (re.++ (re.union (re.* (str.to_re "ff")) (re.* (str.to_re "g"))) (re.++ (re.* (re.* (str.to_re "h"))) (re.++ (re.+ (re.union (str.to_re "ii") (str.to_re "jj"))) (re.++ (re.union (re.* (str.to_re "k")) (re.* (str.to_re "lll"))) (re.++ (re.+ (re.+ (str.to_re "m"))) (re.++ (re.* (re.+ (str.to_re "nn"))) (re.++ (re.+ (re.union (str.to_re "ooo") (str.to_re "pp"))) (re.++ (re.union (re.union (str.to_re "qq") (str.to_re "rrr")) (re.* (str.to_re "ss"))) (re.++ (re.+ (re.+ (str.to_re "t"))) (re.++ (re.+ (re.union (str.to_re "uu") (str.to_re "vvv"))) (re.++ (re.union (re.union (str.to_re "ww") (str.to_re "x")) (re.+ (str.to_re "y"))) (re.++ (re.+ (re.union (str.to_re "z") (str.to_re "AAA"))) (re.++ (re.* (re.union (str.to_re "B") (str.to_re "C"))) (re.++ (re.* (re.+ (str.to_re "D"))) (re.++ (re.* (re.union (str.to_re "EE") (str.to_re "FFF"))) (re.++ (re.union (re.* (str.to_re "GGG")) (re.+ (str.to_re "H"))) (re.++ (re.* (re.+ (str.to_re "I"))) (re.++ (re.+ (re.union (str.to_re "JJJ") (str.to_re "K"))) (re.++ (re.+ (re.+ (str.to_re "LL"))) (re.++ (re.* (re.union (str.to_re "M") (str.to_re "NNN"))) (re.++ (re.union (re.+ (str.to_re "OOO")) (re.+ (str.to_re "PPP"))) (re.++ (re.* (re.union (str.to_re "Q") (str.to_re "RR"))) (re.++ (re.+ (re.+ (str.to_re "SS"))) (re.++ (re.union (re.+ (str.to_re "TTT")) (re.union (str.to_re "UUU") (str.to_re "V"))) (re.++ (re.+ (re.+ (str.to_re "WWW"))) (re.++ (re.+ (re.* (str.to_re "XX"))) (re.++ (re.+ (re.union (str.to_re "YYY") (str.to_re "Z"))) (re.++ (re.* (re.* (str.to_re "!"))) (re.++ (re.union (re.+ (str.to_re """""""")) (re.+ (str.to_re "#"))) (re.++ (re.union (re.union (str.to_re "$") (str.to_re "%")) (re.union (str.to_re "&") (str.to_re "'"))) (re.++ (re.+ (re.* (str.to_re "((("))) (re.++ (re.union (re.union (str.to_re ")))") (str.to_re "**")) (re.* (str.to_re "++"))) (re.++ (re.union (re.+ (str.to_re ",")) (re.+ (str.to_re "-"))) (re.++ (re.union (re.union (str.to_re ".") (str.to_re "//")) (re.+ (str.to_re ":"))) (re.++ (re.union (re.union (str.to_re ";") (str.to_re "<<<")) (re.+ (str.to_re "==="))) (re.++ (re.+ (re.union (str.to_re ">>") (str.to_re "??"))) (re.++ (re.union (re.union (str.to_re "@") (str.to_re "[")) (re.* (str.to_re "\\\\"))) (re.++ (re.* (re.+ (str.to_re "]]]"))) (re.++ (re.union (re.union (str.to_re "^") (str.to_re "__")) (re.* (str.to_re "``"))) (re.++ (re.union (re.* (str.to_re "{{")) (re.union (str.to_re "|||") (str.to_re "}}}"))) (re.++ (re.* (re.union (str.to_re "~~~") (str.to_re "00"))) (re.++ (re.* (re.union (str.to_re "1") (str.to_re "22"))) (re.++ (re.union (re.union (str.to_re "333") (str.to_re "4")) (re.+ (str.to_re "555"))) (re.++ (re.union (re.* (str.to_re "666")) (re.union (str.to_re "777") (str.to_re "8"))) (re.++ (re.union (re.* (str.to_re "999")) (re.union (str.to_re "aa") (str.to_re "bbb"))) (re.++ (re.union (re.union (str.to_re "c") (str.to_re "ddd")) (re.+ (str.to_re "e"))) (re.* (re.union (str.to_re "ff") (str.to_re "gg")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
