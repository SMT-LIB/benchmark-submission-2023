(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "00")) (re.union (str.to_re "1") (str.to_re "2"))) (re.++ (re.+ (re.union (str.to_re "33") (str.to_re "4"))) (re.++ (re.union (re.union (str.to_re "5") (str.to_re "666")) (re.+ (str.to_re "7"))) (re.++ (re.union (re.union (str.to_re "88") (str.to_re "9")) (re.* (str.to_re "aa"))) (re.++ (re.union (re.+ (str.to_re "bbb")) (re.+ (str.to_re "cc"))) (re.++ (re.+ (re.* (str.to_re "dd"))) (re.++ (re.* (re.* (str.to_re "ee"))) (re.++ (re.+ (re.* (str.to_re "fff"))) (re.++ (re.+ (re.* (str.to_re "g"))) (re.++ (re.+ (re.+ (str.to_re "hh"))) (re.++ (re.* (re.union (str.to_re "i") (str.to_re "jj"))) (re.++ (re.union (re.union (str.to_re "kk") (str.to_re "lll")) (re.* (str.to_re "mmm"))) (re.++ (re.union (re.+ (str.to_re "nn")) (re.union (str.to_re "ooo") (str.to_re "pp"))) (re.++ (re.union (re.union (str.to_re "qqq") (str.to_re "rrr")) (re.+ (str.to_re "sss"))) (re.++ (re.* (re.union (str.to_re "tt") (str.to_re "uuu"))) (re.++ (re.union (re.+ (str.to_re "vvv")) (re.union (str.to_re "ww") (str.to_re "xxx"))) (re.++ (re.* (re.* (str.to_re "yyy"))) (re.++ (re.* (re.union (str.to_re "z") (str.to_re "AA"))) (re.++ (re.union (re.union (str.to_re "B") (str.to_re "CC")) (re.union (str.to_re "DD") (str.to_re "EE"))) (re.++ (re.+ (re.+ (str.to_re "FFF"))) (re.++ (re.* (re.+ (str.to_re "G"))) (re.++ (re.* (re.+ (str.to_re "HHH"))) (re.++ (re.union (re.* (str.to_re "III")) (re.+ (str.to_re "J"))) (re.++ (re.union (re.* (str.to_re "KK")) (re.union (str.to_re "LLL") (str.to_re "MM"))) (re.++ (re.union (re.* (str.to_re "NNN")) (re.+ (str.to_re "OOO"))) (re.++ (re.+ (re.+ (str.to_re "PPP"))) (re.++ (re.+ (re.* (str.to_re "QQ"))) (re.++ (re.+ (re.* (str.to_re "R"))) (re.++ (re.+ (re.+ (str.to_re "SSS"))) (re.++ (re.+ (re.union (str.to_re "TT") (str.to_re "UU"))) (re.++ (re.* (re.* (str.to_re "VV"))) (re.++ (re.union (re.* (str.to_re "WWW")) (re.union (str.to_re "X") (str.to_re "YY"))) (re.++ (re.union (re.+ (str.to_re "ZZZ")) (re.+ (str.to_re "!!!"))) (re.++ (re.+ (re.* (str.to_re """"""))) (re.++ (re.union (re.+ (str.to_re "#")) (re.union (str.to_re "$") (str.to_re "%"))) (re.++ (re.+ (re.+ (str.to_re "&&"))) (re.++ (re.* (re.+ (str.to_re "'''"))) (re.++ (re.union (re.* (str.to_re "(((")) (re.union (str.to_re ")))") (str.to_re "*"))) (re.++ (re.union (re.* (str.to_re "+++")) (re.* (str.to_re ","))) (re.++ (re.* (re.+ (str.to_re "-"))) (re.++ (re.+ (re.union (str.to_re "...") (str.to_re "//"))) (re.++ (re.* (re.* (str.to_re "::"))) (re.++ (re.+ (re.* (str.to_re ";;;"))) (re.++ (re.union (re.* (str.to_re "<<")) (re.+ (str.to_re "="))) (re.++ (re.+ (re.+ (str.to_re ">"))) (re.++ (re.+ (re.union (str.to_re "??") (str.to_re "@"))) (re.++ (re.+ (re.* (str.to_re "[["))) (re.++ (re.+ (re.+ (str.to_re "\\"))) (re.++ (re.union (re.union (str.to_re "]") (str.to_re "^^^")) (re.+ (str.to_re "__"))) (re.++ (re.union (re.* (str.to_re "`")) (re.union (str.to_re "{{") (str.to_re "|||"))) (re.++ (re.union (re.* (str.to_re "}}")) (re.+ (str.to_re "~~~"))) (re.++ (re.+ (re.+ (str.to_re "000"))) (re.++ (re.union (re.+ (str.to_re "111")) (re.+ (str.to_re "22"))) (re.++ (re.* (re.* (str.to_re "333"))) (re.union (re.union (str.to_re "444") (str.to_re "55")) (re.* (str.to_re "66")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
