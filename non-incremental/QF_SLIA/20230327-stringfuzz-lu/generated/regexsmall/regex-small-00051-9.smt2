(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.union (str.to_re "0") (str.to_re "11"))) (re.++ (re.* (re.* (str.to_re "22"))) (re.++ (re.* (re.* (str.to_re "33"))) (re.++ (re.+ (re.union (str.to_re "44") (str.to_re "55"))) (re.++ (re.+ (re.union (str.to_re "6") (str.to_re "77"))) (re.++ (re.* (re.* (str.to_re "8"))) (re.++ (re.+ (re.* (str.to_re "999"))) (re.++ (re.* (re.union (str.to_re "a") (str.to_re "b"))) (re.++ (re.union (re.union (str.to_re "c") (str.to_re "dd")) (re.union (str.to_re "eee") (str.to_re "fff"))) (re.++ (re.union (re.+ (str.to_re "g")) (re.+ (str.to_re "hh"))) (re.++ (re.union (re.* (str.to_re "i")) (re.union (str.to_re "j") (str.to_re "k"))) (re.++ (re.+ (re.union (str.to_re "ll") (str.to_re "mm"))) (re.++ (re.* (re.* (str.to_re "nn"))) (re.++ (re.+ (re.* (str.to_re "o"))) (re.++ (re.union (re.+ (str.to_re "pp")) (re.union (str.to_re "qq") (str.to_re "r"))) (re.++ (re.* (re.+ (str.to_re "s"))) (re.++ (re.+ (re.+ (str.to_re "t"))) (re.++ (re.* (re.union (str.to_re "uu") (str.to_re "vv"))) (re.++ (re.+ (re.* (str.to_re "w"))) (re.++ (re.* (re.union (str.to_re "xx") (str.to_re "yy"))) (re.++ (re.* (re.+ (str.to_re "zz"))) (re.++ (re.+ (re.* (str.to_re "AA"))) (re.++ (re.union (re.* (str.to_re "B")) (re.* (str.to_re "CC"))) (re.++ (re.union (re.union (str.to_re "D") (str.to_re "E")) (re.* (str.to_re "FF"))) (re.++ (re.+ (re.* (str.to_re "GG"))) (re.++ (re.union (re.union (str.to_re "HH") (str.to_re "III")) (re.+ (str.to_re "JJ"))) (re.++ (re.* (re.* (str.to_re "KK"))) (re.++ (re.+ (re.union (str.to_re "L") (str.to_re "MMM"))) (re.++ (re.* (re.+ (str.to_re "NN"))) (re.++ (re.+ (re.+ (str.to_re "OO"))) (re.++ (re.union (re.union (str.to_re "PP") (str.to_re "QQQ")) (re.* (str.to_re "RR"))) (re.++ (re.+ (re.+ (str.to_re "SSS"))) (re.++ (re.* (re.+ (str.to_re "TT"))) (re.++ (re.+ (re.* (str.to_re "U"))) (re.++ (re.union (re.+ (str.to_re "VV")) (re.* (str.to_re "WW"))) (re.++ (re.* (re.union (str.to_re "X") (str.to_re "YYY"))) (re.++ (re.union (re.+ (str.to_re "Z")) (re.union (str.to_re "!!!") (str.to_re """"))) (re.++ (re.union (re.* (str.to_re "#")) (re.union (str.to_re "$$$") (str.to_re "%%%"))) (re.++ (re.union (re.union (str.to_re "&&") (str.to_re "''")) (re.* (str.to_re "((("))) (re.++ (re.* (re.+ (str.to_re ")))"))) (re.++ (re.* (re.union (str.to_re "***") (str.to_re "++"))) (re.++ (re.* (re.* (str.to_re ","))) (re.++ (re.union (re.* (str.to_re "---")) (re.+ (str.to_re "."))) (re.++ (re.+ (re.* (str.to_re "//"))) (re.++ (re.union (re.union (str.to_re "::") (str.to_re ";")) (re.* (str.to_re "<"))) (re.++ (re.+ (re.+ (str.to_re "==="))) (re.++ (re.* (re.* (str.to_re ">"))) (re.++ (re.+ (re.union (str.to_re "?") (str.to_re "@@"))) (re.++ (re.union (re.* (str.to_re "[[")) (re.union (str.to_re "\\") (str.to_re "]"))) (re.++ (re.union (re.union (str.to_re "^^^") (str.to_re "_")) (re.union (str.to_re "``") (str.to_re "{{"))) (re.union (re.* (str.to_re "|")) (re.* (str.to_re "}")))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
