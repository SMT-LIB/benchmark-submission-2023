(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (str.to_re "0"))) (re.++ (re.+ (re.+ (str.to_re "1"))) (re.++ (re.union (re.union (str.to_re "22") (str.to_re "333")) (re.union (str.to_re "4") (str.to_re "555"))) (re.++ (re.* (re.+ (str.to_re "6"))) (re.++ (re.* (re.union (str.to_re "7") (str.to_re "8"))) (re.++ (re.* (re.* (str.to_re "9"))) (re.++ (re.* (re.union (str.to_re "aa") (str.to_re "b"))) (re.++ (re.union (re.+ (str.to_re "ccc")) (re.* (str.to_re "ddd"))) (re.++ (re.union (re.* (str.to_re "eee")) (re.union (str.to_re "fff") (str.to_re "gg"))) (re.++ (re.union (re.union (str.to_re "h") (str.to_re "i")) (re.union (str.to_re "jj") (str.to_re "k"))) (re.++ (re.union (re.+ (str.to_re "lll")) (re.union (str.to_re "mm") (str.to_re "n"))) (re.++ (re.* (re.* (str.to_re "ooo"))) (re.++ (re.* (re.* (str.to_re "ppp"))) (re.++ (re.+ (re.+ (str.to_re "qq"))) (re.++ (re.union (re.union (str.to_re "rr") (str.to_re "ss")) (re.* (str.to_re "t"))) (re.++ (re.* (re.* (str.to_re "u"))) (re.++ (re.union (re.+ (str.to_re "v")) (re.+ (str.to_re "www"))) (re.++ (re.union (re.+ (str.to_re "xx")) (re.union (str.to_re "yyy") (str.to_re "z"))) (re.++ (re.+ (re.+ (str.to_re "A"))) (re.++ (re.+ (re.union (str.to_re "B") (str.to_re "C"))) (re.++ (re.* (re.union (str.to_re "D") (str.to_re "E"))) (re.++ (re.union (re.* (str.to_re "FFF")) (re.union (str.to_re "G") (str.to_re "HHH"))) (re.++ (re.* (re.union (str.to_re "I") (str.to_re "JJ"))) (re.++ (re.union (re.* (str.to_re "KK")) (re.* (str.to_re "LL"))) (re.++ (re.union (re.union (str.to_re "MMM") (str.to_re "NNN")) (re.+ (str.to_re "O"))) (re.++ (re.union (re.+ (str.to_re "P")) (re.union (str.to_re "QQQ") (str.to_re "RR"))) (re.++ (re.* (re.+ (str.to_re "S"))) (re.++ (re.* (re.+ (str.to_re "TT"))) (re.++ (re.union (re.+ (str.to_re "U")) (re.* (str.to_re "VVV"))) (re.++ (re.union (re.union (str.to_re "WWW") (str.to_re "XX")) (re.* (str.to_re "YYY"))) (re.++ (re.* (re.+ (str.to_re "Z"))) (re.++ (re.+ (re.* (str.to_re "!!"))) (re.* (re.union (str.to_re """""""") (str.to_re "##")))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
