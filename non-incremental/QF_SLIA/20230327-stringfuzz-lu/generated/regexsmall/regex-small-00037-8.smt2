(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "000")) (re.union (str.to_re "1") (str.to_re "2"))) (re.++ (re.union (re.union (str.to_re "333") (str.to_re "444")) (re.+ (str.to_re "5"))) (re.++ (re.+ (re.+ (str.to_re "66"))) (re.++ (re.+ (re.+ (str.to_re "777"))) (re.++ (re.+ (re.* (str.to_re "88"))) (re.++ (re.+ (re.union (str.to_re "99") (str.to_re "aa"))) (re.++ (re.+ (re.union (str.to_re "bbb") (str.to_re "ccc"))) (re.++ (re.union (re.+ (str.to_re "dd")) (re.+ (str.to_re "e"))) (re.++ (re.union (re.+ (str.to_re "f")) (re.union (str.to_re "g") (str.to_re "hhh"))) (re.++ (re.union (re.+ (str.to_re "iii")) (re.+ (str.to_re "j"))) (re.++ (re.union (re.+ (str.to_re "kkk")) (re.+ (str.to_re "l"))) (re.++ (re.+ (re.union (str.to_re "m") (str.to_re "n"))) (re.++ (re.* (re.+ (str.to_re "ooo"))) (re.++ (re.union (re.+ (str.to_re "ppp")) (re.union (str.to_re "qqq") (str.to_re "rr"))) (re.++ (re.+ (re.* (str.to_re "s"))) (re.++ (re.+ (re.* (str.to_re "tt"))) (re.++ (re.* (re.+ (str.to_re "uuu"))) (re.++ (re.* (re.+ (str.to_re "v"))) (re.++ (re.* (re.+ (str.to_re "w"))) (re.++ (re.* (re.union (str.to_re "x") (str.to_re "yy"))) (re.++ (re.union (re.+ (str.to_re "zz")) (re.+ (str.to_re "AAA"))) (re.++ (re.union (re.union (str.to_re "B") (str.to_re "C")) (re.union (str.to_re "D") (str.to_re "EEE"))) (re.++ (re.* (re.+ (str.to_re "FFF"))) (re.++ (re.union (re.+ (str.to_re "GGG")) (re.union (str.to_re "HHH") (str.to_re "III"))) (re.++ (re.union (re.union (str.to_re "JJ") (str.to_re "K")) (re.union (str.to_re "LL") (str.to_re "M"))) (re.++ (re.union (re.* (str.to_re "N")) (re.* (str.to_re "OO"))) (re.++ (re.union (re.+ (str.to_re "P")) (re.union (str.to_re "QQQ") (str.to_re "RR"))) (re.++ (re.union (re.+ (str.to_re "SS")) (re.+ (str.to_re "T"))) (re.++ (re.* (re.+ (str.to_re "U"))) (re.++ (re.+ (re.union (str.to_re "VVV") (str.to_re "W"))) (re.++ (re.union (re.+ (str.to_re "XX")) (re.* (str.to_re "YYY"))) (re.++ (re.union (re.+ (str.to_re "ZZZ")) (re.union (str.to_re "!") (str.to_re """"""))) (re.++ (re.union (re.+ (str.to_re "##")) (re.* (str.to_re "$$"))) (re.++ (re.+ (re.* (str.to_re "%%%"))) (re.++ (re.+ (re.+ (str.to_re "&"))) (re.++ (re.* (re.union (str.to_re "'''") (str.to_re "((("))) (re.* (re.+ (str.to_re ")")))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
