(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "0"))) (re.++ (re.* (re.+ (str.to_re "111"))) (re.++ (re.* (re.union (str.to_re "22") (str.to_re "3"))) (re.++ (re.+ (re.+ (str.to_re "444"))) (re.++ (re.+ (re.+ (str.to_re "5"))) (re.++ (re.+ (re.* (str.to_re "6"))) (re.++ (re.* (re.union (str.to_re "77") (str.to_re "888"))) (re.++ (re.union (re.union (str.to_re "9") (str.to_re "a")) (re.union (str.to_re "bb") (str.to_re "cc"))) (re.++ (re.* (re.+ (str.to_re "ddd"))) (re.++ (re.* (re.union (str.to_re "ee") (str.to_re "ff"))) (re.++ (re.+ (re.union (str.to_re "g") (str.to_re "h"))) (re.++ (re.union (re.* (str.to_re "i")) (re.+ (str.to_re "j"))) (re.++ (re.union (re.union (str.to_re "kkk") (str.to_re "l")) (re.union (str.to_re "mm") (str.to_re "nnn"))) (re.++ (re.* (re.* (str.to_re "ooo"))) (re.++ (re.* (re.+ (str.to_re "p"))) (re.++ (re.+ (re.+ (str.to_re "qq"))) (re.++ (re.* (re.union (str.to_re "r") (str.to_re "ss"))) (re.++ (re.+ (re.union (str.to_re "tt") (str.to_re "uuu"))) (re.++ (re.union (re.union (str.to_re "vvv") (str.to_re "w")) (re.union (str.to_re "x") (str.to_re "yy"))) (re.++ (re.+ (re.union (str.to_re "z") (str.to_re "A"))) (re.++ (re.* (re.+ (str.to_re "BBB"))) (re.++ (re.* (re.* (str.to_re "C"))) (re.++ (re.* (re.* (str.to_re "DDD"))) (re.++ (re.+ (re.union (str.to_re "EEE") (str.to_re "FFF"))) (re.++ (re.* (re.* (str.to_re "G"))) (re.++ (re.union (re.union (str.to_re "H") (str.to_re "II")) (re.+ (str.to_re "J"))) (re.++ (re.* (re.* (str.to_re "KKK"))) (re.++ (re.+ (re.+ (str.to_re "L"))) (re.++ (re.union (re.* (str.to_re "M")) (re.+ (str.to_re "N"))) (re.++ (re.union (re.+ (str.to_re "OO")) (re.union (str.to_re "P") (str.to_re "Q"))) (re.++ (re.union (re.union (str.to_re "RR") (str.to_re "S")) (re.* (str.to_re "TTT"))) (re.++ (re.* (re.* (str.to_re "UUU"))) (re.++ (re.* (re.union (str.to_re "VV") (str.to_re "WW"))) (re.++ (re.union (re.+ (str.to_re "XX")) (re.* (str.to_re "YYY"))) (re.++ (re.* (re.* (str.to_re "ZZZ"))) (re.++ (re.* (re.+ (str.to_re "!!!"))) (re.++ (re.* (re.* (str.to_re """"""""))) (re.++ (re.* (re.union (str.to_re "###") (str.to_re "$$$"))) (re.++ (re.+ (re.union (str.to_re "%") (str.to_re "&&"))) (re.++ (re.union (re.union (str.to_re "''") (str.to_re "((")) (re.union (str.to_re "))") (str.to_re "***"))) (re.++ (re.* (re.* (str.to_re "+"))) (re.++ (re.* (re.+ (str.to_re ",,"))) (re.++ (re.* (re.union (str.to_re "---") (str.to_re "..."))) (re.++ (re.+ (re.+ (str.to_re "//"))) (re.++ (re.union (re.* (str.to_re ":::")) (re.union (str.to_re ";") (str.to_re "<<<"))) (re.++ (re.union (re.+ (str.to_re "=")) (re.+ (str.to_re ">"))) (re.++ (re.+ (re.* (str.to_re "??"))) (re.++ (re.union (re.+ (str.to_re "@@@")) (re.* (str.to_re "[["))) (re.union (re.+ (str.to_re "\\\\\\")) (re.union (str.to_re "]]") (str.to_re "^^^")))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
