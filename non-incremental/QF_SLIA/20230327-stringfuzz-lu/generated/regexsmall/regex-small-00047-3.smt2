(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.+ (re.* (str.to_re "111"))) (re.++ (re.union (re.union (str.to_re "22") (str.to_re "3")) (re.union (str.to_re "44") (str.to_re "555"))) (re.++ (re.+ (re.* (str.to_re "666"))) (re.++ (re.union (re.+ (str.to_re "77")) (re.+ (str.to_re "888"))) (re.++ (re.* (re.+ (str.to_re "999"))) (re.++ (re.* (re.* (str.to_re "aa"))) (re.++ (re.union (re.union (str.to_re "b") (str.to_re "c")) (re.union (str.to_re "ddd") (str.to_re "eee"))) (re.++ (re.union (re.union (str.to_re "fff") (str.to_re "g")) (re.union (str.to_re "h") (str.to_re "ii"))) (re.++ (re.* (re.union (str.to_re "jj") (str.to_re "k"))) (re.++ (re.* (re.+ (str.to_re "l"))) (re.++ (re.union (re.* (str.to_re "mm")) (re.+ (str.to_re "n"))) (re.++ (re.union (re.+ (str.to_re "o")) (re.+ (str.to_re "pp"))) (re.++ (re.* (re.* (str.to_re "qq"))) (re.++ (re.* (re.union (str.to_re "rr") (str.to_re "ss"))) (re.++ (re.union (re.+ (str.to_re "ttt")) (re.+ (str.to_re "uu"))) (re.++ (re.* (re.union (str.to_re "v") (str.to_re "www"))) (re.++ (re.* (re.* (str.to_re "x"))) (re.++ (re.union (re.* (str.to_re "yy")) (re.* (str.to_re "z"))) (re.++ (re.union (re.* (str.to_re "AA")) (re.+ (str.to_re "BB"))) (re.++ (re.* (re.+ (str.to_re "CCC"))) (re.++ (re.union (re.+ (str.to_re "D")) (re.+ (str.to_re "EEE"))) (re.++ (re.* (re.union (str.to_re "FF") (str.to_re "G"))) (re.++ (re.union (re.+ (str.to_re "HHH")) (re.+ (str.to_re "I"))) (re.++ (re.+ (re.+ (str.to_re "J"))) (re.++ (re.union (re.* (str.to_re "KK")) (re.+ (str.to_re "L"))) (re.++ (re.* (re.* (str.to_re "MMM"))) (re.++ (re.+ (re.union (str.to_re "N") (str.to_re "O"))) (re.++ (re.union (re.+ (str.to_re "P")) (re.union (str.to_re "QQQ") (str.to_re "RR"))) (re.++ (re.* (re.+ (str.to_re "SS"))) (re.++ (re.+ (re.* (str.to_re "TT"))) (re.++ (re.union (re.* (str.to_re "UUU")) (re.union (str.to_re "VV") (str.to_re "W"))) (re.++ (re.union (re.* (str.to_re "XX")) (re.union (str.to_re "YYY") (str.to_re "ZZ"))) (re.++ (re.+ (re.union (str.to_re "!") (str.to_re """"""""))) (re.++ (re.* (re.* (str.to_re "###"))) (re.++ (re.+ (re.* (str.to_re "$$"))) (re.++ (re.union (re.+ (str.to_re "%%")) (re.union (str.to_re "&") (str.to_re "''"))) (re.++ (re.union (re.+ (str.to_re "((")) (re.union (str.to_re "))") (str.to_re "**"))) (re.++ (re.* (re.+ (str.to_re "+"))) (re.++ (re.union (re.+ (str.to_re ",")) (re.* (str.to_re "--"))) (re.++ (re.* (re.union (str.to_re "..") (str.to_re "///"))) (re.++ (re.union (re.+ (str.to_re ":::")) (re.union (str.to_re ";;") (str.to_re "<<<"))) (re.++ (re.union (re.union (str.to_re "=") (str.to_re ">>>")) (re.+ (str.to_re "???"))) (re.++ (re.* (re.union (str.to_re "@") (str.to_re "[[["))) (re.++ (re.union (re.+ (str.to_re "\\\\")) (re.union (str.to_re "]]]") (str.to_re "^^"))) (re.++ (re.+ (re.union (str.to_re "_") (str.to_re "`"))) (re.* (re.union (str.to_re "{") (str.to_re "||")))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
