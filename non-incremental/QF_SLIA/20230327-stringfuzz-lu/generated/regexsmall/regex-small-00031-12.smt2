(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "0")) (re.* (str.to_re "111"))) (re.++ (re.+ (re.* (str.to_re "22"))) (re.++ (re.+ (re.+ (str.to_re "3"))) (re.++ (re.union (re.+ (str.to_re "44")) (re.union (str.to_re "5") (str.to_re "66"))) (re.++ (re.union (re.union (str.to_re "777") (str.to_re "88")) (re.+ (str.to_re "99"))) (re.++ (re.* (re.union (str.to_re "a") (str.to_re "b"))) (re.++ (re.+ (re.+ (str.to_re "ccc"))) (re.++ (re.+ (re.+ (str.to_re "d"))) (re.++ (re.+ (re.union (str.to_re "e") (str.to_re "ff"))) (re.++ (re.union (re.union (str.to_re "g") (str.to_re "hh")) (re.union (str.to_re "i") (str.to_re "jj"))) (re.++ (re.union (re.* (str.to_re "kk")) (re.+ (str.to_re "l"))) (re.++ (re.union (re.union (str.to_re "mmm") (str.to_re "nnn")) (re.union (str.to_re "oo") (str.to_re "pp"))) (re.++ (re.* (re.* (str.to_re "q"))) (re.++ (re.* (re.+ (str.to_re "rrr"))) (re.++ (re.union (re.* (str.to_re "s")) (re.union (str.to_re "t") (str.to_re "uuu"))) (re.++ (re.* (re.union (str.to_re "vvv") (str.to_re "w"))) (re.++ (re.+ (re.+ (str.to_re "xxx"))) (re.++ (re.union (re.* (str.to_re "yyy")) (re.union (str.to_re "z") (str.to_re "A"))) (re.++ (re.* (re.union (str.to_re "BB") (str.to_re "CCC"))) (re.++ (re.union (re.+ (str.to_re "DDD")) (re.+ (str.to_re "E"))) (re.++ (re.union (re.union (str.to_re "F") (str.to_re "G")) (re.union (str.to_re "H") (str.to_re "I"))) (re.++ (re.+ (re.* (str.to_re "J"))) (re.++ (re.union (re.* (str.to_re "K")) (re.* (str.to_re "L"))) (re.++ (re.* (re.union (str.to_re "MMM") (str.to_re "N"))) (re.++ (re.union (re.+ (str.to_re "OOO")) (re.* (str.to_re "PP"))) (re.++ (re.union (re.* (str.to_re "QQQ")) (re.* (str.to_re "R"))) (re.++ (re.union (re.* (str.to_re "SS")) (re.* (str.to_re "TTT"))) (re.++ (re.* (re.* (str.to_re "UU"))) (re.++ (re.union (re.* (str.to_re "VVV")) (re.union (str.to_re "WWW") (str.to_re "X"))) (re.++ (re.* (re.* (str.to_re "YYY"))) (re.union (re.+ (str.to_re "Z")) (re.union (str.to_re "!!") (str.to_re """""""")))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
