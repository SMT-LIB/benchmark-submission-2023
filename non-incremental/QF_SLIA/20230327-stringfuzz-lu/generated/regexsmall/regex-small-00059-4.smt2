(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "0")) (re.* (str.to_re "11"))) (re.++ (re.* (re.union (str.to_re "22") (str.to_re "3"))) (re.++ (re.* (re.union (str.to_re "44") (str.to_re "555"))) (re.++ (re.* (re.union (str.to_re "666") (str.to_re "7"))) (re.++ (re.* (re.union (str.to_re "8") (str.to_re "99"))) (re.++ (re.* (re.+ (str.to_re "aa"))) (re.++ (re.union (re.+ (str.to_re "b")) (re.union (str.to_re "cc") (str.to_re "d"))) (re.++ (re.union (re.* (str.to_re "ee")) (re.union (str.to_re "ff") (str.to_re "g"))) (re.++ (re.+ (re.* (str.to_re "h"))) (re.++ (re.union (re.union (str.to_re "i") (str.to_re "jj")) (re.union (str.to_re "k") (str.to_re "l"))) (re.++ (re.+ (re.* (str.to_re "mmm"))) (re.++ (re.union (re.union (str.to_re "n") (str.to_re "o")) (re.+ (str.to_re "p"))) (re.++ (re.* (re.+ (str.to_re "qqq"))) (re.++ (re.+ (re.* (str.to_re "r"))) (re.++ (re.+ (re.+ (str.to_re "s"))) (re.++ (re.* (re.* (str.to_re "tt"))) (re.++ (re.* (re.* (str.to_re "uu"))) (re.++ (re.+ (re.+ (str.to_re "v"))) (re.++ (re.union (re.* (str.to_re "www")) (re.* (str.to_re "xxx"))) (re.++ (re.* (re.* (str.to_re "yyy"))) (re.++ (re.+ (re.* (str.to_re "zzz"))) (re.++ (re.* (re.+ (str.to_re "AA"))) (re.++ (re.union (re.* (str.to_re "B")) (re.union (str.to_re "C") (str.to_re "DDD"))) (re.++ (re.* (re.* (str.to_re "E"))) (re.++ (re.+ (re.+ (str.to_re "FFF"))) (re.++ (re.+ (re.union (str.to_re "GGG") (str.to_re "HH"))) (re.++ (re.union (re.+ (str.to_re "II")) (re.union (str.to_re "JJJ") (str.to_re "KKK"))) (re.++ (re.+ (re.+ (str.to_re "LL"))) (re.++ (re.* (re.union (str.to_re "MM") (str.to_re "NNN"))) (re.++ (re.* (re.union (str.to_re "OO") (str.to_re "P"))) (re.++ (re.* (re.+ (str.to_re "QQQ"))) (re.++ (re.union (re.+ (str.to_re "R")) (re.union (str.to_re "SSS") (str.to_re "T"))) (re.++ (re.* (re.+ (str.to_re "U"))) (re.++ (re.+ (re.union (str.to_re "VVV") (str.to_re "W"))) (re.++ (re.union (re.+ (str.to_re "XX")) (re.* (str.to_re "YYY"))) (re.++ (re.union (re.* (str.to_re "ZZ")) (re.+ (str.to_re "!!!"))) (re.++ (re.union (re.union (str.to_re """""") (str.to_re "##")) (re.+ (str.to_re "$$$"))) (re.++ (re.union (re.union (str.to_re "%") (str.to_re "&&&")) (re.+ (str.to_re "'"))) (re.++ (re.* (re.+ (str.to_re "((("))) (re.++ (re.+ (re.* (str.to_re "))"))) (re.++ (re.union (re.* (str.to_re "*")) (re.* (str.to_re "+"))) (re.++ (re.+ (re.* (str.to_re ",,,"))) (re.++ (re.+ (re.* (str.to_re "-"))) (re.++ (re.+ (re.union (str.to_re ".") (str.to_re "//"))) (re.++ (re.union (re.union (str.to_re "::") (str.to_re ";")) (re.* (str.to_re "<<"))) (re.++ (re.* (re.union (str.to_re "=") (str.to_re ">"))) (re.++ (re.+ (re.* (str.to_re "???"))) (re.++ (re.union (re.union (str.to_re "@") (str.to_re "[[[")) (re.* (str.to_re "\\\\"))) (re.++ (re.+ (re.* (str.to_re "]"))) (re.++ (re.union (re.* (str.to_re "^^")) (re.union (str.to_re "_") (str.to_re "```"))) (re.++ (re.+ (re.+ (str.to_re "{{{"))) (re.++ (re.+ (re.* (str.to_re "||"))) (re.++ (re.+ (re.union (str.to_re "}}}") (str.to_re "~~~"))) (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.* (re.+ (str.to_re "111"))) (re.++ (re.+ (re.* (str.to_re "222"))) (re.++ (re.+ (re.+ (str.to_re "3"))) (re.++ (re.* (re.union (str.to_re "44") (str.to_re "555"))) (re.+ (re.* (str.to_re "666")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
