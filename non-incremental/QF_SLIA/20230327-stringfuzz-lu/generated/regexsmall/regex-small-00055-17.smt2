(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (str.to_re "0"))) (re.++ (re.union (re.union (str.to_re "1") (str.to_re "22")) (re.* (str.to_re "3"))) (re.++ (re.* (re.union (str.to_re "44") (str.to_re "55"))) (re.++ (re.union (re.* (str.to_re "66")) (re.union (str.to_re "7") (str.to_re "88"))) (re.++ (re.+ (re.union (str.to_re "99") (str.to_re "aa"))) (re.++ (re.+ (re.+ (str.to_re "bb"))) (re.++ (re.union (re.* (str.to_re "c")) (re.* (str.to_re "dd"))) (re.++ (re.* (re.* (str.to_re "eee"))) (re.++ (re.* (re.union (str.to_re "f") (str.to_re "gg"))) (re.++ (re.* (re.+ (str.to_re "hh"))) (re.++ (re.+ (re.union (str.to_re "ii") (str.to_re "j"))) (re.++ (re.union (re.* (str.to_re "kk")) (re.+ (str.to_re "lll"))) (re.++ (re.* (re.+ (str.to_re "mmm"))) (re.++ (re.+ (re.+ (str.to_re "n"))) (re.++ (re.+ (re.+ (str.to_re "oo"))) (re.++ (re.* (re.+ (str.to_re "pp"))) (re.++ (re.* (re.+ (str.to_re "q"))) (re.++ (re.* (re.union (str.to_re "rrr") (str.to_re "s"))) (re.++ (re.+ (re.* (str.to_re "t"))) (re.++ (re.+ (re.* (str.to_re "uuu"))) (re.++ (re.* (re.union (str.to_re "v") (str.to_re "www"))) (re.++ (re.union (re.+ (str.to_re "x")) (re.union (str.to_re "y") (str.to_re "zzz"))) (re.++ (re.union (re.union (str.to_re "A") (str.to_re "BB")) (re.+ (str.to_re "CCC"))) (re.++ (re.union (re.union (str.to_re "D") (str.to_re "E")) (re.union (str.to_re "FFF") (str.to_re "GGG"))) (re.++ (re.* (re.+ (str.to_re "HH"))) (re.++ (re.* (re.+ (str.to_re "II"))) (re.++ (re.* (re.union (str.to_re "JJ") (str.to_re "KK"))) (re.++ (re.+ (re.+ (str.to_re "LL"))) (re.++ (re.* (re.union (str.to_re "M") (str.to_re "NN"))) (re.++ (re.* (re.union (str.to_re "OOO") (str.to_re "PPP"))) (re.++ (re.union (re.* (str.to_re "Q")) (re.* (str.to_re "RR"))) (re.++ (re.union (re.union (str.to_re "S") (str.to_re "T")) (re.* (str.to_re "U"))) (re.++ (re.union (re.+ (str.to_re "VV")) (re.+ (str.to_re "WWW"))) (re.++ (re.union (re.* (str.to_re "XX")) (re.* (str.to_re "Y"))) (re.++ (re.union (re.* (str.to_re "ZZZ")) (re.* (str.to_re "!!"))) (re.++ (re.+ (re.* (str.to_re """"""""))) (re.++ (re.+ (re.* (str.to_re "#"))) (re.++ (re.+ (re.+ (str.to_re "$"))) (re.++ (re.union (re.union (str.to_re "%") (str.to_re "&&")) (re.union (str.to_re "''") (str.to_re "((("))) (re.++ (re.+ (re.union (str.to_re ")") (str.to_re "**"))) (re.++ (re.union (re.+ (str.to_re "+")) (re.+ (str.to_re ","))) (re.++ (re.union (re.* (str.to_re "---")) (re.union (str.to_re ".") (str.to_re "//"))) (re.++ (re.union (re.+ (str.to_re "::")) (re.* (str.to_re ";"))) (re.++ (re.+ (re.+ (str.to_re "<"))) (re.++ (re.* (re.* (str.to_re "="))) (re.++ (re.+ (re.* (str.to_re ">"))) (re.++ (re.+ (re.* (str.to_re "???"))) (re.++ (re.+ (re.union (str.to_re "@") (str.to_re "["))) (re.++ (re.union (re.* (str.to_re "\\\\\\")) (re.* (str.to_re "]]"))) (re.++ (re.+ (re.+ (str.to_re "^"))) (re.++ (re.union (re.* (str.to_re "_")) (re.union (str.to_re "```") (str.to_re "{"))) (re.++ (re.union (re.+ (str.to_re "|||")) (re.* (str.to_re "}"))) (re.++ (re.union (re.union (str.to_re "~~") (str.to_re "00")) (re.union (str.to_re "111") (str.to_re "2"))) (re.++ (re.union (re.union (str.to_re "3") (str.to_re "444")) (re.+ (str.to_re "555"))) (re.* (re.union (str.to_re "666") (str.to_re "7")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
