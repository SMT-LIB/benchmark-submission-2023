(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (str.to_re "00") (str.to_re "11")) (re.+ (str.to_re "22"))) (re.++ (re.* (re.union (str.to_re "333") (str.to_re "444"))) (re.++ (re.+ (re.union (str.to_re "5") (str.to_re "6"))) (re.++ (re.+ (re.+ (str.to_re "777"))) (re.++ (re.* (re.union (str.to_re "88") (str.to_re "999"))) (re.++ (re.+ (re.+ (str.to_re "aa"))) (re.++ (re.+ (re.union (str.to_re "b") (str.to_re "ccc"))) (re.++ (re.union (re.* (str.to_re "d")) (re.+ (str.to_re "e"))) (re.++ (re.union (re.+ (str.to_re "fff")) (re.union (str.to_re "ggg") (str.to_re "hh"))) (re.++ (re.union (re.+ (str.to_re "i")) (re.+ (str.to_re "jj"))) (re.++ (re.* (re.* (str.to_re "kkk"))) (re.++ (re.* (re.union (str.to_re "l") (str.to_re "mmm"))) (re.++ (re.* (re.* (str.to_re "nnn"))) (re.++ (re.+ (re.union (str.to_re "ooo") (str.to_re "pp"))) (re.++ (re.* (re.* (str.to_re "q"))) (re.++ (re.+ (re.* (str.to_re "rrr"))) (re.++ (re.* (re.* (str.to_re "ss"))) (re.++ (re.union (re.union (str.to_re "t") (str.to_re "uuu")) (re.+ (str.to_re "vvv"))) (re.++ (re.* (re.union (str.to_re "ww") (str.to_re "x"))) (re.++ (re.* (re.* (str.to_re "y"))) (re.++ (re.+ (re.* (str.to_re "zzz"))) (re.++ (re.* (re.+ (str.to_re "AAA"))) (re.++ (re.+ (re.* (str.to_re "B"))) (re.++ (re.* (re.* (str.to_re "CC"))) (re.++ (re.+ (re.union (str.to_re "DD") (str.to_re "EEE"))) (re.++ (re.union (re.* (str.to_re "FF")) (re.+ (str.to_re "GGG"))) (re.++ (re.union (re.+ (str.to_re "HH")) (re.union (str.to_re "I") (str.to_re "J"))) (re.++ (re.* (re.+ (str.to_re "KKK"))) (re.++ (re.+ (re.+ (str.to_re "LL"))) (re.++ (re.* (re.* (str.to_re "MMM"))) (re.++ (re.+ (re.union (str.to_re "NN") (str.to_re "O"))) (re.++ (re.union (re.* (str.to_re "PPP")) (re.union (str.to_re "Q") (str.to_re "R"))) (re.++ (re.+ (re.union (str.to_re "SSS") (str.to_re "TT"))) (re.++ (re.+ (re.union (str.to_re "U") (str.to_re "VV"))) (re.++ (re.* (re.* (str.to_re "WWW"))) (re.++ (re.union (re.union (str.to_re "XXX") (str.to_re "Y")) (re.+ (str.to_re "ZZZ"))) (re.++ (re.+ (re.+ (str.to_re "!!"))) (re.++ (re.union (re.* (str.to_re """""""")) (re.* (str.to_re "###"))) (re.++ (re.union (re.+ (str.to_re "$")) (re.union (str.to_re "%%") (str.to_re "&&"))) (re.++ (re.union (re.* (str.to_re "'")) (re.union (str.to_re "(((") (str.to_re ")"))) (re.++ (re.union (re.+ (str.to_re "**")) (re.* (str.to_re "+"))) (re.++ (re.* (re.* (str.to_re ",,"))) (re.++ (re.+ (re.+ (str.to_re "--"))) (re.++ (re.union (re.* (str.to_re ".")) (re.union (str.to_re "//") (str.to_re ":"))) (re.++ (re.* (re.* (str.to_re ";;;"))) (re.++ (re.+ (re.* (str.to_re "<"))) (re.++ (re.* (re.union (str.to_re "===") (str.to_re ">>"))) (re.++ (re.* (re.+ (str.to_re "??"))) (re.++ (re.+ (re.* (str.to_re "@@"))) (re.++ (re.union (re.union (str.to_re "[[[") (str.to_re "\\\\\\")) (re.union (str.to_re "]]]") (str.to_re "^^^"))) (re.++ (re.* (re.* (str.to_re "__"))) (re.++ (re.+ (re.union (str.to_re "``") (str.to_re "{{"))) (re.++ (re.+ (re.+ (str.to_re "||"))) (re.++ (re.union (re.+ (str.to_re "}}}")) (re.+ (str.to_re "~"))) (re.union (re.+ (str.to_re "000")) (re.union (str.to_re "11") (str.to_re "22")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
