(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "0")) (re.+ (str.to_re "111"))) (re.++ (re.+ (re.+ (str.to_re "2"))) (re.++ (re.+ (re.union (str.to_re "333") (str.to_re "444"))) (re.++ (re.* (re.* (str.to_re "55"))) (re.++ (re.* (re.+ (str.to_re "666"))) (re.++ (re.+ (re.union (str.to_re "777") (str.to_re "88"))) (re.++ (re.+ (re.union (str.to_re "9") (str.to_re "aa"))) (re.++ (re.+ (re.+ (str.to_re "bb"))) (re.++ (re.+ (re.* (str.to_re "ccc"))) (re.++ (re.+ (re.union (str.to_re "dd") (str.to_re "e"))) (re.++ (re.* (re.* (str.to_re "fff"))) (re.++ (re.union (re.* (str.to_re "ggg")) (re.union (str.to_re "hhh") (str.to_re "iii"))) (re.++ (re.* (re.union (str.to_re "j") (str.to_re "kkk"))) (re.++ (re.* (re.+ (str.to_re "ll"))) (re.++ (re.union (re.* (str.to_re "mmm")) (re.union (str.to_re "n") (str.to_re "ooo"))) (re.++ (re.union (re.union (str.to_re "p") (str.to_re "qq")) (re.+ (str.to_re "rr"))) (re.++ (re.+ (re.+ (str.to_re "ss"))) (re.++ (re.+ (re.* (str.to_re "t"))) (re.++ (re.* (re.+ (str.to_re "uu"))) (re.++ (re.union (re.union (str.to_re "v") (str.to_re "ww")) (re.union (str.to_re "xxx") (str.to_re "y"))) (re.++ (re.+ (re.+ (str.to_re "zz"))) (re.++ (re.union (re.* (str.to_re "A")) (re.* (str.to_re "BBB"))) (re.++ (re.+ (re.union (str.to_re "CCC") (str.to_re "DDD"))) (re.++ (re.+ (re.* (str.to_re "EEE"))) (re.++ (re.union (re.union (str.to_re "FF") (str.to_re "GG")) (re.+ (str.to_re "HHH"))) (re.++ (re.+ (re.union (str.to_re "I") (str.to_re "JJJ"))) (re.++ (re.union (re.+ (str.to_re "KKK")) (re.* (str.to_re "LLL"))) (re.++ (re.+ (re.union (str.to_re "MMM") (str.to_re "NNN"))) (re.++ (re.* (re.* (str.to_re "OOO"))) (re.++ (re.union (re.+ (str.to_re "P")) (re.+ (str.to_re "QQ"))) (re.++ (re.union (re.* (str.to_re "RRR")) (re.* (str.to_re "SS"))) (re.++ (re.+ (re.+ (str.to_re "TT"))) (re.++ (re.+ (re.* (str.to_re "UUU"))) (re.++ (re.union (re.+ (str.to_re "V")) (re.union (str.to_re "WWW") (str.to_re "XXX"))) (re.++ (re.union (re.union (str.to_re "YYY") (str.to_re "ZZZ")) (re.* (str.to_re "!!!"))) (re.++ (re.* (re.union (str.to_re """") (str.to_re "##"))) (re.++ (re.union (re.+ (str.to_re "$")) (re.* (str.to_re "%%"))) (re.++ (re.union (re.+ (str.to_re "&&&")) (re.+ (str.to_re "'"))) (re.++ (re.union (re.+ (str.to_re "((")) (re.+ (str.to_re ")))"))) (re.++ (re.* (re.+ (str.to_re "*"))) (re.++ (re.union (re.+ (str.to_re "+")) (re.* (str.to_re ",,,"))) (re.++ (re.union (re.union (str.to_re "-") (str.to_re "..")) (re.* (str.to_re "///"))) (re.++ (re.union (re.* (str.to_re ":::")) (re.union (str.to_re ";;") (str.to_re "<<"))) (re.++ (re.union (re.union (str.to_re "=") (str.to_re ">>>")) (re.union (str.to_re "?") (str.to_re "@@"))) (re.+ (re.union (str.to_re "[") (str.to_re "\\\\\\")))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
