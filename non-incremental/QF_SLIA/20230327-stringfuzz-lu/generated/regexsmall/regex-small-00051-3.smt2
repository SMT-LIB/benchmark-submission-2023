(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (str.to_re "0") (str.to_re "1")) (re.+ (str.to_re "222"))) (re.++ (re.+ (re.union (str.to_re "3") (str.to_re "44"))) (re.++ (re.* (re.+ (str.to_re "555"))) (re.++ (re.* (re.+ (str.to_re "6"))) (re.++ (re.+ (re.union (str.to_re "77") (str.to_re "888"))) (re.++ (re.+ (re.union (str.to_re "999") (str.to_re "a"))) (re.++ (re.union (re.* (str.to_re "b")) (re.+ (str.to_re "cc"))) (re.++ (re.union (re.union (str.to_re "dd") (str.to_re "ee")) (re.+ (str.to_re "f"))) (re.++ (re.+ (re.+ (str.to_re "gg"))) (re.++ (re.union (re.* (str.to_re "hh")) (re.union (str.to_re "ii") (str.to_re "jj"))) (re.++ (re.union (re.* (str.to_re "kkk")) (re.union (str.to_re "ll") (str.to_re "mm"))) (re.++ (re.+ (re.union (str.to_re "nn") (str.to_re "oo"))) (re.++ (re.union (re.+ (str.to_re "p")) (re.union (str.to_re "q") (str.to_re "rrr"))) (re.++ (re.union (re.+ (str.to_re "sss")) (re.+ (str.to_re "t"))) (re.++ (re.* (re.+ (str.to_re "u"))) (re.++ (re.union (re.+ (str.to_re "vvv")) (re.+ (str.to_re "w"))) (re.++ (re.* (re.union (str.to_re "xxx") (str.to_re "yyy"))) (re.++ (re.+ (re.+ (str.to_re "zz"))) (re.++ (re.* (re.union (str.to_re "AAA") (str.to_re "BBB"))) (re.++ (re.* (re.union (str.to_re "CC") (str.to_re "DDD"))) (re.++ (re.* (re.union (str.to_re "E") (str.to_re "FF"))) (re.++ (re.union (re.* (str.to_re "GGG")) (re.* (str.to_re "HHH"))) (re.++ (re.union (re.union (str.to_re "II") (str.to_re "JJJ")) (re.+ (str.to_re "K"))) (re.++ (re.union (re.union (str.to_re "LLL") (str.to_re "MMM")) (re.+ (str.to_re "NN"))) (re.++ (re.* (re.+ (str.to_re "OOO"))) (re.++ (re.union (re.+ (str.to_re "P")) (re.union (str.to_re "Q") (str.to_re "RR"))) (re.++ (re.+ (re.union (str.to_re "SS") (str.to_re "TTT"))) (re.++ (re.union (re.union (str.to_re "U") (str.to_re "VVV")) (re.+ (str.to_re "WWW"))) (re.++ (re.union (re.* (str.to_re "X")) (re.* (str.to_re "YY"))) (re.++ (re.+ (re.union (str.to_re "ZZ") (str.to_re "!"))) (re.++ (re.union (re.union (str.to_re """") (str.to_re "##")) (re.union (str.to_re "$$") (str.to_re "%%"))) (re.++ (re.+ (re.union (str.to_re "&") (str.to_re "''"))) (re.++ (re.* (re.union (str.to_re "((") (str.to_re "))"))) (re.++ (re.* (re.* (str.to_re "**"))) (re.++ (re.+ (re.+ (str.to_re "+"))) (re.++ (re.union (re.union (str.to_re ",,") (str.to_re "--")) (re.+ (str.to_re "."))) (re.++ (re.union (re.* (str.to_re "//")) (re.union (str.to_re "::") (str.to_re ";;;"))) (re.++ (re.+ (re.* (str.to_re "<<"))) (re.++ (re.* (re.* (str.to_re "=="))) (re.++ (re.* (re.+ (str.to_re ">"))) (re.++ (re.union (re.* (str.to_re "???")) (re.* (str.to_re "@@@"))) (re.++ (re.* (re.+ (str.to_re "[["))) (re.++ (re.+ (re.+ (str.to_re "\\\\"))) (re.++ (re.+ (re.* (str.to_re "]]"))) (re.++ (re.* (re.union (str.to_re "^^") (str.to_re "_"))) (re.++ (re.+ (re.+ (str.to_re "`"))) (re.++ (re.+ (re.union (str.to_re "{") (str.to_re "||"))) (re.++ (re.union (re.+ (str.to_re "}}}")) (re.union (str.to_re "~~") (str.to_re "00"))) (re.++ (re.union (re.+ (str.to_re "111")) (re.* (str.to_re "22"))) (re.++ (re.* (re.union (str.to_re "3") (str.to_re "4"))) (re.+ (re.+ (str.to_re "5")))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
