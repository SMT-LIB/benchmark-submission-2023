(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (str.to_re "00") (str.to_re "111")) (re.union (str.to_re "2") (str.to_re "3"))) (re.++ (re.+ (re.+ (str.to_re "444"))) (re.++ (re.+ (re.+ (str.to_re "555"))) (re.++ (re.union (re.+ (str.to_re "666")) (re.+ (str.to_re "7"))) (re.++ (re.union (re.+ (str.to_re "888")) (re.union (str.to_re "9") (str.to_re "aaa"))) (re.++ (re.+ (re.* (str.to_re "bb"))) (re.++ (re.union (re.* (str.to_re "c")) (re.* (str.to_re "d"))) (re.++ (re.+ (re.* (str.to_re "eee"))) (re.++ (re.* (re.union (str.to_re "f") (str.to_re "g"))) (re.++ (re.union (re.union (str.to_re "h") (str.to_re "ii")) (re.* (str.to_re "j"))) (re.++ (re.* (re.+ (str.to_re "kkk"))) (re.++ (re.union (re.* (str.to_re "l")) (re.+ (str.to_re "mm"))) (re.++ (re.union (re.+ (str.to_re "nn")) (re.+ (str.to_re "o"))) (re.++ (re.+ (re.* (str.to_re "p"))) (re.++ (re.union (re.* (str.to_re "q")) (re.* (str.to_re "rr"))) (re.++ (re.+ (re.+ (str.to_re "ss"))) (re.++ (re.* (re.* (str.to_re "tt"))) (re.++ (re.+ (re.+ (str.to_re "uu"))) (re.++ (re.* (re.union (str.to_re "vvv") (str.to_re "ww"))) (re.++ (re.union (re.* (str.to_re "xx")) (re.* (str.to_re "yy"))) (re.++ (re.* (re.* (str.to_re "zz"))) (re.++ (re.+ (re.union (str.to_re "AAA") (str.to_re "B"))) (re.++ (re.union (re.* (str.to_re "C")) (re.+ (str.to_re "D"))) (re.++ (re.+ (re.+ (str.to_re "EEE"))) (re.++ (re.union (re.+ (str.to_re "FF")) (re.+ (str.to_re "G"))) (re.++ (re.* (re.union (str.to_re "HHH") (str.to_re "III"))) (re.++ (re.* (re.* (str.to_re "JJJ"))) (re.++ (re.* (re.* (str.to_re "KK"))) (re.++ (re.* (re.union (str.to_re "L") (str.to_re "M"))) (re.++ (re.+ (re.union (str.to_re "N") (str.to_re "OOO"))) (re.++ (re.union (re.union (str.to_re "P") (str.to_re "QQ")) (re.union (str.to_re "RR") (str.to_re "S"))) (re.++ (re.* (re.union (str.to_re "TT") (str.to_re "U"))) (re.++ (re.* (re.+ (str.to_re "VVV"))) (re.++ (re.union (re.* (str.to_re "W")) (re.+ (str.to_re "XXX"))) (re.++ (re.* (re.* (str.to_re "YY"))) (re.++ (re.+ (re.+ (str.to_re "Z"))) (re.++ (re.union (re.+ (str.to_re "!!!")) (re.union (str.to_re """""") (str.to_re "#"))) (re.++ (re.+ (re.union (str.to_re "$$") (str.to_re "%%"))) (re.++ (re.* (re.* (str.to_re "&&"))) (re.++ (re.* (re.union (str.to_re "''") (str.to_re "((("))) (re.++ (re.union (re.+ (str.to_re ")")) (re.* (str.to_re "***"))) (re.++ (re.+ (re.+ (str.to_re "++"))) (re.++ (re.+ (re.* (str.to_re ",,"))) (re.++ (re.+ (re.union (str.to_re "---") (str.to_re "."))) (re.++ (re.* (re.union (str.to_re "///") (str.to_re "::"))) (re.++ (re.union (re.* (str.to_re ";;")) (re.+ (str.to_re "<"))) (re.++ (re.union (re.union (str.to_re "=") (str.to_re ">")) (re.* (str.to_re "??"))) (re.++ (re.* (re.union (str.to_re "@@@") (str.to_re "["))) (re.++ (re.+ (re.* (str.to_re "\\"))) (re.++ (re.* (re.* (str.to_re "]"))) (re.union (re.union (str.to_re "^^") (str.to_re "_")) (re.* (str.to_re "`")))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
