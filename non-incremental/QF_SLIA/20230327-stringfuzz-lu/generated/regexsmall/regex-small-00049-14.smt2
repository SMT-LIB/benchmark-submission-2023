(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "000")) (re.union (str.to_re "11") (str.to_re "2"))) (re.++ (re.* (re.union (str.to_re "33") (str.to_re "44"))) (re.++ (re.* (re.union (str.to_re "5") (str.to_re "666"))) (re.++ (re.union (re.+ (str.to_re "77")) (re.union (str.to_re "888") (str.to_re "999"))) (re.++ (re.* (re.+ (str.to_re "a"))) (re.++ (re.+ (re.+ (str.to_re "bbb"))) (re.++ (re.+ (re.* (str.to_re "c"))) (re.++ (re.* (re.+ (str.to_re "ddd"))) (re.++ (re.union (re.* (str.to_re "ee")) (re.* (str.to_re "fff"))) (re.++ (re.* (re.* (str.to_re "gg"))) (re.++ (re.union (re.* (str.to_re "hhh")) (re.union (str.to_re "ii") (str.to_re "jjj"))) (re.++ (re.* (re.+ (str.to_re "k"))) (re.++ (re.+ (re.union (str.to_re "ll") (str.to_re "mm"))) (re.++ (re.* (re.* (str.to_re "nnn"))) (re.++ (re.union (re.union (str.to_re "o") (str.to_re "pp")) (re.+ (str.to_re "qqq"))) (re.++ (re.union (re.* (str.to_re "r")) (re.+ (str.to_re "s"))) (re.++ (re.union (re.union (str.to_re "ttt") (str.to_re "u")) (re.* (str.to_re "vvv"))) (re.++ (re.union (re.+ (str.to_re "www")) (re.union (str.to_re "xx") (str.to_re "y"))) (re.++ (re.* (re.+ (str.to_re "zz"))) (re.++ (re.+ (re.+ (str.to_re "A"))) (re.++ (re.+ (re.union (str.to_re "BBB") (str.to_re "CCC"))) (re.++ (re.* (re.* (str.to_re "DDD"))) (re.++ (re.union (re.+ (str.to_re "EE")) (re.+ (str.to_re "F"))) (re.++ (re.union (re.union (str.to_re "GGG") (str.to_re "HH")) (re.* (str.to_re "I"))) (re.++ (re.* (re.* (str.to_re "J"))) (re.++ (re.* (re.+ (str.to_re "K"))) (re.++ (re.* (re.* (str.to_re "L"))) (re.++ (re.union (re.+ (str.to_re "M")) (re.union (str.to_re "N") (str.to_re "O"))) (re.++ (re.union (re.* (str.to_re "PPP")) (re.union (str.to_re "Q") (str.to_re "R"))) (re.++ (re.* (re.+ (str.to_re "S"))) (re.++ (re.+ (re.+ (str.to_re "TTT"))) (re.++ (re.* (re.* (str.to_re "UUU"))) (re.++ (re.+ (re.union (str.to_re "V") (str.to_re "WWW"))) (re.++ (re.+ (re.* (str.to_re "X"))) (re.++ (re.+ (re.* (str.to_re "YYY"))) (re.++ (re.* (re.* (str.to_re "Z"))) (re.++ (re.+ (re.* (str.to_re "!!!"))) (re.++ (re.* (re.* (str.to_re """"""))) (re.++ (re.union (re.* (str.to_re "#")) (re.+ (str.to_re "$$"))) (re.++ (re.union (re.union (str.to_re "%") (str.to_re "&&")) (re.union (str.to_re "''") (str.to_re "(("))) (re.++ (re.+ (re.* (str.to_re "))"))) (re.++ (re.+ (re.+ (str.to_re "***"))) (re.++ (re.union (re.* (str.to_re "++")) (re.* (str.to_re ","))) (re.++ (re.+ (re.* (str.to_re "---"))) (re.++ (re.* (re.union (str.to_re "...") (str.to_re "///"))) (re.++ (re.union (re.+ (str.to_re ":")) (re.* (str.to_re ";"))) (re.++ (re.+ (re.+ (str.to_re "<"))) (re.++ (re.union (re.* (str.to_re "===")) (re.* (str.to_re ">>>"))) (re.union (re.+ (str.to_re "??")) (re.+ (str.to_re "@")))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
