(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "000"))) (re.++ (re.union (re.+ (str.to_re "11")) (re.+ (str.to_re "22"))) (re.++ (re.* (re.+ (str.to_re "33"))) (re.++ (re.union (re.union (str.to_re "44") (str.to_re "5")) (re.union (str.to_re "66") (str.to_re "777"))) (re.++ (re.+ (re.union (str.to_re "88") (str.to_re "99"))) (re.++ (re.* (re.union (str.to_re "aaa") (str.to_re "bb"))) (re.++ (re.union (re.union (str.to_re "ccc") (str.to_re "d")) (re.* (str.to_re "ee"))) (re.++ (re.union (re.+ (str.to_re "f")) (re.* (str.to_re "gg"))) (re.++ (re.union (re.+ (str.to_re "hh")) (re.* (str.to_re "i"))) (re.++ (re.* (re.* (str.to_re "j"))) (re.++ (re.union (re.* (str.to_re "kkk")) (re.union (str.to_re "ll") (str.to_re "mmm"))) (re.++ (re.* (re.union (str.to_re "n") (str.to_re "oo"))) (re.++ (re.+ (re.union (str.to_re "ppp") (str.to_re "qq"))) (re.++ (re.union (re.* (str.to_re "rr")) (re.union (str.to_re "ss") (str.to_re "t"))) (re.++ (re.union (re.union (str.to_re "uu") (str.to_re "v")) (re.union (str.to_re "w") (str.to_re "xx"))) (re.++ (re.union (re.union (str.to_re "yyy") (str.to_re "zz")) (re.* (str.to_re "A"))) (re.++ (re.* (re.+ (str.to_re "BBB"))) (re.++ (re.+ (re.* (str.to_re "C"))) (re.++ (re.+ (re.union (str.to_re "D") (str.to_re "EEE"))) (re.++ (re.* (re.* (str.to_re "FF"))) (re.++ (re.+ (re.* (str.to_re "G"))) (re.++ (re.* (re.+ (str.to_re "H"))) (re.++ (re.* (re.+ (str.to_re "II"))) (re.++ (re.* (re.* (str.to_re "JJJ"))) (re.++ (re.+ (re.* (str.to_re "K"))) (re.++ (re.union (re.* (str.to_re "LL")) (re.union (str.to_re "MM") (str.to_re "N"))) (re.++ (re.* (re.* (str.to_re "O"))) (re.++ (re.union (re.* (str.to_re "PP")) (re.union (str.to_re "QQQ") (str.to_re "R"))) (re.++ (re.+ (re.union (str.to_re "SSS") (str.to_re "TT"))) (re.++ (re.* (re.union (str.to_re "UUU") (str.to_re "VVV"))) (re.++ (re.* (re.union (str.to_re "WW") (str.to_re "XX"))) (re.++ (re.union (re.union (str.to_re "YY") (str.to_re "Z")) (re.* (str.to_re "!"))) (re.++ (re.union (re.* (str.to_re """""")) (re.union (str.to_re "##") (str.to_re "$"))) (re.++ (re.+ (re.union (str.to_re "%") (str.to_re "&"))) (re.++ (re.* (re.+ (str.to_re "'"))) (re.++ (re.union (re.* (str.to_re "(((")) (re.+ (str.to_re ")"))) (re.union (re.union (str.to_re "*") (str.to_re "++")) (re.* (str.to_re ",,,")))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
