(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "0"))) (re.++ (re.union (re.union (str.to_re "1") (str.to_re "222")) (re.union (str.to_re "3") (str.to_re "444"))) (re.++ (re.* (re.+ (str.to_re "5"))) (re.++ (re.union (re.* (str.to_re "666")) (re.* (str.to_re "7"))) (re.++ (re.* (re.+ (str.to_re "88"))) (re.++ (re.+ (re.+ (str.to_re "999"))) (re.++ (re.+ (re.+ (str.to_re "aa"))) (re.++ (re.union (re.* (str.to_re "b")) (re.* (str.to_re "ccc"))) (re.++ (re.union (re.* (str.to_re "d")) (re.* (str.to_re "eee"))) (re.++ (re.* (re.* (str.to_re "f"))) (re.++ (re.union (re.* (str.to_re "ggg")) (re.+ (str.to_re "hhh"))) (re.++ (re.* (re.+ (str.to_re "ii"))) (re.++ (re.* (re.+ (str.to_re "j"))) (re.++ (re.union (re.union (str.to_re "k") (str.to_re "l")) (re.* (str.to_re "m"))) (re.++ (re.union (re.+ (str.to_re "nnn")) (re.+ (str.to_re "oo"))) (re.++ (re.+ (re.union (str.to_re "p") (str.to_re "qqq"))) (re.++ (re.union (re.union (str.to_re "r") (str.to_re "sss")) (re.+ (str.to_re "ttt"))) (re.++ (re.* (re.union (str.to_re "uu") (str.to_re "v"))) (re.++ (re.union (re.* (str.to_re "www")) (re.union (str.to_re "xxx") (str.to_re "y"))) (re.++ (re.+ (re.union (str.to_re "zzz") (str.to_re "AA"))) (re.++ (re.+ (re.* (str.to_re "BBB"))) (re.++ (re.union (re.* (str.to_re "CC")) (re.* (str.to_re "DDD"))) (re.++ (re.+ (re.union (str.to_re "E") (str.to_re "F"))) (re.++ (re.+ (re.+ (str.to_re "GG"))) (re.++ (re.+ (re.union (str.to_re "H") (str.to_re "I"))) (re.++ (re.union (re.* (str.to_re "JJ")) (re.+ (str.to_re "KKK"))) (re.++ (re.union (re.union (str.to_re "L") (str.to_re "M")) (re.+ (str.to_re "N"))) (re.++ (re.+ (re.* (str.to_re "OO"))) (re.++ (re.union (re.* (str.to_re "P")) (re.* (str.to_re "QQQ"))) (re.++ (re.union (re.+ (str.to_re "R")) (re.* (str.to_re "SS"))) (re.++ (re.+ (re.union (str.to_re "T") (str.to_re "UU"))) (re.++ (re.* (re.union (str.to_re "VVV") (str.to_re "WWW"))) (re.* (re.union (str.to_re "X") (str.to_re "YY")))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
