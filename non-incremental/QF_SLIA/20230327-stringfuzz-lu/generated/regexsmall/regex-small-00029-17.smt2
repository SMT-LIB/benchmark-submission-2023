(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (str.to_re "00") (str.to_re "1")) (re.union (str.to_re "2") (str.to_re "33"))) (re.++ (re.+ (re.union (str.to_re "444") (str.to_re "55"))) (re.++ (re.* (re.+ (str.to_re "66"))) (re.++ (re.union (re.* (str.to_re "777")) (re.union (str.to_re "88") (str.to_re "9"))) (re.++ (re.union (re.union (str.to_re "aaa") (str.to_re "bbb")) (re.* (str.to_re "ccc"))) (re.++ (re.+ (re.+ (str.to_re "dd"))) (re.++ (re.union (re.union (str.to_re "e") (str.to_re "f")) (re.union (str.to_re "g") (str.to_re "hhh"))) (re.++ (re.union (re.union (str.to_re "ii") (str.to_re "j")) (re.+ (str.to_re "kkk"))) (re.++ (re.+ (re.union (str.to_re "l") (str.to_re "mmm"))) (re.++ (re.union (re.* (str.to_re "n")) (re.union (str.to_re "ooo") (str.to_re "pp"))) (re.++ (re.union (re.* (str.to_re "qq")) (re.+ (str.to_re "rrr"))) (re.++ (re.* (re.union (str.to_re "s") (str.to_re "tt"))) (re.++ (re.* (re.* (str.to_re "u"))) (re.++ (re.union (re.* (str.to_re "vvv")) (re.union (str.to_re "w") (str.to_re "xxx"))) (re.++ (re.+ (re.+ (str.to_re "yyy"))) (re.++ (re.* (re.union (str.to_re "zz") (str.to_re "AAA"))) (re.++ (re.+ (re.+ (str.to_re "BBB"))) (re.++ (re.* (re.union (str.to_re "CCC") (str.to_re "DD"))) (re.++ (re.* (re.+ (str.to_re "EE"))) (re.++ (re.union (re.+ (str.to_re "F")) (re.+ (str.to_re "GGG"))) (re.++ (re.union (re.union (str.to_re "HH") (str.to_re "I")) (re.+ (str.to_re "J"))) (re.++ (re.+ (re.union (str.to_re "K") (str.to_re "LL"))) (re.++ (re.union (re.* (str.to_re "MMM")) (re.union (str.to_re "NN") (str.to_re "OO"))) (re.++ (re.union (re.union (str.to_re "PP") (str.to_re "QQQ")) (re.* (str.to_re "RR"))) (re.++ (re.* (re.+ (str.to_re "S"))) (re.++ (re.* (re.union (str.to_re "TTT") (str.to_re "U"))) (re.++ (re.* (re.* (str.to_re "V"))) (re.++ (re.union (re.union (str.to_re "WWW") (str.to_re "XXX")) (re.+ (str.to_re "YYY"))) (re.+ (re.union (str.to_re "ZZ") (str.to_re "!")))))))))))))))))))))))))))))))))
(check-sat)
(exit)
