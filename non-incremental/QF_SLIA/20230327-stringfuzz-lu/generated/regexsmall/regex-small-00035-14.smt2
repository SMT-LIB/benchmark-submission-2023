(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "0"))) (re.++ (re.* (re.+ (str.to_re "111"))) (re.++ (re.union (re.* (str.to_re "222")) (re.union (str.to_re "3") (str.to_re "44"))) (re.++ (re.* (re.union (str.to_re "55") (str.to_re "66"))) (re.++ (re.+ (re.* (str.to_re "77"))) (re.++ (re.+ (re.union (str.to_re "88") (str.to_re "9"))) (re.++ (re.* (re.* (str.to_re "aaa"))) (re.++ (re.union (re.* (str.to_re "bb")) (re.* (str.to_re "ccc"))) (re.++ (re.* (re.* (str.to_re "ddd"))) (re.++ (re.union (re.* (str.to_re "ee")) (re.+ (str.to_re "f"))) (re.++ (re.union (re.+ (str.to_re "g")) (re.+ (str.to_re "h"))) (re.++ (re.* (re.* (str.to_re "ii"))) (re.++ (re.union (re.* (str.to_re "j")) (re.union (str.to_re "kkk") (str.to_re "l"))) (re.++ (re.+ (re.+ (str.to_re "m"))) (re.++ (re.+ (re.union (str.to_re "nnn") (str.to_re "o"))) (re.++ (re.+ (re.+ (str.to_re "pp"))) (re.++ (re.+ (re.* (str.to_re "qq"))) (re.++ (re.union (re.* (str.to_re "r")) (re.* (str.to_re "s"))) (re.++ (re.union (re.* (str.to_re "ttt")) (re.+ (str.to_re "u"))) (re.++ (re.+ (re.* (str.to_re "vvv"))) (re.++ (re.union (re.union (str.to_re "w") (str.to_re "x")) (re.* (str.to_re "yy"))) (re.++ (re.union (re.union (str.to_re "zz") (str.to_re "A")) (re.+ (str.to_re "BB"))) (re.++ (re.* (re.union (str.to_re "CCC") (str.to_re "DDD"))) (re.++ (re.union (re.* (str.to_re "EEE")) (re.+ (str.to_re "FFF"))) (re.++ (re.+ (re.union (str.to_re "G") (str.to_re "HH"))) (re.++ (re.+ (re.union (str.to_re "I") (str.to_re "JJJ"))) (re.++ (re.union (re.+ (str.to_re "KK")) (re.union (str.to_re "LLL") (str.to_re "MM"))) (re.++ (re.+ (re.+ (str.to_re "NNN"))) (re.++ (re.* (re.+ (str.to_re "OO"))) (re.++ (re.union (re.* (str.to_re "P")) (re.* (str.to_re "QQQ"))) (re.++ (re.* (re.* (str.to_re "RR"))) (re.++ (re.* (re.+ (str.to_re "SSS"))) (re.++ (re.* (re.union (str.to_re "T") (str.to_re "U"))) (re.++ (re.+ (re.+ (str.to_re "VVV"))) (re.+ (re.* (str.to_re "WWW")))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
