(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.* (re.+ (str.to_re "11"))) (re.++ (re.union (re.+ (str.to_re "2")) (re.* (str.to_re "33"))) (re.++ (re.union (re.union (str.to_re "4") (str.to_re "555")) (re.union (str.to_re "6") (str.to_re "7"))) (re.++ (re.union (re.union (str.to_re "88") (str.to_re "9")) (re.union (str.to_re "a") (str.to_re "bb"))) (re.++ (re.* (re.union (str.to_re "c") (str.to_re "d"))) (re.++ (re.* (re.+ (str.to_re "e"))) (re.++ (re.union (re.union (str.to_re "ff") (str.to_re "ggg")) (re.* (str.to_re "hhh"))) (re.++ (re.* (re.* (str.to_re "ii"))) (re.++ (re.+ (re.* (str.to_re "jjj"))) (re.++ (re.+ (re.union (str.to_re "kk") (str.to_re "l"))) (re.++ (re.union (re.* (str.to_re "m")) (re.+ (str.to_re "nn"))) (re.++ (re.union (re.* (str.to_re "o")) (re.* (str.to_re "pp"))) (re.++ (re.* (re.+ (str.to_re "q"))) (re.++ (re.+ (re.union (str.to_re "r") (str.to_re "sss"))) (re.++ (re.+ (re.+ (str.to_re "tt"))) (re.++ (re.+ (re.+ (str.to_re "u"))) (re.++ (re.* (re.* (str.to_re "v"))) (re.++ (re.* (re.union (str.to_re "www") (str.to_re "xx"))) (re.++ (re.+ (re.* (str.to_re "yyy"))) (re.++ (re.* (re.+ (str.to_re "z"))) (re.++ (re.union (re.+ (str.to_re "AA")) (re.union (str.to_re "BB") (str.to_re "CC"))) (re.++ (re.union (re.union (str.to_re "D") (str.to_re "EE")) (re.* (str.to_re "FFF"))) (re.++ (re.+ (re.* (str.to_re "G"))) (re.++ (re.+ (re.* (str.to_re "H"))) (re.++ (re.* (re.* (str.to_re "I"))) (re.++ (re.+ (re.* (str.to_re "JJJ"))) (re.++ (re.+ (re.union (str.to_re "K") (str.to_re "LLL"))) (re.++ (re.+ (re.+ (str.to_re "MM"))) (re.++ (re.+ (re.* (str.to_re "NNN"))) (re.++ (re.* (re.union (str.to_re "O") (str.to_re "PP"))) (re.++ (re.union (re.union (str.to_re "QQ") (str.to_re "RR")) (re.union (str.to_re "S") (str.to_re "TTT"))) (re.* (re.* (str.to_re "UU")))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
