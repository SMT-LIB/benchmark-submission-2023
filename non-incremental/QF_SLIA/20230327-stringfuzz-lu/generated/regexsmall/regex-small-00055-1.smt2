(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.union (str.to_re "000") (str.to_re "11"))) (re.++ (re.* (re.union (str.to_re "2") (str.to_re "3"))) (re.++ (re.* (re.union (str.to_re "4") (str.to_re "5"))) (re.++ (re.* (re.union (str.to_re "66") (str.to_re "77"))) (re.++ (re.+ (re.+ (str.to_re "888"))) (re.++ (re.* (re.* (str.to_re "9"))) (re.++ (re.union (re.union (str.to_re "a") (str.to_re "bb")) (re.union (str.to_re "ccc") (str.to_re "dd"))) (re.++ (re.* (re.+ (str.to_re "eee"))) (re.++ (re.+ (re.union (str.to_re "ff") (str.to_re "ggg"))) (re.++ (re.union (re.union (str.to_re "hh") (str.to_re "ii")) (re.+ (str.to_re "j"))) (re.++ (re.+ (re.* (str.to_re "kk"))) (re.++ (re.+ (re.union (str.to_re "l") (str.to_re "mm"))) (re.++ (re.+ (re.* (str.to_re "nn"))) (re.++ (re.* (re.+ (str.to_re "oo"))) (re.++ (re.+ (re.* (str.to_re "pp"))) (re.++ (re.* (re.* (str.to_re "q"))) (re.++ (re.+ (re.+ (str.to_re "rr"))) (re.++ (re.+ (re.+ (str.to_re "sss"))) (re.++ (re.* (re.* (str.to_re "t"))) (re.++ (re.* (re.* (str.to_re "uuu"))) (re.++ (re.union (re.+ (str.to_re "vvv")) (re.union (str.to_re "ww") (str.to_re "xx"))) (re.++ (re.* (re.* (str.to_re "yyy"))) (re.++ (re.* (re.* (str.to_re "zzz"))) (re.++ (re.* (re.union (str.to_re "AA") (str.to_re "BB"))) (re.++ (re.+ (re.* (str.to_re "CCC"))) (re.++ (re.* (re.+ (str.to_re "DDD"))) (re.++ (re.union (re.+ (str.to_re "E")) (re.* (str.to_re "FFF"))) (re.++ (re.+ (re.union (str.to_re "GG") (str.to_re "H"))) (re.++ (re.+ (re.* (str.to_re "III"))) (re.++ (re.+ (re.+ (str.to_re "J"))) (re.++ (re.* (re.+ (str.to_re "KKK"))) (re.++ (re.+ (re.* (str.to_re "LLL"))) (re.++ (re.+ (re.union (str.to_re "MM") (str.to_re "NNN"))) (re.++ (re.union (re.union (str.to_re "OO") (str.to_re "PPP")) (re.+ (str.to_re "QQQ"))) (re.++ (re.* (re.+ (str.to_re "RRR"))) (re.++ (re.* (re.union (str.to_re "SS") (str.to_re "T"))) (re.++ (re.* (re.+ (str.to_re "U"))) (re.++ (re.+ (re.union (str.to_re "VV") (str.to_re "WW"))) (re.++ (re.+ (re.* (str.to_re "XX"))) (re.++ (re.* (re.union (str.to_re "YY") (str.to_re "ZZ"))) (re.++ (re.union (re.union (str.to_re "!") (str.to_re """""")) (re.+ (str.to_re "###"))) (re.++ (re.+ (re.union (str.to_re "$$") (str.to_re "%"))) (re.++ (re.* (re.+ (str.to_re "&&"))) (re.++ (re.union (re.* (str.to_re "'")) (re.* (str.to_re "("))) (re.++ (re.+ (re.union (str.to_re "))") (str.to_re "*"))) (re.++ (re.+ (re.* (str.to_re "+"))) (re.++ (re.* (re.+ (str.to_re ","))) (re.++ (re.* (re.* (str.to_re "--"))) (re.++ (re.union (re.* (str.to_re ".")) (re.union (str.to_re "//") (str.to_re ":::"))) (re.++ (re.+ (re.+ (str.to_re ";;;"))) (re.++ (re.* (re.* (str.to_re "<"))) (re.++ (re.* (re.union (str.to_re "===") (str.to_re ">>"))) (re.++ (re.union (re.+ (str.to_re "?")) (re.* (str.to_re "@@"))) (re.++ (re.* (re.+ (str.to_re "[[["))) (re.+ (re.union (str.to_re "\\\\") (str.to_re "]")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
