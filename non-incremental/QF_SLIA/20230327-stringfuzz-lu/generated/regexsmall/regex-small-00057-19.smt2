(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "0") (str.to_re "11"))) (re.++ (re.+ (re.+ (str.to_re "2"))) (re.++ (re.union (re.+ (str.to_re "33")) (re.union (str.to_re "44") (str.to_re "5"))) (re.++ (re.+ (re.* (str.to_re "6"))) (re.++ (re.union (re.+ (str.to_re "7")) (re.* (str.to_re "8"))) (re.++ (re.union (re.+ (str.to_re "999")) (re.* (str.to_re "a"))) (re.++ (re.+ (re.+ (str.to_re "bb"))) (re.++ (re.+ (re.union (str.to_re "cc") (str.to_re "d"))) (re.++ (re.* (re.* (str.to_re "eee"))) (re.++ (re.+ (re.union (str.to_re "ff") (str.to_re "g"))) (re.++ (re.union (re.* (str.to_re "hhh")) (re.+ (str.to_re "ii"))) (re.++ (re.+ (re.+ (str.to_re "j"))) (re.++ (re.+ (re.union (str.to_re "kk") (str.to_re "ll"))) (re.++ (re.* (re.* (str.to_re "m"))) (re.++ (re.+ (re.* (str.to_re "nn"))) (re.++ (re.union (re.* (str.to_re "ooo")) (re.* (str.to_re "pp"))) (re.++ (re.* (re.+ (str.to_re "q"))) (re.++ (re.* (re.+ (str.to_re "r"))) (re.++ (re.union (re.+ (str.to_re "s")) (re.+ (str.to_re "tt"))) (re.++ (re.union (re.union (str.to_re "uu") (str.to_re "vvv")) (re.* (str.to_re "ww"))) (re.++ (re.+ (re.* (str.to_re "x"))) (re.++ (re.+ (re.+ (str.to_re "y"))) (re.++ (re.+ (re.union (str.to_re "zzz") (str.to_re "AAA"))) (re.++ (re.+ (re.* (str.to_re "BB"))) (re.++ (re.* (re.union (str.to_re "C") (str.to_re "DDD"))) (re.++ (re.* (re.+ (str.to_re "EEE"))) (re.++ (re.union (re.* (str.to_re "F")) (re.+ (str.to_re "G"))) (re.++ (re.+ (re.+ (str.to_re "HH"))) (re.++ (re.union (re.+ (str.to_re "III")) (re.+ (str.to_re "JJJ"))) (re.++ (re.union (re.+ (str.to_re "K")) (re.* (str.to_re "L"))) (re.++ (re.+ (re.union (str.to_re "MM") (str.to_re "N"))) (re.++ (re.+ (re.+ (str.to_re "O"))) (re.++ (re.union (re.union (str.to_re "PPP") (str.to_re "Q")) (re.union (str.to_re "RRR") (str.to_re "S"))) (re.++ (re.* (re.union (str.to_re "T") (str.to_re "U"))) (re.++ (re.* (re.+ (str.to_re "VV"))) (re.++ (re.* (re.+ (str.to_re "WW"))) (re.++ (re.* (re.+ (str.to_re "XX"))) (re.++ (re.+ (re.* (str.to_re "YYY"))) (re.++ (re.+ (re.union (str.to_re "ZZZ") (str.to_re "!!!"))) (re.++ (re.* (re.union (str.to_re """") (str.to_re "#"))) (re.++ (re.* (re.+ (str.to_re "$"))) (re.++ (re.* (re.+ (str.to_re "%"))) (re.++ (re.* (re.* (str.to_re "&"))) (re.++ (re.+ (re.union (str.to_re "''") (str.to_re "(("))) (re.++ (re.* (re.union (str.to_re ")") (str.to_re "*"))) (re.++ (re.union (re.union (str.to_re "++") (str.to_re ",")) (re.+ (str.to_re "---"))) (re.++ (re.* (re.+ (str.to_re "..."))) (re.++ (re.+ (re.+ (str.to_re "/"))) (re.++ (re.+ (re.+ (str.to_re ":"))) (re.++ (re.* (re.union (str.to_re ";;;") (str.to_re "<<"))) (re.++ (re.+ (re.union (str.to_re "==") (str.to_re ">"))) (re.++ (re.union (re.* (str.to_re "???")) (re.* (str.to_re "@"))) (re.++ (re.* (re.union (str.to_re "[") (str.to_re "\\"))) (re.++ (re.union (re.union (str.to_re "]]") (str.to_re "^^^")) (re.+ (str.to_re "_"))) (re.++ (re.* (re.union (str.to_re "```") (str.to_re "{"))) (re.++ (re.* (re.union (str.to_re "|||") (str.to_re "}}}"))) (re.* (re.* (str.to_re "~")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
