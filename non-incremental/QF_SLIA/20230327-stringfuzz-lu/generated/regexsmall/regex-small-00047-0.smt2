(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "00"))) (re.++ (re.+ (re.+ (str.to_re "11"))) (re.++ (re.* (re.union (str.to_re "22") (str.to_re "33"))) (re.++ (re.+ (re.union (str.to_re "44") (str.to_re "5"))) (re.++ (re.* (re.+ (str.to_re "66"))) (re.++ (re.* (re.union (str.to_re "77") (str.to_re "88"))) (re.++ (re.union (re.+ (str.to_re "999")) (re.* (str.to_re "aaa"))) (re.++ (re.* (re.+ (str.to_re "b"))) (re.++ (re.* (re.union (str.to_re "cc") (str.to_re "ddd"))) (re.++ (re.+ (re.* (str.to_re "ee"))) (re.++ (re.* (re.* (str.to_re "fff"))) (re.++ (re.union (re.union (str.to_re "g") (str.to_re "hhh")) (re.union (str.to_re "iii") (str.to_re "jj"))) (re.++ (re.union (re.union (str.to_re "k") (str.to_re "ll")) (re.union (str.to_re "m") (str.to_re "nnn"))) (re.++ (re.union (re.union (str.to_re "o") (str.to_re "pp")) (re.* (str.to_re "q"))) (re.++ (re.+ (re.union (str.to_re "rr") (str.to_re "sss"))) (re.++ (re.* (re.* (str.to_re "ttt"))) (re.++ (re.+ (re.+ (str.to_re "u"))) (re.++ (re.* (re.union (str.to_re "v") (str.to_re "www"))) (re.++ (re.union (re.* (str.to_re "xxx")) (re.+ (str.to_re "yyy"))) (re.++ (re.union (re.+ (str.to_re "zz")) (re.union (str.to_re "AA") (str.to_re "BB"))) (re.++ (re.+ (re.+ (str.to_re "C"))) (re.++ (re.+ (re.+ (str.to_re "DDD"))) (re.++ (re.* (re.+ (str.to_re "E"))) (re.++ (re.* (re.+ (str.to_re "FFF"))) (re.++ (re.+ (re.+ (str.to_re "G"))) (re.++ (re.* (re.* (str.to_re "HHH"))) (re.++ (re.+ (re.+ (str.to_re "III"))) (re.++ (re.+ (re.union (str.to_re "JJ") (str.to_re "KK"))) (re.++ (re.* (re.union (str.to_re "LL") (str.to_re "MMM"))) (re.++ (re.+ (re.+ (str.to_re "NNN"))) (re.++ (re.union (re.+ (str.to_re "OOO")) (re.+ (str.to_re "PPP"))) (re.++ (re.* (re.* (str.to_re "Q"))) (re.++ (re.+ (re.+ (str.to_re "R"))) (re.++ (re.union (re.union (str.to_re "SS") (str.to_re "TTT")) (re.* (str.to_re "U"))) (re.++ (re.+ (re.* (str.to_re "V"))) (re.++ (re.union (re.union (str.to_re "W") (str.to_re "XXX")) (re.* (str.to_re "YYY"))) (re.++ (re.+ (re.* (str.to_re "ZZZ"))) (re.++ (re.* (re.+ (str.to_re "!!"))) (re.++ (re.union (re.* (str.to_re """""""")) (re.union (str.to_re "#") (str.to_re "$"))) (re.++ (re.* (re.* (str.to_re "%%%"))) (re.++ (re.union (re.+ (str.to_re "&&")) (re.union (str.to_re "'''") (str.to_re "((("))) (re.++ (re.+ (re.+ (str.to_re ")"))) (re.++ (re.* (re.union (str.to_re "**") (str.to_re "+++"))) (re.++ (re.* (re.union (str.to_re ",,,") (str.to_re "-"))) (re.++ (re.* (re.* (str.to_re ".."))) (re.++ (re.+ (re.+ (str.to_re "/"))) (re.* (re.union (str.to_re ":::") (str.to_re ";")))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
