(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.union (str.to_re "0") (str.to_re "111"))) (re.++ (re.+ (re.+ (str.to_re "2"))) (re.++ (re.union (re.union (str.to_re "33") (str.to_re "44")) (re.union (str.to_re "5") (str.to_re "6"))) (re.++ (re.union (re.+ (str.to_re "777")) (re.union (str.to_re "8") (str.to_re "999"))) (re.++ (re.+ (re.union (str.to_re "aa") (str.to_re "b"))) (re.++ (re.* (re.union (str.to_re "ccc") (str.to_re "ddd"))) (re.++ (re.+ (re.+ (str.to_re "e"))) (re.++ (re.+ (re.* (str.to_re "fff"))) (re.++ (re.union (re.+ (str.to_re "ggg")) (re.* (str.to_re "hhh"))) (re.++ (re.union (re.union (str.to_re "i") (str.to_re "j")) (re.* (str.to_re "k"))) (re.++ (re.* (re.* (str.to_re "l"))) (re.++ (re.+ (re.+ (str.to_re "mmm"))) (re.++ (re.+ (re.union (str.to_re "nn") (str.to_re "o"))) (re.++ (re.union (re.* (str.to_re "ppp")) (re.union (str.to_re "qq") (str.to_re "rr"))) (re.++ (re.+ (re.union (str.to_re "sss") (str.to_re "ttt"))) (re.++ (re.union (re.union (str.to_re "u") (str.to_re "v")) (re.* (str.to_re "ww"))) (re.++ (re.* (re.* (str.to_re "x"))) (re.++ (re.* (re.+ (str.to_re "y"))) (re.++ (re.* (re.+ (str.to_re "zzz"))) (re.++ (re.union (re.+ (str.to_re "A")) (re.union (str.to_re "BB") (str.to_re "C"))) (re.++ (re.+ (re.+ (str.to_re "DDD"))) (re.++ (re.union (re.* (str.to_re "E")) (re.+ (str.to_re "FFF"))) (re.++ (re.* (re.* (str.to_re "GGG"))) (re.++ (re.* (re.union (str.to_re "H") (str.to_re "I"))) (re.++ (re.* (re.union (str.to_re "JJ") (str.to_re "KK"))) (re.++ (re.union (re.union (str.to_re "LL") (str.to_re "MMM")) (re.+ (str.to_re "N"))) (re.++ (re.* (re.* (str.to_re "O"))) (re.++ (re.+ (re.* (str.to_re "PP"))) (re.++ (re.* (re.union (str.to_re "Q") (str.to_re "R"))) (re.++ (re.* (re.* (str.to_re "SSS"))) (re.++ (re.* (re.* (str.to_re "T"))) (re.++ (re.+ (re.+ (str.to_re "UUU"))) (re.++ (re.* (re.union (str.to_re "VVV") (str.to_re "W"))) (re.++ (re.* (re.+ (str.to_re "XX"))) (re.++ (re.union (re.union (str.to_re "Y") (str.to_re "ZZ")) (re.+ (str.to_re "!!!"))) (re.++ (re.union (re.union (str.to_re """""") (str.to_re "#")) (re.+ (str.to_re "$$$"))) (re.++ (re.+ (re.* (str.to_re "%"))) (re.++ (re.union (re.* (str.to_re "&&")) (re.union (str.to_re "'''") (str.to_re "((("))) (re.++ (re.* (re.union (str.to_re ")") (str.to_re "**"))) (re.++ (re.* (re.+ (str.to_re "+"))) (re.++ (re.* (re.union (str.to_re ",,,") (str.to_re "-"))) (re.++ (re.* (re.* (str.to_re "."))) (re.++ (re.* (re.union (str.to_re "//") (str.to_re ":"))) (re.++ (re.* (re.+ (str.to_re ";;;"))) (re.++ (re.+ (re.union (str.to_re "<<<") (str.to_re "="))) (re.++ (re.+ (re.union (str.to_re ">>") (str.to_re "???"))) (re.++ (re.+ (re.* (str.to_re "@@"))) (re.++ (re.union (re.* (str.to_re "[[")) (re.+ (str.to_re "\\\\\\"))) (re.++ (re.union (re.* (str.to_re "]]")) (re.* (str.to_re "^^^"))) (re.++ (re.union (re.* (str.to_re "___")) (re.union (str.to_re "``") (str.to_re "{"))) (re.++ (re.* (re.+ (str.to_re "||"))) (re.++ (re.union (re.+ (str.to_re "}")) (re.+ (str.to_re "~~~"))) (re.++ (re.* (re.union (str.to_re "00") (str.to_re "11"))) (re.++ (re.union (re.* (str.to_re "2")) (re.union (str.to_re "333") (str.to_re "44"))) (re.++ (re.* (re.* (str.to_re "55"))) (re.++ (re.* (re.union (str.to_re "666") (str.to_re "77"))) (re.++ (re.* (re.union (str.to_re "888") (str.to_re "99"))) (re.++ (re.+ (re.+ (str.to_re "a"))) (re.++ (re.* (re.union (str.to_re "b") (str.to_re "cc"))) (re.++ (re.union (re.union (str.to_re "dd") (str.to_re "eee")) (re.* (str.to_re "f"))) (re.++ (re.+ (re.* (str.to_re "ggg"))) (re.++ (re.union (re.* (str.to_re "h")) (re.+ (str.to_re "iii"))) (re.++ (re.+ (re.union (str.to_re "j") (str.to_re "kk"))) (re.++ (re.+ (re.+ (str.to_re "lll"))) (re.++ (re.union (re.union (str.to_re "mmm") (str.to_re "n")) (re.union (str.to_re "ooo") (str.to_re "p"))) (re.++ (re.union (re.+ (str.to_re "qqq")) (re.union (str.to_re "rr") (str.to_re "ss"))) (re.++ (re.+ (re.* (str.to_re "t"))) (re.++ (re.* (re.* (str.to_re "uuu"))) (re.++ (re.* (re.* (str.to_re "vv"))) (re.++ (re.union (re.+ (str.to_re "ww")) (re.+ (str.to_re "xx"))) (re.++ (re.* (re.+ (str.to_re "yyy"))) (re.++ (re.+ (re.+ (str.to_re "zzz"))) (re.++ (re.union (re.+ (str.to_re "AAA")) (re.* (str.to_re "BB"))) (re.++ (re.union (re.+ (str.to_re "C")) (re.* (str.to_re "D"))) (re.++ (re.+ (re.union (str.to_re "E") (str.to_re "FFF"))) (re.++ (re.* (re.union (str.to_re "G") (str.to_re "HHH"))) (re.++ (re.+ (re.* (str.to_re "I"))) (re.++ (re.+ (re.* (str.to_re "JJJ"))) (re.++ (re.* (re.union (str.to_re "K") (str.to_re "LLL"))) (re.++ (re.union (re.union (str.to_re "MMM") (str.to_re "N")) (re.union (str.to_re "OO") (str.to_re "P"))) (re.++ (re.union (re.* (str.to_re "QQ")) (re.* (str.to_re "RR"))) (re.++ (re.+ (re.* (str.to_re "SSS"))) (re.++ (re.* (re.* (str.to_re "TT"))) (re.++ (re.+ (re.+ (str.to_re "UUU"))) (re.* (re.* (str.to_re "VV")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
