(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (str.to_re "000"))) (re.++ (re.+ (re.* (str.to_re "111"))) (re.++ (re.union (re.* (str.to_re "22")) (re.union (str.to_re "333") (str.to_re "4"))) (re.++ (re.* (re.union (str.to_re "555") (str.to_re "6"))) (re.++ (re.* (re.union (str.to_re "77") (str.to_re "8"))) (re.++ (re.* (re.* (str.to_re "999"))) (re.++ (re.* (re.union (str.to_re "a") (str.to_re "bbb"))) (re.++ (re.* (re.+ (str.to_re "ccc"))) (re.++ (re.+ (re.+ (str.to_re "ddd"))) (re.++ (re.* (re.+ (str.to_re "e"))) (re.++ (re.* (re.* (str.to_re "fff"))) (re.++ (re.+ (re.union (str.to_re "gg") (str.to_re "h"))) (re.++ (re.* (re.union (str.to_re "iii") (str.to_re "jjj"))) (re.++ (re.union (re.+ (str.to_re "kk")) (re.union (str.to_re "ll") (str.to_re "mmm"))) (re.++ (re.union (re.+ (str.to_re "nnn")) (re.+ (str.to_re "ooo"))) (re.++ (re.union (re.union (str.to_re "p") (str.to_re "q")) (re.union (str.to_re "rr") (str.to_re "s"))) (re.++ (re.* (re.union (str.to_re "ttt") (str.to_re "u"))) (re.++ (re.union (re.* (str.to_re "v")) (re.* (str.to_re "w"))) (re.++ (re.+ (re.union (str.to_re "xxx") (str.to_re "yy"))) (re.++ (re.+ (re.+ (str.to_re "zz"))) (re.++ (re.+ (re.+ (str.to_re "AA"))) (re.++ (re.* (re.+ (str.to_re "BB"))) (re.++ (re.union (re.+ (str.to_re "CC")) (re.union (str.to_re "DD") (str.to_re "E"))) (re.++ (re.+ (re.union (str.to_re "FFF") (str.to_re "GG"))) (re.++ (re.* (re.union (str.to_re "H") (str.to_re "III"))) (re.++ (re.+ (re.* (str.to_re "J"))) (re.++ (re.* (re.+ (str.to_re "K"))) (re.++ (re.+ (re.+ (str.to_re "LLL"))) (re.+ (re.union (str.to_re "M") (str.to_re "NNN")))))))))))))))))))))))))))))))))
(check-sat)
(exit)
