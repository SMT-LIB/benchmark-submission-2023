(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "0") (str.to_re "111"))) (re.++ (re.union (re.union (str.to_re "22") (str.to_re "33")) (re.* (str.to_re "444"))) (re.++ (re.+ (re.union (str.to_re "555") (str.to_re "6"))) (re.++ (re.+ (re.union (str.to_re "7") (str.to_re "8"))) (re.++ (re.* (re.+ (str.to_re "999"))) (re.++ (re.+ (re.+ (str.to_re "aaa"))) (re.++ (re.union (re.* (str.to_re "b")) (re.* (str.to_re "ccc"))) (re.++ (re.union (re.+ (str.to_re "ddd")) (re.union (str.to_re "ee") (str.to_re "f"))) (re.++ (re.* (re.* (str.to_re "ggg"))) (re.++ (re.* (re.* (str.to_re "h"))) (re.++ (re.+ (re.union (str.to_re "i") (str.to_re "jjj"))) (re.++ (re.union (re.+ (str.to_re "k")) (re.* (str.to_re "ll"))) (re.++ (re.+ (re.+ (str.to_re "m"))) (re.++ (re.* (re.* (str.to_re "nnn"))) (re.++ (re.+ (re.+ (str.to_re "ooo"))) (re.++ (re.* (re.* (str.to_re "ppp"))) (re.++ (re.+ (re.+ (str.to_re "qq"))) (re.++ (re.+ (re.union (str.to_re "rr") (str.to_re "s"))) (re.++ (re.+ (re.* (str.to_re "ttt"))) (re.++ (re.+ (re.union (str.to_re "uu") (str.to_re "vvv"))) (re.++ (re.* (re.union (str.to_re "ww") (str.to_re "xxx"))) (re.++ (re.* (re.union (str.to_re "y") (str.to_re "z"))) (re.++ (re.* (re.union (str.to_re "A") (str.to_re "BBB"))) (re.++ (re.union (re.union (str.to_re "C") (str.to_re "D")) (re.* (str.to_re "E"))) (re.++ (re.union (re.+ (str.to_re "FFF")) (re.* (str.to_re "G"))) (re.++ (re.union (re.+ (str.to_re "H")) (re.union (str.to_re "III") (str.to_re "J"))) (re.++ (re.* (re.union (str.to_re "KKK") (str.to_re "L"))) (re.++ (re.union (re.+ (str.to_re "MM")) (re.+ (str.to_re "NN"))) (re.++ (re.union (re.+ (str.to_re "OO")) (re.union (str.to_re "PP") (str.to_re "QQ"))) (re.++ (re.union (re.union (str.to_re "RR") (str.to_re "SSS")) (re.* (str.to_re "TTT"))) (re.++ (re.union (re.+ (str.to_re "UUU")) (re.* (str.to_re "VV"))) (re.++ (re.union (re.union (str.to_re "WW") (str.to_re "X")) (re.union (str.to_re "YYY") (str.to_re "Z"))) (re.++ (re.* (re.+ (str.to_re "!!"))) (re.++ (re.union (re.union (str.to_re """""""") (str.to_re "##")) (re.+ (str.to_re "$"))) (re.++ (re.union (re.* (str.to_re "%%")) (re.union (str.to_re "&&") (str.to_re "'''"))) (re.++ (re.union (re.union (str.to_re "(((") (str.to_re "))")) (re.* (str.to_re "**"))) (re.++ (re.+ (re.union (str.to_re "+") (str.to_re ",,"))) (re.++ (re.union (re.* (str.to_re "--")) (re.union (str.to_re ".") (str.to_re "///"))) (re.++ (re.union (re.union (str.to_re ":") (str.to_re ";;;")) (re.* (str.to_re "<<<"))) (re.++ (re.+ (re.+ (str.to_re "==="))) (re.++ (re.* (re.+ (str.to_re ">"))) (re.++ (re.+ (re.union (str.to_re "???") (str.to_re "@"))) (re.++ (re.+ (re.union (str.to_re "[[") (str.to_re "\\"))) (re.++ (re.* (re.union (str.to_re "]") (str.to_re "^^^"))) (re.++ (re.* (re.+ (str.to_re "__"))) (re.++ (re.union (re.union (str.to_re "`") (str.to_re "{{{")) (re.+ (str.to_re "|"))) (re.++ (re.+ (re.union (str.to_re "}") (str.to_re "~~"))) (re.++ (re.union (re.union (str.to_re "00") (str.to_re "1")) (re.+ (str.to_re "222"))) (re.++ (re.+ (re.+ (str.to_re "33"))) (re.++ (re.* (re.* (str.to_re "4"))) (re.++ (re.union (re.union (str.to_re "55") (str.to_re "666")) (re.union (str.to_re "77") (str.to_re "8"))) (re.++ (re.* (re.* (str.to_re "999"))) (re.++ (re.* (re.* (str.to_re "aaa"))) (re.++ (re.* (re.* (str.to_re "bbb"))) (re.++ (re.union (re.* (str.to_re "c")) (re.+ (str.to_re "dd"))) (re.++ (re.* (re.* (str.to_re "e"))) (re.++ (re.+ (re.+ (str.to_re "fff"))) (re.++ (re.union (re.+ (str.to_re "g")) (re.* (str.to_re "h"))) (re.++ (re.+ (re.+ (str.to_re "i"))) (re.++ (re.* (re.union (str.to_re "j") (str.to_re "k"))) (re.++ (re.+ (re.* (str.to_re "ll"))) (re.++ (re.+ (re.+ (str.to_re "m"))) (re.++ (re.+ (re.+ (str.to_re "nnn"))) (re.++ (re.union (re.+ (str.to_re "o")) (re.+ (str.to_re "pp"))) (re.++ (re.* (re.union (str.to_re "qqq") (str.to_re "r"))) (re.++ (re.+ (re.+ (str.to_re "ss"))) (re.++ (re.union (re.union (str.to_re "t") (str.to_re "uu")) (re.* (str.to_re "v"))) (re.++ (re.* (re.* (str.to_re "www"))) (re.++ (re.* (re.+ (str.to_re "xxx"))) (re.++ (re.+ (re.union (str.to_re "y") (str.to_re "z"))) (re.++ (re.* (re.union (str.to_re "AAA") (str.to_re "B"))) (re.++ (re.union (re.union (str.to_re "C") (str.to_re "D")) (re.* (str.to_re "E"))) (re.++ (re.* (re.* (str.to_re "F"))) (re.++ (re.+ (re.* (str.to_re "GGG"))) (re.++ (re.+ (re.* (str.to_re "HHH"))) (re.++ (re.+ (re.union (str.to_re "III") (str.to_re "JJJ"))) (re.++ (re.union (re.* (str.to_re "KK")) (re.union (str.to_re "LLL") (str.to_re "M"))) (re.++ (re.+ (re.union (str.to_re "NN") (str.to_re "OO"))) (re.++ (re.* (re.* (str.to_re "P"))) (re.++ (re.union (re.union (str.to_re "QQQ") (str.to_re "RR")) (re.union (str.to_re "S") (str.to_re "T"))) (re.++ (re.* (re.* (str.to_re "UU"))) (re.++ (re.+ (re.+ (str.to_re "VV"))) (re.++ (re.* (re.* (str.to_re "WW"))) (re.++ (re.+ (re.+ (str.to_re "XX"))) (re.union (re.+ (str.to_re "Y")) (re.union (str.to_re "Z") (str.to_re "!!")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
