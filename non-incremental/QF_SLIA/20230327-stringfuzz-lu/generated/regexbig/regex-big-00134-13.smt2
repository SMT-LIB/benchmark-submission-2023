(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "000") (str.to_re "1"))) (re.++ (re.+ (re.+ (str.to_re "22"))) (re.++ (re.+ (re.union (str.to_re "3") (str.to_re "44"))) (re.++ (re.* (re.+ (str.to_re "55"))) (re.++ (re.+ (re.* (str.to_re "666"))) (re.++ (re.* (re.+ (str.to_re "777"))) (re.++ (re.* (re.union (str.to_re "888") (str.to_re "999"))) (re.++ (re.* (re.* (str.to_re "aa"))) (re.++ (re.* (re.+ (str.to_re "bbb"))) (re.++ (re.+ (re.+ (str.to_re "cc"))) (re.++ (re.* (re.* (str.to_re "ddd"))) (re.++ (re.* (re.union (str.to_re "ee") (str.to_re "f"))) (re.++ (re.* (re.union (str.to_re "ggg") (str.to_re "hhh"))) (re.++ (re.+ (re.+ (str.to_re "ii"))) (re.++ (re.+ (re.union (str.to_re "jjj") (str.to_re "kk"))) (re.++ (re.union (re.+ (str.to_re "l")) (re.union (str.to_re "m") (str.to_re "n"))) (re.++ (re.* (re.* (str.to_re "oo"))) (re.++ (re.* (re.+ (str.to_re "pp"))) (re.++ (re.+ (re.+ (str.to_re "q"))) (re.++ (re.union (re.* (str.to_re "rr")) (re.* (str.to_re "ss"))) (re.++ (re.union (re.+ (str.to_re "ttt")) (re.* (str.to_re "u"))) (re.++ (re.+ (re.union (str.to_re "vv") (str.to_re "ww"))) (re.++ (re.+ (re.* (str.to_re "xxx"))) (re.++ (re.* (re.+ (str.to_re "yyy"))) (re.++ (re.union (re.* (str.to_re "zzz")) (re.union (str.to_re "AA") (str.to_re "B"))) (re.++ (re.+ (re.+ (str.to_re "CCC"))) (re.++ (re.* (re.+ (str.to_re "D"))) (re.++ (re.* (re.union (str.to_re "E") (str.to_re "FF"))) (re.++ (re.union (re.union (str.to_re "GG") (str.to_re "H")) (re.union (str.to_re "III") (str.to_re "J"))) (re.++ (re.+ (re.union (str.to_re "K") (str.to_re "LLL"))) (re.++ (re.union (re.* (str.to_re "M")) (re.+ (str.to_re "NNN"))) (re.++ (re.+ (re.* (str.to_re "OO"))) (re.++ (re.* (re.* (str.to_re "PP"))) (re.++ (re.union (re.* (str.to_re "QQ")) (re.union (str.to_re "RRR") (str.to_re "SSS"))) (re.++ (re.* (re.+ (str.to_re "T"))) (re.++ (re.union (re.+ (str.to_re "U")) (re.* (str.to_re "VVV"))) (re.++ (re.+ (re.union (str.to_re "WW") (str.to_re "XX"))) (re.++ (re.* (re.* (str.to_re "Y"))) (re.++ (re.+ (re.+ (str.to_re "ZZZ"))) (re.++ (re.union (re.union (str.to_re "!") (str.to_re """")) (re.+ (str.to_re "#"))) (re.++ (re.* (re.* (str.to_re "$$$"))) (re.++ (re.+ (re.+ (str.to_re "%%"))) (re.++ (re.union (re.* (str.to_re "&")) (re.union (str.to_re "'''") (str.to_re "(("))) (re.++ (re.union (re.+ (str.to_re ")))")) (re.union (str.to_re "***") (str.to_re "++"))) (re.++ (re.union (re.* (str.to_re ",")) (re.+ (str.to_re "--"))) (re.++ (re.union (re.* (str.to_re "...")) (re.* (str.to_re "/"))) (re.++ (re.* (re.union (str.to_re ":") (str.to_re ";"))) (re.++ (re.* (re.* (str.to_re "<<"))) (re.++ (re.* (re.* (str.to_re "=="))) (re.++ (re.* (re.* (str.to_re ">"))) (re.++ (re.union (re.+ (str.to_re "?")) (re.* (str.to_re "@"))) (re.++ (re.+ (re.union (str.to_re "[") (str.to_re "\\\\\\"))) (re.++ (re.union (re.+ (str.to_re "]")) (re.+ (str.to_re "^^^"))) (re.++ (re.* (re.+ (str.to_re "_"))) (re.++ (re.* (re.* (str.to_re "```"))) (re.++ (re.union (re.+ (str.to_re "{{{")) (re.* (str.to_re "|||"))) (re.++ (re.* (re.* (str.to_re "}}}"))) (re.++ (re.+ (re.union (str.to_re "~~") (str.to_re "0"))) (re.++ (re.union (re.+ (str.to_re "111")) (re.* (str.to_re "2"))) (re.++ (re.+ (re.* (str.to_re "3"))) (re.++ (re.+ (re.+ (str.to_re "444"))) (re.++ (re.+ (re.* (str.to_re "555"))) (re.++ (re.+ (re.* (str.to_re "666"))) (re.++ (re.+ (re.+ (str.to_re "7"))) (re.++ (re.* (re.union (str.to_re "8") (str.to_re "999"))) (re.++ (re.+ (re.* (str.to_re "a"))) (re.++ (re.* (re.+ (str.to_re "bbb"))) (re.++ (re.* (re.+ (str.to_re "c"))) (re.++ (re.union (re.+ (str.to_re "ddd")) (re.* (str.to_re "ee"))) (re.++ (re.+ (re.* (str.to_re "fff"))) (re.++ (re.union (re.+ (str.to_re "ggg")) (re.union (str.to_re "h") (str.to_re "ii"))) (re.++ (re.+ (re.union (str.to_re "jjj") (str.to_re "kkk"))) (re.++ (re.* (re.* (str.to_re "lll"))) (re.++ (re.union (re.union (str.to_re "mm") (str.to_re "nn")) (re.* (str.to_re "o"))) (re.++ (re.union (re.union (str.to_re "p") (str.to_re "qq")) (re.union (str.to_re "rrr") (str.to_re "s"))) (re.++ (re.union (re.union (str.to_re "tt") (str.to_re "uu")) (re.union (str.to_re "vvv") (str.to_re "ww"))) (re.++ (re.* (re.union (str.to_re "xx") (str.to_re "yy"))) (re.++ (re.* (re.+ (str.to_re "z"))) (re.++ (re.union (re.union (str.to_re "A") (str.to_re "BBB")) (re.* (str.to_re "CCC"))) (re.++ (re.+ (re.+ (str.to_re "D"))) (re.++ (re.+ (re.* (str.to_re "EEE"))) (re.++ (re.union (re.union (str.to_re "FFF") (str.to_re "GG")) (re.* (str.to_re "HHH"))) (re.++ (re.union (re.union (str.to_re "II") (str.to_re "JJJ")) (re.union (str.to_re "K") (str.to_re "LLL"))) (re.++ (re.union (re.* (str.to_re "M")) (re.union (str.to_re "NN") (str.to_re "O"))) (re.++ (re.union (re.+ (str.to_re "PPP")) (re.union (str.to_re "QQQ") (str.to_re "RRR"))) (re.++ (re.union (re.* (str.to_re "S")) (re.+ (str.to_re "T"))) (re.++ (re.+ (re.+ (str.to_re "UUU"))) (re.++ (re.union (re.* (str.to_re "VVV")) (re.union (str.to_re "WW") (str.to_re "XX"))) (re.++ (re.* (re.+ (str.to_re "Y"))) (re.++ (re.+ (re.+ (str.to_re "Z"))) (re.++ (re.union (re.union (str.to_re "!!") (str.to_re """""""")) (re.* (str.to_re "##"))) (re.++ (re.union (re.* (str.to_re "$$$")) (re.* (str.to_re "%"))) (re.++ (re.* (re.+ (str.to_re "&&"))) (re.++ (re.union (re.+ (str.to_re "''")) (re.union (str.to_re "(") (str.to_re ")"))) (re.++ (re.union (re.union (str.to_re "**") (str.to_re "+")) (re.* (str.to_re ","))) (re.++ (re.+ (re.* (str.to_re "---"))) (re.++ (re.union (re.+ (str.to_re ".")) (re.+ (str.to_re "//"))) (re.++ (re.* (re.* (str.to_re ":"))) (re.++ (re.* (re.+ (str.to_re ";;;"))) (re.++ (re.union (re.* (str.to_re "<<<")) (re.union (str.to_re "=") (str.to_re ">>"))) (re.++ (re.union (re.union (str.to_re "??") (str.to_re "@")) (re.+ (str.to_re "[["))) (re.++ (re.union (re.* (str.to_re "\\\\")) (re.+ (str.to_re "]"))) (re.++ (re.* (re.* (str.to_re "^^^"))) (re.++ (re.union (re.union (str.to_re "_") (str.to_re "``")) (re.+ (str.to_re "{{"))) (re.++ (re.union (re.+ (str.to_re "|")) (re.* (str.to_re "}}"))) (re.++ (re.+ (re.union (str.to_re "~") (str.to_re "00"))) (re.++ (re.* (re.union (str.to_re "1") (str.to_re "22"))) (re.++ (re.+ (re.+ (str.to_re "33"))) (re.++ (re.* (re.+ (str.to_re "444"))) (re.++ (re.union (re.+ (str.to_re "555")) (re.* (str.to_re "6"))) (re.++ (re.+ (re.union (str.to_re "7") (str.to_re "888"))) (re.++ (re.* (re.union (str.to_re "9") (str.to_re "aaa"))) (re.++ (re.union (re.+ (str.to_re "b")) (re.union (str.to_re "ccc") (str.to_re "ddd"))) (re.++ (re.* (re.union (str.to_re "eee") (str.to_re "f"))) (re.++ (re.+ (re.union (str.to_re "g") (str.to_re "hh"))) (re.++ (re.* (re.union (str.to_re "i") (str.to_re "jjj"))) (re.++ (re.* (re.union (str.to_re "kkk") (str.to_re "lll"))) (re.++ (re.union (re.+ (str.to_re "mm")) (re.+ (str.to_re "nnn"))) (re.++ (re.+ (re.+ (str.to_re "ooo"))) (re.++ (re.union (re.+ (str.to_re "pp")) (re.* (str.to_re "q"))) (re.++ (re.* (re.+ (str.to_re "r"))) (re.++ (re.+ (re.union (str.to_re "sss") (str.to_re "t"))) (re.++ (re.+ (re.+ (str.to_re "uuu"))) (re.++ (re.+ (re.* (str.to_re "vvv"))) (re.++ (re.+ (re.+ (str.to_re "www"))) (re.++ (re.* (re.+ (str.to_re "xxx"))) (re.++ (re.* (re.union (str.to_re "y") (str.to_re "zzz"))) (re.++ (re.* (re.union (str.to_re "AA") (str.to_re "B"))) (re.++ (re.* (re.+ (str.to_re "CC"))) (re.++ (re.+ (re.* (str.to_re "DD"))) (re.++ (re.+ (re.+ (str.to_re "EE"))) (re.++ (re.* (re.union (str.to_re "FFF") (str.to_re "G"))) (re.++ (re.union (re.+ (str.to_re "HH")) (re.union (str.to_re "I") (str.to_re "J"))) (re.* (re.* (str.to_re "KKK"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
