(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "000"))) (re.++ (re.* (re.+ (str.to_re "1"))) (re.++ (re.+ (re.* (str.to_re "222"))) (re.++ (re.+ (re.+ (str.to_re "333"))) (re.++ (re.union (re.+ (str.to_re "444")) (re.+ (str.to_re "55"))) (re.++ (re.union (re.+ (str.to_re "66")) (re.* (str.to_re "77"))) (re.++ (re.+ (re.union (str.to_re "888") (str.to_re "99"))) (re.++ (re.* (re.* (str.to_re "aa"))) (re.++ (re.* (re.* (str.to_re "bbb"))) (re.++ (re.* (re.+ (str.to_re "ccc"))) (re.++ (re.union (re.+ (str.to_re "ddd")) (re.union (str.to_re "ee") (str.to_re "f"))) (re.++ (re.+ (re.* (str.to_re "ggg"))) (re.++ (re.+ (re.union (str.to_re "hh") (str.to_re "i"))) (re.++ (re.* (re.+ (str.to_re "jj"))) (re.++ (re.union (re.* (str.to_re "kk")) (re.* (str.to_re "lll"))) (re.++ (re.* (re.+ (str.to_re "m"))) (re.++ (re.union (re.* (str.to_re "n")) (re.+ (str.to_re "o"))) (re.++ (re.* (re.* (str.to_re "p"))) (re.++ (re.union (re.* (str.to_re "qqq")) (re.* (str.to_re "rrr"))) (re.++ (re.* (re.* (str.to_re "s"))) (re.++ (re.union (re.union (str.to_re "t") (str.to_re "uu")) (re.union (str.to_re "vv") (str.to_re "www"))) (re.++ (re.union (re.+ (str.to_re "xx")) (re.* (str.to_re "yyy"))) (re.++ (re.* (re.* (str.to_re "zz"))) (re.++ (re.+ (re.union (str.to_re "AAA") (str.to_re "B"))) (re.++ (re.union (re.union (str.to_re "CC") (str.to_re "DD")) (re.union (str.to_re "EEE") (str.to_re "FF"))) (re.++ (re.* (re.* (str.to_re "G"))) (re.++ (re.union (re.union (str.to_re "HH") (str.to_re "III")) (re.+ (str.to_re "J"))) (re.++ (re.* (re.+ (str.to_re "KK"))) (re.++ (re.+ (re.union (str.to_re "L") (str.to_re "M"))) (re.++ (re.+ (re.* (str.to_re "NN"))) (re.++ (re.union (re.+ (str.to_re "O")) (re.+ (str.to_re "PPP"))) (re.++ (re.* (re.* (str.to_re "QQQ"))) (re.++ (re.+ (re.+ (str.to_re "RR"))) (re.++ (re.* (re.* (str.to_re "SSS"))) (re.++ (re.* (re.+ (str.to_re "TTT"))) (re.++ (re.+ (re.+ (str.to_re "UU"))) (re.++ (re.+ (re.* (str.to_re "VVV"))) (re.++ (re.+ (re.+ (str.to_re "WW"))) (re.++ (re.+ (re.union (str.to_re "XXX") (str.to_re "Y"))) (re.++ (re.+ (re.* (str.to_re "ZZ"))) (re.++ (re.union (re.* (str.to_re "!!!")) (re.* (str.to_re """"""))) (re.++ (re.+ (re.* (str.to_re "###"))) (re.++ (re.union (re.* (str.to_re "$$$")) (re.union (str.to_re "%%%") (str.to_re "&&"))) (re.++ (re.union (re.union (str.to_re "''") (str.to_re "(")) (re.+ (str.to_re ")"))) (re.++ (re.union (re.union (str.to_re "**") (str.to_re "+")) (re.+ (str.to_re ",,,"))) (re.++ (re.union (re.+ (str.to_re "-")) (re.+ (str.to_re "..."))) (re.++ (re.+ (re.* (str.to_re "//"))) (re.++ (re.union (re.* (str.to_re "::")) (re.union (str.to_re ";") (str.to_re "<"))) (re.++ (re.+ (re.union (str.to_re "===") (str.to_re ">>>"))) (re.++ (re.union (re.+ (str.to_re "??")) (re.* (str.to_re "@@@"))) (re.++ (re.union (re.union (str.to_re "[") (str.to_re "\\")) (re.union (str.to_re "]]") (str.to_re "^^"))) (re.++ (re.union (re.* (str.to_re "___")) (re.* (str.to_re "``"))) (re.++ (re.+ (re.+ (str.to_re "{"))) (re.++ (re.union (re.union (str.to_re "|") (str.to_re "}")) (re.* (str.to_re "~~"))) (re.++ (re.union (re.union (str.to_re "000") (str.to_re "1")) (re.union (str.to_re "22") (str.to_re "333"))) (re.++ (re.+ (re.* (str.to_re "44"))) (re.++ (re.union (re.+ (str.to_re "555")) (re.* (str.to_re "666"))) (re.++ (re.+ (re.* (str.to_re "77"))) (re.++ (re.union (re.* (str.to_re "88")) (re.* (str.to_re "99"))) (re.++ (re.union (re.union (str.to_re "a") (str.to_re "bb")) (re.+ (str.to_re "ccc"))) (re.++ (re.+ (re.union (str.to_re "dd") (str.to_re "e"))) (re.++ (re.* (re.+ (str.to_re "fff"))) (re.++ (re.union (re.union (str.to_re "g") (str.to_re "hh")) (re.+ (str.to_re "ii"))) (re.++ (re.* (re.+ (str.to_re "jj"))) (re.++ (re.+ (re.union (str.to_re "kkk") (str.to_re "l"))) (re.++ (re.* (re.union (str.to_re "m") (str.to_re "nnn"))) (re.++ (re.* (re.union (str.to_re "ooo") (str.to_re "p"))) (re.++ (re.+ (re.+ (str.to_re "qqq"))) (re.++ (re.+ (re.* (str.to_re "rrr"))) (re.++ (re.+ (re.union (str.to_re "sss") (str.to_re "tt"))) (re.++ (re.union (re.+ (str.to_re "uuu")) (re.* (str.to_re "v"))) (re.++ (re.union (re.union (str.to_re "ww") (str.to_re "x")) (re.* (str.to_re "yyy"))) (re.++ (re.* (re.* (str.to_re "zzz"))) (re.++ (re.+ (re.union (str.to_re "AAA") (str.to_re "B"))) (re.++ (re.* (re.+ (str.to_re "CCC"))) (re.++ (re.* (re.* (str.to_re "DD"))) (re.++ (re.union (re.union (str.to_re "E") (str.to_re "F")) (re.* (str.to_re "G"))) (re.++ (re.* (re.* (str.to_re "HHH"))) (re.++ (re.* (re.* (str.to_re "I"))) (re.++ (re.+ (re.+ (str.to_re "JJJ"))) (re.++ (re.union (re.+ (str.to_re "KKK")) (re.* (str.to_re "LL"))) (re.++ (re.+ (re.* (str.to_re "M"))) (re.++ (re.+ (re.union (str.to_re "NN") (str.to_re "O"))) (re.++ (re.* (re.* (str.to_re "PPP"))) (re.++ (re.union (re.union (str.to_re "QQ") (str.to_re "RR")) (re.union (str.to_re "S") (str.to_re "TTT"))) (re.++ (re.* (re.+ (str.to_re "UUU"))) (re.++ (re.+ (re.union (str.to_re "V") (str.to_re "W"))) (re.++ (re.union (re.+ (str.to_re "XX")) (re.union (str.to_re "Y") (str.to_re "Z"))) (re.++ (re.+ (re.+ (str.to_re "!!"))) (re.++ (re.* (re.* (str.to_re """"""))) (re.++ (re.+ (re.* (str.to_re "##"))) (re.++ (re.+ (re.* (str.to_re "$$"))) (re.++ (re.union (re.* (str.to_re "%%%")) (re.* (str.to_re "&"))) (re.++ (re.+ (re.+ (str.to_re "'"))) (re.++ (re.union (re.* (str.to_re "((")) (re.* (str.to_re ")))"))) (re.++ (re.union (re.* (str.to_re "***")) (re.union (str.to_re "++") (str.to_re ",,"))) (re.++ (re.* (re.union (str.to_re "-") (str.to_re ".."))) (re.++ (re.+ (re.+ (str.to_re "/"))) (re.++ (re.union (re.union (str.to_re "::") (str.to_re ";;;")) (re.union (str.to_re "<<") (str.to_re "=="))) (re.++ (re.* (re.union (str.to_re ">") (str.to_re "?"))) (re.++ (re.* (re.* (str.to_re "@@@"))) (re.++ (re.+ (re.+ (str.to_re "[["))) (re.++ (re.union (re.+ (str.to_re "\\")) (re.union (str.to_re "]]") (str.to_re "^^^"))) (re.++ (re.+ (re.* (str.to_re "___"))) (re.++ (re.union (re.* (str.to_re "``")) (re.* (str.to_re "{{{"))) (re.++ (re.+ (re.union (str.to_re "||") (str.to_re "}}}"))) (re.++ (re.* (re.+ (str.to_re "~~~"))) (re.++ (re.+ (re.* (str.to_re "0"))) (re.++ (re.+ (re.+ (str.to_re "111"))) (re.++ (re.* (re.* (str.to_re "222"))) (re.++ (re.* (re.+ (str.to_re "33"))) (re.++ (re.union (re.+ (str.to_re "444")) (re.union (str.to_re "55") (str.to_re "666"))) (re.++ (re.union (re.+ (str.to_re "77")) (re.* (str.to_re "888"))) (re.++ (re.+ (re.+ (str.to_re "999"))) (re.++ (re.* (re.+ (str.to_re "aa"))) (re.++ (re.union (re.* (str.to_re "bbb")) (re.+ (str.to_re "ccc"))) (re.++ (re.* (re.+ (str.to_re "ddd"))) (re.++ (re.* (re.+ (str.to_re "ee"))) (re.++ (re.union (re.+ (str.to_re "f")) (re.union (str.to_re "ggg") (str.to_re "h"))) (re.++ (re.* (re.+ (str.to_re "i"))) (re.++ (re.union (re.+ (str.to_re "j")) (re.union (str.to_re "kkk") (str.to_re "l"))) (re.++ (re.* (re.union (str.to_re "mmm") (str.to_re "nnn"))) (re.++ (re.+ (re.* (str.to_re "oo"))) (re.++ (re.* (re.union (str.to_re "pp") (str.to_re "qq"))) (re.++ (re.union (re.* (str.to_re "r")) (re.union (str.to_re "s") (str.to_re "t"))) (re.++ (re.union (re.union (str.to_re "uu") (str.to_re "vv")) (re.* (str.to_re "w"))) (re.++ (re.union (re.* (str.to_re "x")) (re.+ (str.to_re "yy"))) (re.++ (re.+ (re.union (str.to_re "zzz") (str.to_re "AAA"))) (re.++ (re.+ (re.+ (str.to_re "B"))) (re.++ (re.union (re.union (str.to_re "C") (str.to_re "DDD")) (re.* (str.to_re "EE"))) (re.++ (re.* (re.union (str.to_re "F") (str.to_re "GGG"))) (re.++ (re.union (re.union (str.to_re "HH") (str.to_re "I")) (re.+ (str.to_re "JJJ"))) (re.++ (re.union (re.+ (str.to_re "KK")) (re.union (str.to_re "LL") (str.to_re "M"))) (re.union (re.* (str.to_re "NNN")) (re.union (str.to_re "O") (str.to_re "PP"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
