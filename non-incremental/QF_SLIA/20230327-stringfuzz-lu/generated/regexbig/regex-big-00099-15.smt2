(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (str.to_re "00"))) (re.++ (re.+ (re.* (str.to_re "111"))) (re.++ (re.+ (re.* (str.to_re "22"))) (re.++ (re.+ (re.union (str.to_re "33") (str.to_re "44"))) (re.++ (re.+ (re.* (str.to_re "55"))) (re.++ (re.union (re.union (str.to_re "666") (str.to_re "777")) (re.union (str.to_re "88") (str.to_re "99"))) (re.++ (re.* (re.+ (str.to_re "aaa"))) (re.++ (re.union (re.union (str.to_re "bb") (str.to_re "cc")) (re.+ (str.to_re "d"))) (re.++ (re.* (re.* (str.to_re "eee"))) (re.++ (re.* (re.* (str.to_re "fff"))) (re.++ (re.+ (re.* (str.to_re "ggg"))) (re.++ (re.union (re.+ (str.to_re "h")) (re.union (str.to_re "i") (str.to_re "jj"))) (re.++ (re.union (re.+ (str.to_re "kkk")) (re.* (str.to_re "lll"))) (re.++ (re.union (re.+ (str.to_re "m")) (re.union (str.to_re "nnn") (str.to_re "ooo"))) (re.++ (re.+ (re.union (str.to_re "pp") (str.to_re "qq"))) (re.++ (re.+ (re.* (str.to_re "r"))) (re.++ (re.union (re.union (str.to_re "s") (str.to_re "t")) (re.* (str.to_re "uuu"))) (re.++ (re.+ (re.union (str.to_re "vvv") (str.to_re "w"))) (re.++ (re.+ (re.+ (str.to_re "xxx"))) (re.++ (re.+ (re.+ (str.to_re "yyy"))) (re.++ (re.* (re.* (str.to_re "zz"))) (re.++ (re.* (re.+ (str.to_re "A"))) (re.++ (re.union (re.union (str.to_re "B") (str.to_re "C")) (re.+ (str.to_re "D"))) (re.++ (re.+ (re.+ (str.to_re "E"))) (re.++ (re.* (re.* (str.to_re "FFF"))) (re.++ (re.* (re.union (str.to_re "GGG") (str.to_re "HHH"))) (re.++ (re.* (re.union (str.to_re "II") (str.to_re "J"))) (re.++ (re.* (re.union (str.to_re "KK") (str.to_re "LLL"))) (re.++ (re.* (re.union (str.to_re "M") (str.to_re "NNN"))) (re.++ (re.+ (re.+ (str.to_re "O"))) (re.++ (re.union (re.* (str.to_re "P")) (re.+ (str.to_re "QQQ"))) (re.++ (re.union (re.union (str.to_re "RR") (str.to_re "SSS")) (re.union (str.to_re "TT") (str.to_re "U"))) (re.++ (re.* (re.* (str.to_re "VV"))) (re.++ (re.+ (re.* (str.to_re "WWW"))) (re.++ (re.union (re.* (str.to_re "X")) (re.* (str.to_re "Y"))) (re.++ (re.+ (re.union (str.to_re "Z") (str.to_re "!"))) (re.++ (re.+ (re.union (str.to_re """""""") (str.to_re "###"))) (re.++ (re.* (re.union (str.to_re "$$$") (str.to_re "%%"))) (re.++ (re.* (re.union (str.to_re "&") (str.to_re "'"))) (re.++ (re.union (re.union (str.to_re "(") (str.to_re ")))")) (re.union (str.to_re "***") (str.to_re "+++"))) (re.++ (re.* (re.union (str.to_re ",,") (str.to_re "---"))) (re.++ (re.+ (re.* (str.to_re "."))) (re.++ (re.union (re.+ (str.to_re "//")) (re.+ (str.to_re ":"))) (re.++ (re.union (re.* (str.to_re ";")) (re.+ (str.to_re "<<<"))) (re.++ (re.union (re.+ (str.to_re "===")) (re.+ (str.to_re ">>>"))) (re.++ (re.+ (re.union (str.to_re "?") (str.to_re "@@@"))) (re.++ (re.union (re.* (str.to_re "[")) (re.+ (str.to_re "\\\\\\"))) (re.++ (re.union (re.union (str.to_re "]") (str.to_re "^^")) (re.union (str.to_re "__") (str.to_re "``"))) (re.++ (re.+ (re.union (str.to_re "{") (str.to_re "|"))) (re.++ (re.union (re.* (str.to_re "}}}")) (re.* (str.to_re "~~"))) (re.++ (re.+ (re.* (str.to_re "00"))) (re.++ (re.union (re.union (str.to_re "1") (str.to_re "22")) (re.* (str.to_re "333"))) (re.++ (re.+ (re.+ (str.to_re "4"))) (re.++ (re.union (re.+ (str.to_re "55")) (re.union (str.to_re "666") (str.to_re "777"))) (re.++ (re.+ (re.union (str.to_re "8") (str.to_re "9"))) (re.++ (re.* (re.+ (str.to_re "aa"))) (re.++ (re.* (re.+ (str.to_re "b"))) (re.++ (re.union (re.* (str.to_re "cc")) (re.union (str.to_re "ddd") (str.to_re "e"))) (re.++ (re.union (re.+ (str.to_re "f")) (re.union (str.to_re "gg") (str.to_re "h"))) (re.++ (re.* (re.union (str.to_re "iii") (str.to_re "jjj"))) (re.++ (re.union (re.union (str.to_re "kk") (str.to_re "ll")) (re.+ (str.to_re "mmm"))) (re.++ (re.* (re.+ (str.to_re "nn"))) (re.++ (re.union (re.+ (str.to_re "o")) (re.* (str.to_re "pp"))) (re.++ (re.* (re.union (str.to_re "q") (str.to_re "rr"))) (re.++ (re.* (re.union (str.to_re "sss") (str.to_re "t"))) (re.++ (re.union (re.+ (str.to_re "uuu")) (re.union (str.to_re "v") (str.to_re "www"))) (re.++ (re.union (re.union (str.to_re "x") (str.to_re "y")) (re.+ (str.to_re "zzz"))) (re.++ (re.union (re.union (str.to_re "AAA") (str.to_re "BB")) (re.* (str.to_re "CCC"))) (re.++ (re.* (re.+ (str.to_re "DDD"))) (re.++ (re.union (re.* (str.to_re "EE")) (re.union (str.to_re "F") (str.to_re "GGG"))) (re.++ (re.* (re.+ (str.to_re "HH"))) (re.++ (re.union (re.* (str.to_re "I")) (re.* (str.to_re "JJJ"))) (re.++ (re.* (re.union (str.to_re "KK") (str.to_re "LLL"))) (re.++ (re.* (re.union (str.to_re "MMM") (str.to_re "NNN"))) (re.++ (re.* (re.+ (str.to_re "OO"))) (re.++ (re.+ (re.* (str.to_re "PP"))) (re.++ (re.+ (re.union (str.to_re "Q") (str.to_re "RR"))) (re.++ (re.* (re.* (str.to_re "S"))) (re.++ (re.+ (re.* (str.to_re "TT"))) (re.++ (re.* (re.+ (str.to_re "UUU"))) (re.++ (re.* (re.+ (str.to_re "VV"))) (re.++ (re.* (re.* (str.to_re "WW"))) (re.++ (re.union (re.+ (str.to_re "XXX")) (re.+ (str.to_re "YY"))) (re.++ (re.* (re.* (str.to_re "ZZZ"))) (re.++ (re.+ (re.* (str.to_re "!"))) (re.++ (re.* (re.union (str.to_re """") (str.to_re "###"))) (re.++ (re.union (re.union (str.to_re "$$$") (str.to_re "%%%")) (re.* (str.to_re "&&&"))) (re.++ (re.+ (re.union (str.to_re "''") (str.to_re "(("))) (re.++ (re.+ (re.+ (str.to_re "))"))) (re.++ (re.+ (re.+ (str.to_re "*"))) (re.++ (re.* (re.+ (str.to_re "++"))) (re.++ (re.+ (re.* (str.to_re ",,,"))) (re.++ (re.* (re.+ (str.to_re "-"))) (re.++ (re.* (re.union (str.to_re ".") (str.to_re "///"))) (re.++ (re.+ (re.+ (str.to_re ":::"))) (re.++ (re.union (re.+ (str.to_re ";")) (re.* (str.to_re "<"))) (re.++ (re.+ (re.* (str.to_re "=="))) (re.++ (re.* (re.+ (str.to_re ">>"))) (re.union (re.* (str.to_re "?")) (re.* (str.to_re "@@")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
