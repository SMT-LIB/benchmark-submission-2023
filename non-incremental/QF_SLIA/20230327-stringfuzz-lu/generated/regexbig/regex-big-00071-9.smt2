(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.* (re.+ (str.to_re "111"))) (re.++ (re.union (re.union (str.to_re "222") (str.to_re "333")) (re.* (str.to_re "444"))) (re.++ (re.+ (re.* (str.to_re "555"))) (re.++ (re.* (re.+ (str.to_re "66"))) (re.++ (re.union (re.* (str.to_re "7")) (re.+ (str.to_re "88"))) (re.++ (re.union (re.+ (str.to_re "99")) (re.+ (str.to_re "aa"))) (re.++ (re.+ (re.* (str.to_re "bb"))) (re.++ (re.* (re.+ (str.to_re "c"))) (re.++ (re.+ (re.union (str.to_re "d") (str.to_re "ee"))) (re.++ (re.* (re.union (str.to_re "fff") (str.to_re "g"))) (re.++ (re.union (re.union (str.to_re "hh") (str.to_re "i")) (re.union (str.to_re "jjj") (str.to_re "kk"))) (re.++ (re.+ (re.* (str.to_re "lll"))) (re.++ (re.union (re.union (str.to_re "mmm") (str.to_re "nn")) (re.union (str.to_re "ooo") (str.to_re "ppp"))) (re.++ (re.+ (re.+ (str.to_re "q"))) (re.++ (re.+ (re.+ (str.to_re "rr"))) (re.++ (re.union (re.union (str.to_re "sss") (str.to_re "ttt")) (re.* (str.to_re "uuu"))) (re.++ (re.union (re.* (str.to_re "vvv")) (re.* (str.to_re "www"))) (re.++ (re.union (re.+ (str.to_re "x")) (re.union (str.to_re "yy") (str.to_re "zz"))) (re.++ (re.+ (re.union (str.to_re "AA") (str.to_re "BB"))) (re.++ (re.* (re.* (str.to_re "C"))) (re.++ (re.union (re.union (str.to_re "D") (str.to_re "E")) (re.union (str.to_re "FF") (str.to_re "GG"))) (re.++ (re.* (re.union (str.to_re "H") (str.to_re "II"))) (re.++ (re.+ (re.+ (str.to_re "JJ"))) (re.++ (re.+ (re.union (str.to_re "K") (str.to_re "LLL"))) (re.++ (re.* (re.union (str.to_re "MMM") (str.to_re "N"))) (re.++ (re.* (re.+ (str.to_re "OOO"))) (re.++ (re.+ (re.* (str.to_re "P"))) (re.++ (re.+ (re.+ (str.to_re "QQQ"))) (re.++ (re.union (re.* (str.to_re "RR")) (re.union (str.to_re "SSS") (str.to_re "T"))) (re.++ (re.union (re.union (str.to_re "UUU") (str.to_re "VVV")) (re.+ (str.to_re "WW"))) (re.++ (re.union (re.+ (str.to_re "XXX")) (re.* (str.to_re "YY"))) (re.++ (re.union (re.union (str.to_re "ZZ") (str.to_re "!!")) (re.* (str.to_re """"))) (re.++ (re.union (re.union (str.to_re "##") (str.to_re "$$$")) (re.* (str.to_re "%%%"))) (re.++ (re.+ (re.+ (str.to_re "&&&"))) (re.++ (re.* (re.* (str.to_re "'''"))) (re.++ (re.union (re.* (str.to_re "((")) (re.* (str.to_re ")"))) (re.++ (re.* (re.* (str.to_re "**"))) (re.++ (re.+ (re.+ (str.to_re "+"))) (re.++ (re.union (re.+ (str.to_re ",")) (re.union (str.to_re "-") (str.to_re "..."))) (re.++ (re.+ (re.union (str.to_re "/") (str.to_re ":"))) (re.++ (re.* (re.* (str.to_re ";"))) (re.++ (re.union (re.+ (str.to_re "<")) (re.union (str.to_re "==") (str.to_re ">>>"))) (re.++ (re.union (re.* (str.to_re "?")) (re.union (str.to_re "@@") (str.to_re "[[["))) (re.++ (re.+ (re.union (str.to_re "\\\\") (str.to_re "]]"))) (re.++ (re.union (re.* (str.to_re "^")) (re.* (str.to_re "___"))) (re.++ (re.+ (re.union (str.to_re "```") (str.to_re "{{{"))) (re.++ (re.union (re.+ (str.to_re "|")) (re.* (str.to_re "}}"))) (re.++ (re.union (re.+ (str.to_re "~~~")) (re.+ (str.to_re "0"))) (re.++ (re.* (re.union (str.to_re "1") (str.to_re "2"))) (re.++ (re.union (re.+ (str.to_re "3")) (re.union (str.to_re "44") (str.to_re "55"))) (re.++ (re.* (re.* (str.to_re "6"))) (re.++ (re.* (re.union (str.to_re "77") (str.to_re "8"))) (re.++ (re.* (re.union (str.to_re "99") (str.to_re "aaa"))) (re.++ (re.union (re.+ (str.to_re "bb")) (re.* (str.to_re "c"))) (re.++ (re.+ (re.union (str.to_re "d") (str.to_re "ee"))) (re.++ (re.+ (re.* (str.to_re "ff"))) (re.++ (re.* (re.* (str.to_re "gg"))) (re.++ (re.union (re.+ (str.to_re "hh")) (re.union (str.to_re "i") (str.to_re "jjj"))) (re.++ (re.union (re.union (str.to_re "kkk") (str.to_re "l")) (re.union (str.to_re "mm") (str.to_re "n"))) (re.++ (re.union (re.+ (str.to_re "oo")) (re.+ (str.to_re "pp"))) (re.++ (re.union (re.union (str.to_re "qq") (str.to_re "rr")) (re.* (str.to_re "sss"))) (re.++ (re.* (re.+ (str.to_re "t"))) (re.++ (re.+ (re.* (str.to_re "u"))) (re.++ (re.* (re.+ (str.to_re "vvv"))) (re.++ (re.union (re.* (str.to_re "w")) (re.union (str.to_re "x") (str.to_re "yy"))) (re.++ (re.union (re.union (str.to_re "z") (str.to_re "AA")) (re.union (str.to_re "BBB") (str.to_re "CC"))) (re.++ (re.* (re.* (str.to_re "DDD"))) (re.++ (re.* (re.+ (str.to_re "EEE"))) (re.++ (re.+ (re.union (str.to_re "FFF") (str.to_re "G"))) (re.union (re.* (str.to_re "H")) (re.+ (str.to_re "II")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
