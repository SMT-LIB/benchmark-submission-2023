(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "00") (str.to_re "11"))) (re.++ (re.union (re.+ (str.to_re "22")) (re.+ (str.to_re "333"))) (re.++ (re.union (re.* (str.to_re "44")) (re.+ (str.to_re "55"))) (re.++ (re.+ (re.+ (str.to_re "6"))) (re.++ (re.union (re.union (str.to_re "77") (str.to_re "8")) (re.+ (str.to_re "9"))) (re.++ (re.* (re.union (str.to_re "aaa") (str.to_re "bb"))) (re.++ (re.union (re.union (str.to_re "c") (str.to_re "dd")) (re.+ (str.to_re "e"))) (re.++ (re.+ (re.* (str.to_re "f"))) (re.++ (re.+ (re.union (str.to_re "g") (str.to_re "hhh"))) (re.++ (re.* (re.union (str.to_re "i") (str.to_re "j"))) (re.++ (re.* (re.+ (str.to_re "kkk"))) (re.++ (re.union (re.+ (str.to_re "lll")) (re.union (str.to_re "mmm") (str.to_re "n"))) (re.++ (re.+ (re.+ (str.to_re "ooo"))) (re.++ (re.+ (re.+ (str.to_re "pp"))) (re.++ (re.+ (re.+ (str.to_re "q"))) (re.++ (re.* (re.* (str.to_re "rr"))) (re.++ (re.* (re.* (str.to_re "sss"))) (re.++ (re.union (re.+ (str.to_re "tt")) (re.+ (str.to_re "uu"))) (re.++ (re.* (re.+ (str.to_re "v"))) (re.++ (re.union (re.+ (str.to_re "www")) (re.union (str.to_re "xxx") (str.to_re "yyy"))) (re.++ (re.* (re.* (str.to_re "z"))) (re.++ (re.* (re.+ (str.to_re "A"))) (re.++ (re.+ (re.union (str.to_re "B") (str.to_re "CC"))) (re.++ (re.* (re.union (str.to_re "DDD") (str.to_re "EEE"))) (re.++ (re.+ (re.union (str.to_re "FFF") (str.to_re "G"))) (re.++ (re.union (re.union (str.to_re "HH") (str.to_re "II")) (re.+ (str.to_re "JJJ"))) (re.++ (re.+ (re.* (str.to_re "KK"))) (re.++ (re.union (re.union (str.to_re "LL") (str.to_re "M")) (re.* (str.to_re "NNN"))) (re.++ (re.* (re.+ (str.to_re "OOO"))) (re.++ (re.+ (re.union (str.to_re "PPP") (str.to_re "Q"))) (re.++ (re.* (re.* (str.to_re "RRR"))) (re.++ (re.union (re.* (str.to_re "SSS")) (re.+ (str.to_re "T"))) (re.++ (re.+ (re.* (str.to_re "UUU"))) (re.++ (re.* (re.* (str.to_re "VV"))) (re.++ (re.* (re.union (str.to_re "WW") (str.to_re "XXX"))) (re.++ (re.union (re.* (str.to_re "YYY")) (re.+ (str.to_re "ZZ"))) (re.++ (re.+ (re.+ (str.to_re "!!"))) (re.++ (re.union (re.+ (str.to_re """""")) (re.union (str.to_re "##") (str.to_re "$$$"))) (re.++ (re.* (re.+ (str.to_re "%%%"))) (re.++ (re.+ (re.* (str.to_re "&&&"))) (re.++ (re.+ (re.+ (str.to_re "''"))) (re.++ (re.union (re.+ (str.to_re "(")) (re.* (str.to_re ")))"))) (re.++ (re.union (re.* (str.to_re "*")) (re.union (str.to_re "+++") (str.to_re ","))) (re.++ (re.* (re.* (str.to_re "--"))) (re.++ (re.union (re.+ (str.to_re "..")) (re.+ (str.to_re "//"))) (re.++ (re.+ (re.* (str.to_re ":::"))) (re.++ (re.* (re.+ (str.to_re ";"))) (re.++ (re.union (re.union (str.to_re "<") (str.to_re "===")) (re.+ (str.to_re ">>>"))) (re.++ (re.+ (re.* (str.to_re "???"))) (re.++ (re.union (re.+ (str.to_re "@")) (re.* (str.to_re "[[["))) (re.++ (re.* (re.+ (str.to_re "\\\\\\"))) (re.++ (re.union (re.* (str.to_re "]]")) (re.+ (str.to_re "^^^"))) (re.++ (re.* (re.* (str.to_re "__"))) (re.++ (re.+ (re.* (str.to_re "``"))) (re.++ (re.+ (re.* (str.to_re "{{{"))) (re.++ (re.* (re.* (str.to_re "|||"))) (re.union (re.+ (str.to_re "}}}")) (re.* (str.to_re "~~")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
