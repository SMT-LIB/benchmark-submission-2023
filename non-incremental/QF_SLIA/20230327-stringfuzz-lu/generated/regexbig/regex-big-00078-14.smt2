(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "000"))) (re.++ (re.* (re.+ (str.to_re "11"))) (re.++ (re.+ (re.* (str.to_re "222"))) (re.++ (re.+ (re.* (str.to_re "33"))) (re.++ (re.* (re.+ (str.to_re "44"))) (re.++ (re.union (re.* (str.to_re "55")) (re.* (str.to_re "66"))) (re.++ (re.* (re.+ (str.to_re "77"))) (re.++ (re.* (re.* (str.to_re "88"))) (re.++ (re.+ (re.union (str.to_re "999") (str.to_re "aaa"))) (re.++ (re.+ (re.+ (str.to_re "bb"))) (re.++ (re.* (re.* (str.to_re "cc"))) (re.++ (re.union (re.+ (str.to_re "d")) (re.union (str.to_re "e") (str.to_re "f"))) (re.++ (re.* (re.union (str.to_re "g") (str.to_re "h"))) (re.++ (re.* (re.+ (str.to_re "i"))) (re.++ (re.union (re.union (str.to_re "j") (str.to_re "kkk")) (re.union (str.to_re "lll") (str.to_re "mm"))) (re.++ (re.+ (re.* (str.to_re "nnn"))) (re.++ (re.* (re.union (str.to_re "oo") (str.to_re "pp"))) (re.++ (re.* (re.union (str.to_re "q") (str.to_re "rr"))) (re.++ (re.union (re.* (str.to_re "s")) (re.* (str.to_re "t"))) (re.++ (re.+ (re.* (str.to_re "uuu"))) (re.++ (re.* (re.+ (str.to_re "vvv"))) (re.++ (re.+ (re.union (str.to_re "ww") (str.to_re "x"))) (re.++ (re.+ (re.union (str.to_re "y") (str.to_re "zzz"))) (re.++ (re.* (re.+ (str.to_re "A"))) (re.++ (re.union (re.union (str.to_re "BBB") (str.to_re "C")) (re.+ (str.to_re "D"))) (re.++ (re.+ (re.union (str.to_re "E") (str.to_re "F"))) (re.++ (re.union (re.+ (str.to_re "GG")) (re.+ (str.to_re "HHH"))) (re.++ (re.* (re.+ (str.to_re "III"))) (re.++ (re.union (re.+ (str.to_re "J")) (re.* (str.to_re "K"))) (re.++ (re.union (re.+ (str.to_re "LL")) (re.+ (str.to_re "MMM"))) (re.++ (re.union (re.* (str.to_re "NNN")) (re.* (str.to_re "OOO"))) (re.++ (re.* (re.union (str.to_re "PPP") (str.to_re "QQQ"))) (re.++ (re.union (re.union (str.to_re "RR") (str.to_re "SSS")) (re.union (str.to_re "TT") (str.to_re "U"))) (re.++ (re.+ (re.union (str.to_re "V") (str.to_re "WWW"))) (re.++ (re.+ (re.* (str.to_re "X"))) (re.++ (re.union (re.* (str.to_re "YYY")) (re.+ (str.to_re "Z"))) (re.++ (re.union (re.* (str.to_re "!")) (re.+ (str.to_re """"""))) (re.++ (re.union (re.+ (str.to_re "###")) (re.* (str.to_re "$$"))) (re.++ (re.union (re.* (str.to_re "%")) (re.* (str.to_re "&&&"))) (re.++ (re.* (re.union (str.to_re "''") (str.to_re "(("))) (re.++ (re.* (re.+ (str.to_re "))"))) (re.++ (re.* (re.* (str.to_re "**"))) (re.++ (re.+ (re.union (str.to_re "+++") (str.to_re ","))) (re.++ (re.* (re.+ (str.to_re "--"))) (re.++ (re.+ (re.+ (str.to_re "."))) (re.++ (re.+ (re.union (str.to_re "//") (str.to_re ":::"))) (re.++ (re.+ (re.* (str.to_re ";;;"))) (re.++ (re.* (re.union (str.to_re "<<<") (str.to_re "="))) (re.++ (re.+ (re.+ (str.to_re ">"))) (re.++ (re.union (re.union (str.to_re "???") (str.to_re "@@")) (re.* (str.to_re "[["))) (re.++ (re.union (re.* (str.to_re "\\")) (re.* (str.to_re "]]"))) (re.++ (re.union (re.+ (str.to_re "^^^")) (re.union (str.to_re "__") (str.to_re "``"))) (re.++ (re.* (re.* (str.to_re "{{"))) (re.++ (re.* (re.* (str.to_re "|"))) (re.++ (re.* (re.union (str.to_re "}}") (str.to_re "~~"))) (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.union (re.* (str.to_re "111")) (re.* (str.to_re "222"))) (re.++ (re.union (re.union (str.to_re "3") (str.to_re "4")) (re.union (str.to_re "555") (str.to_re "6"))) (re.++ (re.+ (re.* (str.to_re "777"))) (re.++ (re.* (re.union (str.to_re "888") (str.to_re "99"))) (re.++ (re.union (re.union (str.to_re "a") (str.to_re "bbb")) (re.* (str.to_re "cc"))) (re.++ (re.* (re.* (str.to_re "ddd"))) (re.++ (re.+ (re.union (str.to_re "ee") (str.to_re "ff"))) (re.++ (re.* (re.+ (str.to_re "g"))) (re.++ (re.+ (re.union (str.to_re "hhh") (str.to_re "iii"))) (re.++ (re.+ (re.+ (str.to_re "j"))) (re.++ (re.+ (re.* (str.to_re "kk"))) (re.++ (re.union (re.* (str.to_re "lll")) (re.+ (str.to_re "mmm"))) (re.++ (re.* (re.* (str.to_re "nn"))) (re.++ (re.union (re.union (str.to_re "o") (str.to_re "ppp")) (re.union (str.to_re "q") (str.to_re "rr"))) (re.++ (re.* (re.+ (str.to_re "ss"))) (re.++ (re.* (re.+ (str.to_re "tt"))) (re.++ (re.* (re.+ (str.to_re "uu"))) (re.++ (re.* (re.* (str.to_re "vv"))) (re.++ (re.* (re.* (str.to_re "w"))) (re.++ (re.union (re.+ (str.to_re "xx")) (re.+ (str.to_re "yyy"))) (re.++ (re.+ (re.* (str.to_re "zz"))) (re.union (re.* (str.to_re "AAA")) (re.union (str.to_re "BBB") (str.to_re "CCC"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
