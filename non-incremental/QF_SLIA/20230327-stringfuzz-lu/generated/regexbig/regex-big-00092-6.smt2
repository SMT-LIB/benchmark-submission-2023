(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "00"))) (re.++ (re.union (re.* (str.to_re "1")) (re.* (str.to_re "22"))) (re.++ (re.+ (re.+ (str.to_re "33"))) (re.++ (re.+ (re.* (str.to_re "444"))) (re.++ (re.+ (re.* (str.to_re "55"))) (re.++ (re.* (re.+ (str.to_re "6"))) (re.++ (re.+ (re.* (str.to_re "77"))) (re.++ (re.* (re.+ (str.to_re "888"))) (re.++ (re.+ (re.+ (str.to_re "99"))) (re.++ (re.union (re.union (str.to_re "aaa") (str.to_re "bb")) (re.+ (str.to_re "cc"))) (re.++ (re.+ (re.union (str.to_re "ddd") (str.to_re "e"))) (re.++ (re.+ (re.+ (str.to_re "ff"))) (re.++ (re.* (re.* (str.to_re "ggg"))) (re.++ (re.union (re.+ (str.to_re "hh")) (re.union (str.to_re "i") (str.to_re "jjj"))) (re.++ (re.union (re.+ (str.to_re "kk")) (re.+ (str.to_re "ll"))) (re.++ (re.union (re.* (str.to_re "mmm")) (re.+ (str.to_re "nn"))) (re.++ (re.* (re.* (str.to_re "oo"))) (re.++ (re.union (re.+ (str.to_re "ppp")) (re.+ (str.to_re "q"))) (re.++ (re.+ (re.+ (str.to_re "rr"))) (re.++ (re.union (re.+ (str.to_re "sss")) (re.* (str.to_re "t"))) (re.++ (re.union (re.* (str.to_re "uu")) (re.* (str.to_re "v"))) (re.++ (re.* (re.+ (str.to_re "w"))) (re.++ (re.* (re.* (str.to_re "x"))) (re.++ (re.union (re.* (str.to_re "y")) (re.* (str.to_re "zz"))) (re.++ (re.* (re.* (str.to_re "A"))) (re.++ (re.+ (re.union (str.to_re "BB") (str.to_re "C"))) (re.++ (re.+ (re.* (str.to_re "D"))) (re.++ (re.+ (re.* (str.to_re "EEE"))) (re.++ (re.+ (re.+ (str.to_re "FFF"))) (re.++ (re.union (re.* (str.to_re "GG")) (re.* (str.to_re "HHH"))) (re.++ (re.union (re.+ (str.to_re "I")) (re.+ (str.to_re "JJJ"))) (re.++ (re.+ (re.union (str.to_re "KK") (str.to_re "LL"))) (re.++ (re.union (re.+ (str.to_re "MM")) (re.* (str.to_re "NNN"))) (re.++ (re.union (re.+ (str.to_re "OO")) (re.* (str.to_re "P"))) (re.++ (re.+ (re.+ (str.to_re "QQ"))) (re.++ (re.union (re.union (str.to_re "R") (str.to_re "S")) (re.+ (str.to_re "TT"))) (re.++ (re.* (re.* (str.to_re "U"))) (re.++ (re.+ (re.+ (str.to_re "VVV"))) (re.++ (re.+ (re.* (str.to_re "WW"))) (re.++ (re.* (re.* (str.to_re "X"))) (re.++ (re.* (re.union (str.to_re "YYY") (str.to_re "ZZ"))) (re.++ (re.* (re.* (str.to_re "!!"))) (re.++ (re.union (re.+ (str.to_re """""""")) (re.+ (str.to_re "##"))) (re.++ (re.+ (re.union (str.to_re "$$") (str.to_re "%%%"))) (re.++ (re.union (re.* (str.to_re "&&")) (re.union (str.to_re "''") (str.to_re "((("))) (re.++ (re.+ (re.union (str.to_re "))") (str.to_re "**"))) (re.++ (re.* (re.union (str.to_re "+") (str.to_re ",,"))) (re.++ (re.+ (re.union (str.to_re "-") (str.to_re "..."))) (re.++ (re.* (re.* (str.to_re "/"))) (re.++ (re.+ (re.union (str.to_re ":") (str.to_re ";;;"))) (re.++ (re.* (re.+ (str.to_re "<"))) (re.++ (re.union (re.* (str.to_re "=")) (re.* (str.to_re ">"))) (re.++ (re.union (re.+ (str.to_re "??")) (re.+ (str.to_re "@"))) (re.++ (re.union (re.union (str.to_re "[") (str.to_re "\\")) (re.+ (str.to_re "]]"))) (re.++ (re.+ (re.+ (str.to_re "^^^"))) (re.++ (re.union (re.* (str.to_re "_")) (re.+ (str.to_re "```"))) (re.++ (re.* (re.+ (str.to_re "{{{"))) (re.++ (re.* (re.+ (str.to_re "|||"))) (re.++ (re.* (re.+ (str.to_re "}}}"))) (re.++ (re.* (re.+ (str.to_re "~"))) (re.++ (re.union (re.union (str.to_re "00") (str.to_re "11")) (re.+ (str.to_re "2"))) (re.++ (re.+ (re.+ (str.to_re "33"))) (re.++ (re.+ (re.* (str.to_re "44"))) (re.++ (re.union (re.* (str.to_re "55")) (re.+ (str.to_re "6"))) (re.++ (re.* (re.* (str.to_re "777"))) (re.++ (re.* (re.union (str.to_re "8") (str.to_re "999"))) (re.++ (re.+ (re.+ (str.to_re "a"))) (re.++ (re.+ (re.+ (str.to_re "b"))) (re.++ (re.union (re.union (str.to_re "c") (str.to_re "dd")) (re.* (str.to_re "e"))) (re.++ (re.union (re.+ (str.to_re "f")) (re.union (str.to_re "g") (str.to_re "hh"))) (re.++ (re.* (re.union (str.to_re "iii") (str.to_re "jjj"))) (re.++ (re.* (re.* (str.to_re "kkk"))) (re.++ (re.union (re.union (str.to_re "l") (str.to_re "m")) (re.* (str.to_re "n"))) (re.++ (re.+ (re.union (str.to_re "oo") (str.to_re "pp"))) (re.++ (re.union (re.union (str.to_re "qqq") (str.to_re "r")) (re.* (str.to_re "s"))) (re.++ (re.union (re.union (str.to_re "ttt") (str.to_re "u")) (re.* (str.to_re "v"))) (re.++ (re.union (re.union (str.to_re "w") (str.to_re "x")) (re.union (str.to_re "y") (str.to_re "zzz"))) (re.++ (re.union (re.* (str.to_re "AA")) (re.union (str.to_re "BBB") (str.to_re "C"))) (re.++ (re.* (re.* (str.to_re "DD"))) (re.++ (re.union (re.* (str.to_re "E")) (re.+ (str.to_re "FF"))) (re.++ (re.union (re.* (str.to_re "GGG")) (re.* (str.to_re "H"))) (re.++ (re.+ (re.union (str.to_re "I") (str.to_re "J"))) (re.++ (re.* (re.union (str.to_re "K") (str.to_re "LLL"))) (re.++ (re.+ (re.* (str.to_re "M"))) (re.++ (re.* (re.union (str.to_re "NN") (str.to_re "OO"))) (re.++ (re.union (re.+ (str.to_re "PP")) (re.+ (str.to_re "QQQ"))) (re.++ (re.+ (re.union (str.to_re "RRR") (str.to_re "S"))) (re.++ (re.* (re.union (str.to_re "TT") (str.to_re "U"))) (re.++ (re.+ (re.* (str.to_re "VV"))) (re.++ (re.union (re.+ (str.to_re "W")) (re.+ (str.to_re "XX"))) (re.++ (re.+ (re.* (str.to_re "YYY"))) (re.union (re.+ (str.to_re "ZZZ")) (re.* (str.to_re "!!!"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
