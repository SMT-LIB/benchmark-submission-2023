(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "000")) (re.* (str.to_re "11"))) (re.++ (re.* (re.* (str.to_re "22"))) (re.++ (re.* (re.union (str.to_re "3") (str.to_re "44"))) (re.++ (re.union (re.union (str.to_re "555") (str.to_re "6")) (re.+ (str.to_re "777"))) (re.++ (re.+ (re.+ (str.to_re "8"))) (re.++ (re.union (re.* (str.to_re "999")) (re.union (str.to_re "aa") (str.to_re "bb"))) (re.++ (re.+ (re.+ (str.to_re "c"))) (re.++ (re.* (re.* (str.to_re "d"))) (re.++ (re.* (re.union (str.to_re "ee") (str.to_re "fff"))) (re.++ (re.+ (re.union (str.to_re "g") (str.to_re "hhh"))) (re.++ (re.+ (re.+ (str.to_re "ii"))) (re.++ (re.+ (re.union (str.to_re "j") (str.to_re "k"))) (re.++ (re.+ (re.union (str.to_re "ll") (str.to_re "m"))) (re.++ (re.union (re.union (str.to_re "nn") (str.to_re "o")) (re.union (str.to_re "p") (str.to_re "q"))) (re.++ (re.+ (re.* (str.to_re "r"))) (re.++ (re.union (re.union (str.to_re "s") (str.to_re "ttt")) (re.+ (str.to_re "uu"))) (re.++ (re.+ (re.union (str.to_re "vvv") (str.to_re "w"))) (re.++ (re.+ (re.* (str.to_re "xx"))) (re.++ (re.+ (re.+ (str.to_re "yyy"))) (re.++ (re.union (re.union (str.to_re "zzz") (str.to_re "AAA")) (re.* (str.to_re "B"))) (re.++ (re.+ (re.+ (str.to_re "CC"))) (re.++ (re.union (re.* (str.to_re "DDD")) (re.union (str.to_re "EE") (str.to_re "FFF"))) (re.++ (re.* (re.* (str.to_re "GG"))) (re.++ (re.union (re.union (str.to_re "HHH") (str.to_re "III")) (re.union (str.to_re "JJJ") (str.to_re "KKK"))) (re.++ (re.union (re.* (str.to_re "L")) (re.union (str.to_re "MMM") (str.to_re "N"))) (re.++ (re.union (re.* (str.to_re "OO")) (re.+ (str.to_re "P"))) (re.++ (re.+ (re.+ (str.to_re "Q"))) (re.++ (re.+ (re.* (str.to_re "R"))) (re.++ (re.+ (re.* (str.to_re "SS"))) (re.++ (re.union (re.+ (str.to_re "TT")) (re.+ (str.to_re "UUU"))) (re.++ (re.+ (re.union (str.to_re "VVV") (str.to_re "WWW"))) (re.++ (re.union (re.+ (str.to_re "XX")) (re.union (str.to_re "YYY") (str.to_re "ZZ"))) (re.++ (re.+ (re.+ (str.to_re "!!"))) (re.++ (re.* (re.union (str.to_re """") (str.to_re "##"))) (re.++ (re.union (re.+ (str.to_re "$")) (re.+ (str.to_re "%%%"))) (re.++ (re.+ (re.union (str.to_re "&") (str.to_re "'"))) (re.++ (re.union (re.* (str.to_re "(")) (re.* (str.to_re ")))"))) (re.++ (re.union (re.+ (str.to_re "**")) (re.+ (str.to_re "+"))) (re.++ (re.+ (re.* (str.to_re ",,,"))) (re.++ (re.+ (re.union (str.to_re "--") (str.to_re "."))) (re.++ (re.union (re.+ (str.to_re "/")) (re.union (str.to_re ":") (str.to_re ";;"))) (re.++ (re.+ (re.* (str.to_re "<<<"))) (re.++ (re.* (re.union (str.to_re "=") (str.to_re ">>"))) (re.++ (re.* (re.* (str.to_re "??"))) (re.++ (re.union (re.+ (str.to_re "@")) (re.* (str.to_re "[["))) (re.++ (re.* (re.* (str.to_re "\\"))) (re.++ (re.+ (re.* (str.to_re "]"))) (re.++ (re.* (re.union (str.to_re "^") (str.to_re "__"))) (re.++ (re.* (re.* (str.to_re "```"))) (re.union (re.* (str.to_re "{{{")) (re.+ (str.to_re "||"))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
