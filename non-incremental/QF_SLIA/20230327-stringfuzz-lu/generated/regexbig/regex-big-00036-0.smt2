(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "000")) (re.union (str.to_re "11") (str.to_re "2"))) (re.++ (re.+ (re.* (str.to_re "33"))) (re.++ (re.* (re.+ (str.to_re "4"))) (re.++ (re.+ (re.+ (str.to_re "5"))) (re.++ (re.+ (re.union (str.to_re "6") (str.to_re "777"))) (re.++ (re.union (re.+ (str.to_re "8")) (re.* (str.to_re "99"))) (re.++ (re.* (re.* (str.to_re "a"))) (re.++ (re.+ (re.+ (str.to_re "b"))) (re.++ (re.union (re.* (str.to_re "cc")) (re.* (str.to_re "d"))) (re.++ (re.union (re.union (str.to_re "ee") (str.to_re "ff")) (re.union (str.to_re "gg") (str.to_re "hhh"))) (re.++ (re.+ (re.union (str.to_re "i") (str.to_re "jjj"))) (re.++ (re.union (re.* (str.to_re "kkk")) (re.* (str.to_re "lll"))) (re.++ (re.union (re.* (str.to_re "m")) (re.* (str.to_re "nn"))) (re.++ (re.union (re.union (str.to_re "oo") (str.to_re "p")) (re.+ (str.to_re "qq"))) (re.++ (re.+ (re.union (str.to_re "rr") (str.to_re "s"))) (re.++ (re.union (re.* (str.to_re "tt")) (re.* (str.to_re "u"))) (re.++ (re.union (re.union (str.to_re "v") (str.to_re "w")) (re.+ (str.to_re "x"))) (re.++ (re.* (re.* (str.to_re "yyy"))) (re.++ (re.+ (re.+ (str.to_re "zzz"))) (re.++ (re.* (re.union (str.to_re "A") (str.to_re "B"))) (re.++ (re.* (re.+ (str.to_re "CCC"))) (re.++ (re.* (re.+ (str.to_re "DD"))) (re.++ (re.+ (re.union (str.to_re "EEE") (str.to_re "FF"))) (re.++ (re.* (re.+ (str.to_re "GG"))) (re.++ (re.+ (re.+ (str.to_re "HH"))) (re.++ (re.union (re.union (str.to_re "II") (str.to_re "J")) (re.* (str.to_re "KK"))) (re.++ (re.* (re.union (str.to_re "LLL") (str.to_re "MMM"))) (re.++ (re.* (re.union (str.to_re "N") (str.to_re "O"))) (re.++ (re.union (re.union (str.to_re "P") (str.to_re "QQ")) (re.* (str.to_re "RR"))) (re.++ (re.union (re.union (str.to_re "SS") (str.to_re "T")) (re.union (str.to_re "UU") (str.to_re "VV"))) (re.++ (re.+ (re.union (str.to_re "WWW") (str.to_re "X"))) (re.++ (re.* (re.+ (str.to_re "YY"))) (re.++ (re.* (re.* (str.to_re "Z"))) (re.++ (re.union (re.union (str.to_re "!!") (str.to_re """""""")) (re.union (str.to_re "###") (str.to_re "$$$"))) (re.++ (re.union (re.union (str.to_re "%%") (str.to_re "&&&")) (re.* (str.to_re "''"))) (re.+ (re.+ (str.to_re "("))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
