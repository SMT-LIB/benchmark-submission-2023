(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "000"))) (re.++ (re.union (re.union (str.to_re "111") (str.to_re "2")) (re.+ (str.to_re "33"))) (re.++ (re.union (re.+ (str.to_re "44")) (re.+ (str.to_re "555"))) (re.++ (re.* (re.* (str.to_re "66"))) (re.++ (re.+ (re.union (str.to_re "77") (str.to_re "8"))) (re.++ (re.union (re.union (str.to_re "99") (str.to_re "aaa")) (re.union (str.to_re "b") (str.to_re "c"))) (re.++ (re.+ (re.* (str.to_re "dd"))) (re.++ (re.union (re.* (str.to_re "eee")) (re.* (str.to_re "fff"))) (re.++ (re.union (re.+ (str.to_re "g")) (re.+ (str.to_re "hhh"))) (re.++ (re.+ (re.+ (str.to_re "iii"))) (re.++ (re.union (re.* (str.to_re "j")) (re.+ (str.to_re "kk"))) (re.++ (re.* (re.union (str.to_re "l") (str.to_re "mm"))) (re.++ (re.+ (re.* (str.to_re "nnn"))) (re.++ (re.+ (re.* (str.to_re "o"))) (re.++ (re.* (re.+ (str.to_re "ppp"))) (re.++ (re.* (re.* (str.to_re "qqq"))) (re.++ (re.union (re.union (str.to_re "rr") (str.to_re "sss")) (re.* (str.to_re "t"))) (re.++ (re.+ (re.* (str.to_re "uu"))) (re.++ (re.union (re.* (str.to_re "v")) (re.+ (str.to_re "www"))) (re.++ (re.+ (re.+ (str.to_re "xxx"))) (re.++ (re.union (re.union (str.to_re "y") (str.to_re "zz")) (re.+ (str.to_re "AA"))) (re.++ (re.* (re.* (str.to_re "BBB"))) (re.++ (re.union (re.* (str.to_re "C")) (re.union (str.to_re "DD") (str.to_re "EEE"))) (re.++ (re.union (re.union (str.to_re "FF") (str.to_re "GG")) (re.* (str.to_re "HHH"))) (re.++ (re.+ (re.+ (str.to_re "I"))) (re.++ (re.+ (re.* (str.to_re "JJ"))) (re.++ (re.* (re.+ (str.to_re "KK"))) (re.++ (re.union (re.union (str.to_re "L") (str.to_re "MMM")) (re.union (str.to_re "N") (str.to_re "O"))) (re.++ (re.union (re.+ (str.to_re "PPP")) (re.* (str.to_re "QQQ"))) (re.++ (re.union (re.* (str.to_re "RR")) (re.* (str.to_re "S"))) (re.++ (re.* (re.* (str.to_re "TTT"))) (re.++ (re.union (re.union (str.to_re "UU") (str.to_re "V")) (re.+ (str.to_re "W"))) (re.++ (re.union (re.union (str.to_re "X") (str.to_re "Y")) (re.union (str.to_re "ZZ") (str.to_re "!"))) (re.++ (re.* (re.+ (str.to_re """"""""))) (re.++ (re.+ (re.union (str.to_re "#") (str.to_re "$$$"))) (re.++ (re.union (re.* (str.to_re "%%%")) (re.union (str.to_re "&&") (str.to_re "'"))) (re.++ (re.union (re.+ (str.to_re "((")) (re.+ (str.to_re ")"))) (re.++ (re.* (re.union (str.to_re "**") (str.to_re "++"))) (re.++ (re.* (re.* (str.to_re ",,"))) (re.++ (re.+ (re.+ (str.to_re "---"))) (re.++ (re.union (re.* (str.to_re ".")) (re.+ (str.to_re "//"))) (re.++ (re.* (re.* (str.to_re "::"))) (re.++ (re.union (re.+ (str.to_re ";;")) (re.+ (str.to_re "<<<"))) (re.++ (re.* (re.union (str.to_re "===") (str.to_re ">>"))) (re.++ (re.* (re.union (str.to_re "???") (str.to_re "@@"))) (re.++ (re.union (re.+ (str.to_re "[[")) (re.union (str.to_re "\\") (str.to_re "]"))) (re.++ (re.+ (re.* (str.to_re "^"))) (re.++ (re.union (re.union (str.to_re "__") (str.to_re "``")) (re.* (str.to_re "{"))) (re.++ (re.union (re.+ (str.to_re "||")) (re.union (str.to_re "}}}") (str.to_re "~"))) (re.++ (re.union (re.union (str.to_re "0") (str.to_re "11")) (re.+ (str.to_re "222"))) (re.++ (re.union (re.* (str.to_re "33")) (re.union (str.to_re "44") (str.to_re "55"))) (re.++ (re.* (re.union (str.to_re "666") (str.to_re "777"))) (re.++ (re.* (re.+ (str.to_re "8"))) (re.++ (re.+ (re.union (str.to_re "999") (str.to_re "aa"))) (re.++ (re.+ (re.* (str.to_re "bb"))) (re.++ (re.union (re.union (str.to_re "cc") (str.to_re "d")) (re.union (str.to_re "e") (str.to_re "ff"))) (re.++ (re.+ (re.* (str.to_re "ggg"))) (re.++ (re.* (re.union (str.to_re "h") (str.to_re "iii"))) (re.++ (re.* (re.union (str.to_re "jjj") (str.to_re "kk"))) (re.++ (re.+ (re.* (str.to_re "ll"))) (re.++ (re.* (re.+ (str.to_re "m"))) (re.++ (re.+ (re.union (str.to_re "n") (str.to_re "ooo"))) (re.++ (re.+ (re.+ (str.to_re "ppp"))) (re.++ (re.union (re.* (str.to_re "qq")) (re.+ (str.to_re "rr"))) (re.++ (re.* (re.+ (str.to_re "ss"))) (re.++ (re.* (re.union (str.to_re "ttt") (str.to_re "u"))) (re.++ (re.union (re.union (str.to_re "v") (str.to_re "ww")) (re.union (str.to_re "xxx") (str.to_re "y"))) (re.++ (re.* (re.+ (str.to_re "z"))) (re.++ (re.+ (re.union (str.to_re "A") (str.to_re "B"))) (re.++ (re.* (re.* (str.to_re "CCC"))) (re.++ (re.* (re.+ (str.to_re "D"))) (re.++ (re.* (re.* (str.to_re "EE"))) (re.++ (re.* (re.+ (str.to_re "FF"))) (re.++ (re.union (re.+ (str.to_re "GG")) (re.+ (str.to_re "H"))) (re.++ (re.+ (re.+ (str.to_re "I"))) (re.++ (re.* (re.* (str.to_re "JJJ"))) (re.++ (re.union (re.+ (str.to_re "KKK")) (re.union (str.to_re "L") (str.to_re "M"))) (re.++ (re.union (re.+ (str.to_re "NN")) (re.union (str.to_re "OO") (str.to_re "P"))) (re.++ (re.* (re.* (str.to_re "QQQ"))) (re.++ (re.* (re.union (str.to_re "RRR") (str.to_re "S"))) (re.++ (re.* (re.+ (str.to_re "TTT"))) (re.++ (re.union (re.union (str.to_re "U") (str.to_re "VVV")) (re.* (str.to_re "W"))) (re.++ (re.* (re.+ (str.to_re "XXX"))) (re.++ (re.* (re.* (str.to_re "YY"))) (re.++ (re.* (re.union (str.to_re "ZZZ") (str.to_re "!"))) (re.++ (re.* (re.+ (str.to_re """"""))) (re.++ (re.union (re.union (str.to_re "##") (str.to_re "$$$")) (re.* (str.to_re "%"))) (re.++ (re.+ (re.union (str.to_re "&&&") (str.to_re "'''"))) (re.++ (re.union (re.+ (str.to_re "(")) (re.union (str.to_re "))") (str.to_re "*"))) (re.++ (re.+ (re.union (str.to_re "+") (str.to_re ",,,"))) (re.++ (re.* (re.+ (str.to_re "---"))) (re.++ (re.+ (re.union (str.to_re ".") (str.to_re "///"))) (re.++ (re.* (re.+ (str.to_re ":"))) (re.++ (re.+ (re.+ (str.to_re ";;;"))) (re.++ (re.* (re.union (str.to_re "<") (str.to_re "=="))) (re.++ (re.+ (re.* (str.to_re ">>>"))) (re.++ (re.* (re.union (str.to_re "???") (str.to_re "@@@"))) (re.++ (re.+ (re.+ (str.to_re "["))) (re.+ (re.* (str.to_re "\\\\\\")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
