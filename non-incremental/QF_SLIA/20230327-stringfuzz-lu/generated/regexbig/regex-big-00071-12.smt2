(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "000")) (re.* (str.to_re "1"))) (re.++ (re.+ (re.* (str.to_re "22"))) (re.++ (re.+ (re.+ (str.to_re "333"))) (re.++ (re.union (re.union (str.to_re "44") (str.to_re "55")) (re.+ (str.to_re "666"))) (re.++ (re.union (re.union (str.to_re "777") (str.to_re "888")) (re.+ (str.to_re "99"))) (re.++ (re.+ (re.union (str.to_re "aa") (str.to_re "bb"))) (re.++ (re.union (re.+ (str.to_re "cc")) (re.+ (str.to_re "ddd"))) (re.++ (re.+ (re.union (str.to_re "e") (str.to_re "f"))) (re.++ (re.* (re.* (str.to_re "g"))) (re.++ (re.* (re.union (str.to_re "hhh") (str.to_re "iii"))) (re.++ (re.union (re.+ (str.to_re "jjj")) (re.+ (str.to_re "kk"))) (re.++ (re.+ (re.+ (str.to_re "lll"))) (re.++ (re.union (re.* (str.to_re "mmm")) (re.union (str.to_re "nn") (str.to_re "ooo"))) (re.++ (re.* (re.* (str.to_re "p"))) (re.++ (re.+ (re.* (str.to_re "qqq"))) (re.++ (re.* (re.union (str.to_re "r") (str.to_re "s"))) (re.++ (re.union (re.+ (str.to_re "ttt")) (re.* (str.to_re "u"))) (re.++ (re.* (re.union (str.to_re "vvv") (str.to_re "w"))) (re.++ (re.+ (re.* (str.to_re "xxx"))) (re.++ (re.union (re.+ (str.to_re "yy")) (re.* (str.to_re "zzz"))) (re.++ (re.+ (re.+ (str.to_re "AAA"))) (re.++ (re.* (re.+ (str.to_re "B"))) (re.++ (re.+ (re.* (str.to_re "CCC"))) (re.++ (re.union (re.* (str.to_re "D")) (re.+ (str.to_re "E"))) (re.++ (re.union (re.+ (str.to_re "F")) (re.* (str.to_re "G"))) (re.++ (re.union (re.union (str.to_re "H") (str.to_re "II")) (re.* (str.to_re "JJ"))) (re.++ (re.union (re.union (str.to_re "KK") (str.to_re "L")) (re.+ (str.to_re "M"))) (re.++ (re.+ (re.* (str.to_re "NNN"))) (re.++ (re.* (re.union (str.to_re "OO") (str.to_re "PP"))) (re.++ (re.union (re.+ (str.to_re "QQ")) (re.* (str.to_re "R"))) (re.++ (re.union (re.union (str.to_re "S") (str.to_re "TT")) (re.+ (str.to_re "U"))) (re.++ (re.* (re.+ (str.to_re "VVV"))) (re.++ (re.* (re.+ (str.to_re "WW"))) (re.++ (re.+ (re.+ (str.to_re "X"))) (re.++ (re.* (re.union (str.to_re "YY") (str.to_re "ZZZ"))) (re.++ (re.* (re.* (str.to_re "!"))) (re.++ (re.union (re.union (str.to_re """""""") (str.to_re "#")) (re.+ (str.to_re "$$"))) (re.++ (re.union (re.+ (str.to_re "%")) (re.* (str.to_re "&&"))) (re.++ (re.* (re.* (str.to_re "''"))) (re.++ (re.union (re.+ (str.to_re "(((")) (re.union (str.to_re ")") (str.to_re "*"))) (re.++ (re.+ (re.* (str.to_re "++"))) (re.++ (re.union (re.* (str.to_re ",,,")) (re.union (str.to_re "---") (str.to_re ".."))) (re.++ (re.* (re.+ (str.to_re "///"))) (re.++ (re.* (re.* (str.to_re ":::"))) (re.++ (re.+ (re.union (str.to_re ";;") (str.to_re "<"))) (re.++ (re.* (re.union (str.to_re "=") (str.to_re ">"))) (re.++ (re.* (re.* (str.to_re "???"))) (re.++ (re.* (re.* (str.to_re "@@@"))) (re.++ (re.+ (re.union (str.to_re "[[") (str.to_re "\\"))) (re.++ (re.+ (re.+ (str.to_re "]]"))) (re.++ (re.+ (re.+ (str.to_re "^^"))) (re.++ (re.union (re.+ (str.to_re "_")) (re.* (str.to_re "``"))) (re.++ (re.* (re.union (str.to_re "{{{") (str.to_re "|"))) (re.++ (re.* (re.+ (str.to_re "}"))) (re.++ (re.union (re.+ (str.to_re "~~~")) (re.union (str.to_re "0") (str.to_re "11"))) (re.++ (re.* (re.+ (str.to_re "222"))) (re.++ (re.+ (re.* (str.to_re "33"))) (re.++ (re.union (re.union (str.to_re "4") (str.to_re "555")) (re.+ (str.to_re "66"))) (re.++ (re.+ (re.* (str.to_re "7"))) (re.++ (re.union (re.+ (str.to_re "88")) (re.+ (str.to_re "9"))) (re.++ (re.union (re.* (str.to_re "aaa")) (re.* (str.to_re "b"))) (re.++ (re.union (re.* (str.to_re "cc")) (re.+ (str.to_re "d"))) (re.++ (re.+ (re.+ (str.to_re "ee"))) (re.++ (re.* (re.union (str.to_re "ff") (str.to_re "gg"))) (re.++ (re.+ (re.union (str.to_re "h") (str.to_re "i"))) (re.++ (re.+ (re.+ (str.to_re "jjj"))) (re.++ (re.* (re.* (str.to_re "k"))) (re.++ (re.* (re.union (str.to_re "lll") (str.to_re "mm"))) (re.++ (re.+ (re.union (str.to_re "nn") (str.to_re "ooo"))) (re.++ (re.* (re.+ (str.to_re "pp"))) (re.+ (re.* (str.to_re "qq")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
