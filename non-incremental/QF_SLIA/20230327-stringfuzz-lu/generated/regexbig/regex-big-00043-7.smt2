(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.+ (re.union (str.to_re "111") (str.to_re "22"))) (re.++ (re.* (re.union (str.to_re "3") (str.to_re "444"))) (re.++ (re.+ (re.+ (str.to_re "55"))) (re.++ (re.union (re.union (str.to_re "666") (str.to_re "77")) (re.* (str.to_re "88"))) (re.++ (re.+ (re.* (str.to_re "99"))) (re.++ (re.union (re.union (str.to_re "a") (str.to_re "bbb")) (re.union (str.to_re "cc") (str.to_re "ddd"))) (re.++ (re.union (re.* (str.to_re "e")) (re.union (str.to_re "ff") (str.to_re "g"))) (re.++ (re.+ (re.union (str.to_re "hh") (str.to_re "ii"))) (re.++ (re.* (re.union (str.to_re "jj") (str.to_re "kk"))) (re.++ (re.* (re.+ (str.to_re "lll"))) (re.++ (re.union (re.+ (str.to_re "mmm")) (re.union (str.to_re "n") (str.to_re "ooo"))) (re.++ (re.+ (re.+ (str.to_re "ppp"))) (re.++ (re.* (re.union (str.to_re "qqq") (str.to_re "rrr"))) (re.++ (re.+ (re.* (str.to_re "s"))) (re.++ (re.union (re.union (str.to_re "ttt") (str.to_re "uu")) (re.union (str.to_re "v") (str.to_re "www"))) (re.++ (re.union (re.+ (str.to_re "xx")) (re.+ (str.to_re "y"))) (re.++ (re.* (re.union (str.to_re "zzz") (str.to_re "AA"))) (re.++ (re.+ (re.union (str.to_re "BB") (str.to_re "C"))) (re.++ (re.* (re.union (str.to_re "D") (str.to_re "EE"))) (re.++ (re.union (re.+ (str.to_re "F")) (re.+ (str.to_re "GG"))) (re.++ (re.union (re.union (str.to_re "HHH") (str.to_re "I")) (re.union (str.to_re "JJJ") (str.to_re "KK"))) (re.++ (re.+ (re.+ (str.to_re "LL"))) (re.++ (re.* (re.* (str.to_re "MM"))) (re.++ (re.union (re.union (str.to_re "NNN") (str.to_re "OOO")) (re.union (str.to_re "PPP") (str.to_re "Q"))) (re.++ (re.union (re.* (str.to_re "RR")) (re.+ (str.to_re "SS"))) (re.++ (re.+ (re.union (str.to_re "TTT") (str.to_re "UU"))) (re.++ (re.+ (re.union (str.to_re "V") (str.to_re "WWW"))) (re.++ (re.* (re.union (str.to_re "XX") (str.to_re "Y"))) (re.++ (re.union (re.* (str.to_re "ZZ")) (re.+ (str.to_re "!!!"))) (re.++ (re.* (re.* (str.to_re """"""))) (re.++ (re.union (re.union (str.to_re "###") (str.to_re "$$$")) (re.+ (str.to_re "%"))) (re.++ (re.+ (re.union (str.to_re "&&&") (str.to_re "'''"))) (re.++ (re.* (re.* (str.to_re "((("))) (re.++ (re.* (re.union (str.to_re "))") (str.to_re "*"))) (re.++ (re.+ (re.+ (str.to_re "+"))) (re.++ (re.+ (re.+ (str.to_re ",,"))) (re.++ (re.union (re.+ (str.to_re "--")) (re.union (str.to_re ".") (str.to_re "///"))) (re.++ (re.union (re.+ (str.to_re ":::")) (re.+ (str.to_re ";"))) (re.++ (re.union (re.+ (str.to_re "<<")) (re.+ (str.to_re "=="))) (re.++ (re.* (re.* (str.to_re ">"))) (re.++ (re.* (re.union (str.to_re "?") (str.to_re "@"))) (re.union (re.union (str.to_re "[") (str.to_re "\\\\")) (re.* (str.to_re "]]]")))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
