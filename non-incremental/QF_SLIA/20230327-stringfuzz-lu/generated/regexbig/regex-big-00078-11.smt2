(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "0"))) (re.++ (re.* (re.union (str.to_re "11") (str.to_re "222"))) (re.++ (re.* (re.+ (str.to_re "3"))) (re.++ (re.+ (re.+ (str.to_re "44"))) (re.++ (re.union (re.union (str.to_re "555") (str.to_re "6")) (re.* (str.to_re "7"))) (re.++ (re.union (re.+ (str.to_re "888")) (re.+ (str.to_re "999"))) (re.++ (re.* (re.union (str.to_re "aa") (str.to_re "bb"))) (re.++ (re.* (re.+ (str.to_re "c"))) (re.++ (re.union (re.* (str.to_re "d")) (re.+ (str.to_re "eee"))) (re.++ (re.* (re.* (str.to_re "fff"))) (re.++ (re.* (re.* (str.to_re "gg"))) (re.++ (re.union (re.* (str.to_re "h")) (re.union (str.to_re "ii") (str.to_re "jjj"))) (re.++ (re.union (re.* (str.to_re "kkk")) (re.+ (str.to_re "lll"))) (re.++ (re.* (re.+ (str.to_re "mm"))) (re.++ (re.+ (re.* (str.to_re "nn"))) (re.++ (re.* (re.+ (str.to_re "ooo"))) (re.++ (re.+ (re.+ (str.to_re "pp"))) (re.++ (re.* (re.* (str.to_re "qq"))) (re.++ (re.* (re.union (str.to_re "rr") (str.to_re "ss"))) (re.++ (re.* (re.+ (str.to_re "t"))) (re.++ (re.* (re.+ (str.to_re "uuu"))) (re.++ (re.* (re.union (str.to_re "vv") (str.to_re "w"))) (re.++ (re.union (re.union (str.to_re "xx") (str.to_re "y")) (re.union (str.to_re "z") (str.to_re "AAA"))) (re.++ (re.* (re.+ (str.to_re "BBB"))) (re.++ (re.union (re.* (str.to_re "CC")) (re.* (str.to_re "DD"))) (re.++ (re.union (re.+ (str.to_re "EE")) (re.union (str.to_re "FF") (str.to_re "G"))) (re.++ (re.union (re.union (str.to_re "HHH") (str.to_re "II")) (re.union (str.to_re "J") (str.to_re "KKK"))) (re.++ (re.union (re.union (str.to_re "L") (str.to_re "MM")) (re.union (str.to_re "N") (str.to_re "OO"))) (re.++ (re.* (re.* (str.to_re "PPP"))) (re.++ (re.union (re.* (str.to_re "QQ")) (re.union (str.to_re "R") (str.to_re "SS"))) (re.++ (re.union (re.+ (str.to_re "TTT")) (re.* (str.to_re "UU"))) (re.++ (re.* (re.union (str.to_re "V") (str.to_re "WWW"))) (re.++ (re.union (re.* (str.to_re "XXX")) (re.+ (str.to_re "Y"))) (re.++ (re.+ (re.+ (str.to_re "Z"))) (re.++ (re.union (re.+ (str.to_re "!!")) (re.+ (str.to_re """"""))) (re.++ (re.+ (re.+ (str.to_re "#"))) (re.++ (re.union (re.+ (str.to_re "$$$")) (re.union (str.to_re "%%") (str.to_re "&&"))) (re.++ (re.+ (re.* (str.to_re "'"))) (re.++ (re.* (re.* (str.to_re "((("))) (re.++ (re.+ (re.union (str.to_re ")") (str.to_re "*"))) (re.++ (re.* (re.* (str.to_re "++"))) (re.++ (re.union (re.union (str.to_re ",") (str.to_re "---")) (re.+ (str.to_re ".."))) (re.++ (re.* (re.+ (str.to_re "///"))) (re.++ (re.union (re.* (str.to_re ":::")) (re.+ (str.to_re ";"))) (re.++ (re.+ (re.+ (str.to_re "<<"))) (re.++ (re.union (re.* (str.to_re "===")) (re.union (str.to_re ">") (str.to_re "???"))) (re.++ (re.union (re.+ (str.to_re "@@")) (re.union (str.to_re "[[") (str.to_re "\\\\"))) (re.++ (re.+ (re.+ (str.to_re "]]]"))) (re.++ (re.* (re.union (str.to_re "^^") (str.to_re "___"))) (re.++ (re.* (re.+ (str.to_re "`"))) (re.++ (re.union (re.* (str.to_re "{{")) (re.+ (str.to_re "|"))) (re.++ (re.* (re.+ (str.to_re "}"))) (re.++ (re.* (re.union (str.to_re "~~~") (str.to_re "000"))) (re.++ (re.union (re.* (str.to_re "111")) (re.union (str.to_re "22") (str.to_re "333"))) (re.++ (re.union (re.* (str.to_re "44")) (re.+ (str.to_re "555"))) (re.++ (re.union (re.union (str.to_re "66") (str.to_re "777")) (re.* (str.to_re "888"))) (re.++ (re.* (re.* (str.to_re "999"))) (re.++ (re.union (re.* (str.to_re "aaa")) (re.union (str.to_re "bb") (str.to_re "c"))) (re.++ (re.+ (re.+ (str.to_re "dd"))) (re.++ (re.union (re.union (str.to_re "e") (str.to_re "ff")) (re.* (str.to_re "ggg"))) (re.++ (re.+ (re.+ (str.to_re "hh"))) (re.++ (re.+ (re.union (str.to_re "ii") (str.to_re "jjj"))) (re.++ (re.union (re.* (str.to_re "kk")) (re.* (str.to_re "lll"))) (re.++ (re.union (re.union (str.to_re "mmm") (str.to_re "n")) (re.union (str.to_re "o") (str.to_re "ppp"))) (re.++ (re.+ (re.* (str.to_re "qqq"))) (re.++ (re.* (re.union (str.to_re "rrr") (str.to_re "sss"))) (re.++ (re.union (re.* (str.to_re "ttt")) (re.* (str.to_re "u"))) (re.++ (re.union (re.union (str.to_re "vv") (str.to_re "ww")) (re.union (str.to_re "xxx") (str.to_re "y"))) (re.++ (re.+ (re.+ (str.to_re "zz"))) (re.++ (re.+ (re.union (str.to_re "A") (str.to_re "BBB"))) (re.++ (re.union (re.union (str.to_re "C") (str.to_re "DD")) (re.union (str.to_re "E") (str.to_re "FF"))) (re.++ (re.* (re.+ (str.to_re "G"))) (re.++ (re.union (re.union (str.to_re "HH") (str.to_re "II")) (re.+ (str.to_re "JJJ"))) (re.++ (re.+ (re.* (str.to_re "K"))) (re.++ (re.* (re.* (str.to_re "LL"))) (re.++ (re.union (re.union (str.to_re "M") (str.to_re "N")) (re.+ (str.to_re "O"))) (re.++ (re.union (re.union (str.to_re "PPP") (str.to_re "QQQ")) (re.* (str.to_re "RR"))) (re.union (re.+ (str.to_re "S")) (re.* (str.to_re "TT"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
