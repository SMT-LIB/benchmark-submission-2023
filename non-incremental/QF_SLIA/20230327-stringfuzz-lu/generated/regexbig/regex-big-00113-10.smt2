(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (str.to_re "00"))) (re.++ (re.+ (re.union (str.to_re "11") (str.to_re "222"))) (re.++ (re.* (re.+ (str.to_re "33"))) (re.++ (re.union (re.union (str.to_re "444") (str.to_re "555")) (re.union (str.to_re "66") (str.to_re "777"))) (re.++ (re.* (re.union (str.to_re "88") (str.to_re "9"))) (re.++ (re.+ (re.union (str.to_re "a") (str.to_re "bbb"))) (re.++ (re.+ (re.* (str.to_re "cc"))) (re.++ (re.+ (re.* (str.to_re "dd"))) (re.++ (re.union (re.union (str.to_re "eee") (str.to_re "ff")) (re.union (str.to_re "g") (str.to_re "hh"))) (re.++ (re.* (re.* (str.to_re "i"))) (re.++ (re.union (re.union (str.to_re "jjj") (str.to_re "kk")) (re.+ (str.to_re "l"))) (re.++ (re.* (re.union (str.to_re "mmm") (str.to_re "nnn"))) (re.++ (re.+ (re.* (str.to_re "o"))) (re.++ (re.union (re.union (str.to_re "pp") (str.to_re "qqq")) (re.* (str.to_re "rrr"))) (re.++ (re.union (re.* (str.to_re "ss")) (re.* (str.to_re "tt"))) (re.++ (re.* (re.+ (str.to_re "uuu"))) (re.++ (re.union (re.union (str.to_re "v") (str.to_re "ww")) (re.+ (str.to_re "xx"))) (re.++ (re.union (re.* (str.to_re "yy")) (re.union (str.to_re "zz") (str.to_re "AAA"))) (re.++ (re.* (re.+ (str.to_re "BBB"))) (re.++ (re.union (re.union (str.to_re "C") (str.to_re "DD")) (re.* (str.to_re "EEE"))) (re.++ (re.+ (re.* (str.to_re "FF"))) (re.++ (re.union (re.* (str.to_re "G")) (re.+ (str.to_re "H"))) (re.++ (re.* (re.* (str.to_re "III"))) (re.++ (re.union (re.+ (str.to_re "J")) (re.+ (str.to_re "KKK"))) (re.++ (re.* (re.union (str.to_re "LL") (str.to_re "MM"))) (re.++ (re.union (re.* (str.to_re "NN")) (re.union (str.to_re "OOO") (str.to_re "PPP"))) (re.++ (re.* (re.union (str.to_re "Q") (str.to_re "RR"))) (re.++ (re.* (re.* (str.to_re "S"))) (re.++ (re.union (re.+ (str.to_re "TTT")) (re.+ (str.to_re "UU"))) (re.++ (re.union (re.* (str.to_re "VV")) (re.+ (str.to_re "WW"))) (re.++ (re.union (re.+ (str.to_re "XX")) (re.union (str.to_re "Y") (str.to_re "ZZ"))) (re.++ (re.* (re.* (str.to_re "!!!"))) (re.++ (re.* (re.* (str.to_re """"""))) (re.++ (re.union (re.* (str.to_re "##")) (re.+ (str.to_re "$$"))) (re.++ (re.* (re.union (str.to_re "%%") (str.to_re "&&&"))) (re.++ (re.* (re.union (str.to_re "'''") (str.to_re "("))) (re.++ (re.union (re.union (str.to_re "))") (str.to_re "*")) (re.+ (str.to_re "+++"))) (re.++ (re.* (re.+ (str.to_re ","))) (re.++ (re.* (re.+ (str.to_re "-"))) (re.++ (re.union (re.union (str.to_re "...") (str.to_re "/")) (re.+ (str.to_re ":::"))) (re.++ (re.union (re.* (str.to_re ";")) (re.* (str.to_re "<<"))) (re.++ (re.+ (re.union (str.to_re "=") (str.to_re ">>>"))) (re.++ (re.union (re.* (str.to_re "?")) (re.+ (str.to_re "@@@"))) (re.++ (re.union (re.+ (str.to_re "[")) (re.* (str.to_re "\\"))) (re.++ (re.* (re.+ (str.to_re "]"))) (re.++ (re.+ (re.* (str.to_re "^^^"))) (re.++ (re.+ (re.+ (str.to_re "___"))) (re.++ (re.* (re.* (str.to_re "`"))) (re.++ (re.+ (re.union (str.to_re "{") (str.to_re "|"))) (re.++ (re.+ (re.union (str.to_re "}}") (str.to_re "~"))) (re.++ (re.* (re.union (str.to_re "000") (str.to_re "1"))) (re.++ (re.* (re.* (str.to_re "222"))) (re.++ (re.* (re.+ (str.to_re "33"))) (re.++ (re.union (re.* (str.to_re "44")) (re.+ (str.to_re "55"))) (re.++ (re.union (re.+ (str.to_re "66")) (re.+ (str.to_re "77"))) (re.++ (re.+ (re.+ (str.to_re "88"))) (re.++ (re.* (re.+ (str.to_re "99"))) (re.++ (re.+ (re.+ (str.to_re "aaa"))) (re.++ (re.* (re.union (str.to_re "b") (str.to_re "c"))) (re.++ (re.+ (re.+ (str.to_re "dd"))) (re.++ (re.+ (re.* (str.to_re "ee"))) (re.++ (re.* (re.union (str.to_re "fff") (str.to_re "ggg"))) (re.++ (re.union (re.+ (str.to_re "hh")) (re.* (str.to_re "i"))) (re.++ (re.+ (re.union (str.to_re "jjj") (str.to_re "k"))) (re.++ (re.* (re.union (str.to_re "l") (str.to_re "mmm"))) (re.++ (re.* (re.union (str.to_re "nnn") (str.to_re "oo"))) (re.++ (re.union (re.* (str.to_re "pp")) (re.+ (str.to_re "q"))) (re.++ (re.union (re.+ (str.to_re "rrr")) (re.* (str.to_re "s"))) (re.++ (re.union (re.+ (str.to_re "t")) (re.union (str.to_re "uu") (str.to_re "v"))) (re.++ (re.* (re.+ (str.to_re "w"))) (re.++ (re.* (re.union (str.to_re "x") (str.to_re "yy"))) (re.++ (re.* (re.+ (str.to_re "z"))) (re.++ (re.+ (re.union (str.to_re "A") (str.to_re "BB"))) (re.++ (re.+ (re.* (str.to_re "C"))) (re.++ (re.+ (re.+ (str.to_re "DDD"))) (re.++ (re.* (re.+ (str.to_re "E"))) (re.++ (re.+ (re.* (str.to_re "FF"))) (re.++ (re.+ (re.* (str.to_re "G"))) (re.++ (re.+ (re.+ (str.to_re "HH"))) (re.++ (re.* (re.* (str.to_re "I"))) (re.++ (re.* (re.union (str.to_re "J") (str.to_re "K"))) (re.++ (re.union (re.+ (str.to_re "LLL")) (re.+ (str.to_re "M"))) (re.++ (re.* (re.+ (str.to_re "NNN"))) (re.++ (re.+ (re.* (str.to_re "OOO"))) (re.++ (re.+ (re.+ (str.to_re "P"))) (re.++ (re.+ (re.union (str.to_re "Q") (str.to_re "R"))) (re.++ (re.* (re.* (str.to_re "SSS"))) (re.++ (re.union (re.union (str.to_re "TT") (str.to_re "UUU")) (re.+ (str.to_re "VVV"))) (re.++ (re.* (re.+ (str.to_re "W"))) (re.++ (re.union (re.union (str.to_re "X") (str.to_re "YYY")) (re.* (str.to_re "Z"))) (re.++ (re.+ (re.+ (str.to_re "!"))) (re.++ (re.* (re.+ (str.to_re """"""""))) (re.++ (re.* (re.union (str.to_re "##") (str.to_re "$$$"))) (re.++ (re.union (re.* (str.to_re "%%%")) (re.union (str.to_re "&&&") (str.to_re "''"))) (re.++ (re.* (re.+ (str.to_re "(("))) (re.++ (re.* (re.union (str.to_re "))") (str.to_re "*"))) (re.++ (re.union (re.+ (str.to_re "++")) (re.* (str.to_re ",,,"))) (re.++ (re.+ (re.+ (str.to_re "-"))) (re.++ (re.* (re.union (str.to_re "...") (str.to_re "/"))) (re.++ (re.+ (re.union (str.to_re ":") (str.to_re ";"))) (re.++ (re.union (re.union (str.to_re "<") (str.to_re "===")) (re.union (str.to_re ">>>") (str.to_re "???"))) (re.++ (re.+ (re.* (str.to_re "@@"))) (re.++ (re.union (re.union (str.to_re "[") (str.to_re "\\")) (re.+ (str.to_re "]]]"))) (re.++ (re.union (re.union (str.to_re "^^^") (str.to_re "__")) (re.union (str.to_re "``") (str.to_re "{{"))) (re.++ (re.union (re.+ (str.to_re "|||")) (re.* (str.to_re "}}"))) (re.++ (re.* (re.* (str.to_re "~~~"))) (re.++ (re.union (re.union (str.to_re "000") (str.to_re "111")) (re.* (str.to_re "22"))) (re.++ (re.+ (re.+ (str.to_re "33"))) (re.++ (re.+ (re.+ (str.to_re "44"))) (re.++ (re.+ (re.union (str.to_re "5") (str.to_re "6"))) (re.++ (re.* (re.* (str.to_re "777"))) (re.++ (re.union (re.union (str.to_re "8") (str.to_re "99")) (re.union (str.to_re "a") (str.to_re "bb"))) (re.+ (re.+ (str.to_re "ccc")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
