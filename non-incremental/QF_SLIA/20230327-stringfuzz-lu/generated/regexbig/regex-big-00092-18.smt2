(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "000"))) (re.++ (re.union (re.* (str.to_re "111")) (re.+ (str.to_re "222"))) (re.++ (re.* (re.union (str.to_re "333") (str.to_re "444"))) (re.++ (re.* (re.union (str.to_re "55") (str.to_re "666"))) (re.++ (re.* (re.* (str.to_re "777"))) (re.++ (re.+ (re.* (str.to_re "888"))) (re.++ (re.+ (re.* (str.to_re "999"))) (re.++ (re.* (re.union (str.to_re "a") (str.to_re "b"))) (re.++ (re.union (re.+ (str.to_re "cc")) (re.+ (str.to_re "dd"))) (re.++ (re.* (re.+ (str.to_re "eee"))) (re.++ (re.* (re.+ (str.to_re "fff"))) (re.++ (re.* (re.+ (str.to_re "gg"))) (re.++ (re.* (re.union (str.to_re "hhh") (str.to_re "i"))) (re.++ (re.* (re.+ (str.to_re "jj"))) (re.++ (re.union (re.union (str.to_re "kk") (str.to_re "lll")) (re.* (str.to_re "mmm"))) (re.++ (re.* (re.* (str.to_re "nnn"))) (re.++ (re.union (re.+ (str.to_re "o")) (re.* (str.to_re "p"))) (re.++ (re.+ (re.+ (str.to_re "qqq"))) (re.++ (re.+ (re.* (str.to_re "rr"))) (re.++ (re.+ (re.+ (str.to_re "s"))) (re.++ (re.union (re.* (str.to_re "t")) (re.* (str.to_re "uu"))) (re.++ (re.* (re.+ (str.to_re "v"))) (re.++ (re.* (re.union (str.to_re "www") (str.to_re "xx"))) (re.++ (re.* (re.union (str.to_re "yyy") (str.to_re "zzz"))) (re.++ (re.* (re.* (str.to_re "AA"))) (re.++ (re.union (re.+ (str.to_re "B")) (re.+ (str.to_re "C"))) (re.++ (re.+ (re.+ (str.to_re "DD"))) (re.++ (re.union (re.* (str.to_re "EE")) (re.+ (str.to_re "F"))) (re.++ (re.* (re.+ (str.to_re "GG"))) (re.++ (re.+ (re.+ (str.to_re "HHH"))) (re.++ (re.+ (re.+ (str.to_re "III"))) (re.++ (re.+ (re.* (str.to_re "JJJ"))) (re.++ (re.union (re.* (str.to_re "KKK")) (re.+ (str.to_re "LL"))) (re.++ (re.+ (re.* (str.to_re "M"))) (re.++ (re.+ (re.union (str.to_re "N") (str.to_re "OOO"))) (re.++ (re.* (re.* (str.to_re "PP"))) (re.++ (re.union (re.union (str.to_re "Q") (str.to_re "RR")) (re.union (str.to_re "SSS") (str.to_re "TT"))) (re.++ (re.union (re.union (str.to_re "UU") (str.to_re "VVV")) (re.* (str.to_re "WWW"))) (re.++ (re.+ (re.+ (str.to_re "XXX"))) (re.++ (re.* (re.union (str.to_re "YYY") (str.to_re "Z"))) (re.++ (re.+ (re.* (str.to_re "!!"))) (re.++ (re.union (re.union (str.to_re """""") (str.to_re "#")) (re.* (str.to_re "$$"))) (re.++ (re.union (re.union (str.to_re "%") (str.to_re "&&")) (re.union (str.to_re "'''") (str.to_re "("))) (re.++ (re.union (re.+ (str.to_re ")))")) (re.* (str.to_re "***"))) (re.++ (re.* (re.+ (str.to_re "++"))) (re.++ (re.* (re.* (str.to_re ",,,"))) (re.++ (re.union (re.union (str.to_re "---") (str.to_re ".")) (re.+ (str.to_re "//"))) (re.++ (re.union (re.union (str.to_re ":::") (str.to_re ";;")) (re.union (str.to_re "<<") (str.to_re "=="))) (re.++ (re.union (re.union (str.to_re ">>>") (str.to_re "?")) (re.* (str.to_re "@@@"))) (re.++ (re.union (re.* (str.to_re "[[")) (re.+ (str.to_re "\\\\\\"))) (re.++ (re.union (re.* (str.to_re "]")) (re.* (str.to_re "^^^"))) (re.++ (re.union (re.+ (str.to_re "__")) (re.union (str.to_re "```") (str.to_re "{{"))) (re.++ (re.+ (re.* (str.to_re "|||"))) (re.++ (re.+ (re.* (str.to_re "}"))) (re.++ (re.+ (re.union (str.to_re "~") (str.to_re "000"))) (re.++ (re.* (re.+ (str.to_re "111"))) (re.++ (re.* (re.* (str.to_re "2"))) (re.++ (re.* (re.+ (str.to_re "3"))) (re.++ (re.union (re.* (str.to_re "44")) (re.* (str.to_re "55"))) (re.++ (re.+ (re.+ (str.to_re "66"))) (re.++ (re.union (re.union (str.to_re "777") (str.to_re "8")) (re.* (str.to_re "9"))) (re.++ (re.+ (re.union (str.to_re "aa") (str.to_re "b"))) (re.++ (re.+ (re.+ (str.to_re "cc"))) (re.++ (re.+ (re.union (str.to_re "dd") (str.to_re "ee"))) (re.++ (re.* (re.union (str.to_re "ff") (str.to_re "gg"))) (re.++ (re.union (re.union (str.to_re "hh") (str.to_re "iii")) (re.+ (str.to_re "jj"))) (re.++ (re.+ (re.+ (str.to_re "k"))) (re.++ (re.union (re.+ (str.to_re "lll")) (re.+ (str.to_re "m"))) (re.++ (re.+ (re.* (str.to_re "nnn"))) (re.++ (re.union (re.* (str.to_re "oo")) (re.+ (str.to_re "ppp"))) (re.++ (re.* (re.+ (str.to_re "qq"))) (re.++ (re.union (re.union (str.to_re "rr") (str.to_re "ss")) (re.* (str.to_re "t"))) (re.++ (re.+ (re.+ (str.to_re "u"))) (re.++ (re.+ (re.union (str.to_re "vv") (str.to_re "ww"))) (re.++ (re.* (re.* (str.to_re "x"))) (re.++ (re.union (re.union (str.to_re "y") (str.to_re "zz")) (re.* (str.to_re "AA"))) (re.++ (re.+ (re.union (str.to_re "BBB") (str.to_re "CC"))) (re.++ (re.+ (re.+ (str.to_re "DDD"))) (re.++ (re.+ (re.union (str.to_re "E") (str.to_re "F"))) (re.++ (re.+ (re.* (str.to_re "GGG"))) (re.++ (re.union (re.+ (str.to_re "H")) (re.union (str.to_re "II") (str.to_re "JJJ"))) (re.++ (re.union (re.* (str.to_re "K")) (re.+ (str.to_re "L"))) (re.++ (re.+ (re.union (str.to_re "MMM") (str.to_re "NN"))) (re.++ (re.union (re.union (str.to_re "OO") (str.to_re "PPP")) (re.+ (str.to_re "QQQ"))) (re.++ (re.union (re.* (str.to_re "RRR")) (re.union (str.to_re "S") (str.to_re "TTT"))) (re.++ (re.+ (re.+ (str.to_re "U"))) (re.++ (re.+ (re.+ (str.to_re "V"))) (re.++ (re.+ (re.+ (str.to_re "WW"))) (re.++ (re.+ (re.union (str.to_re "XXX") (str.to_re "Y"))) (re.++ (re.* (re.+ (str.to_re "ZZ"))) (re.++ (re.+ (re.union (str.to_re "!!!") (str.to_re """"""""))) (re.+ (re.* (str.to_re "##"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
