(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "00"))) (re.++ (re.union (re.* (str.to_re "111")) (re.union (str.to_re "2") (str.to_re "33"))) (re.++ (re.union (re.+ (str.to_re "4")) (re.* (str.to_re "5"))) (re.++ (re.+ (re.union (str.to_re "6") (str.to_re "77"))) (re.++ (re.union (re.+ (str.to_re "8")) (re.* (str.to_re "999"))) (re.++ (re.* (re.+ (str.to_re "aaa"))) (re.++ (re.* (re.* (str.to_re "bbb"))) (re.++ (re.* (re.* (str.to_re "cc"))) (re.++ (re.* (re.* (str.to_re "d"))) (re.++ (re.+ (re.union (str.to_re "e") (str.to_re "fff"))) (re.++ (re.union (re.* (str.to_re "g")) (re.union (str.to_re "h") (str.to_re "i"))) (re.++ (re.union (re.* (str.to_re "jj")) (re.+ (str.to_re "k"))) (re.++ (re.* (re.* (str.to_re "lll"))) (re.++ (re.+ (re.union (str.to_re "m") (str.to_re "nn"))) (re.++ (re.* (re.union (str.to_re "oo") (str.to_re "p"))) (re.++ (re.union (re.+ (str.to_re "qq")) (re.union (str.to_re "r") (str.to_re "sss"))) (re.++ (re.+ (re.+ (str.to_re "tt"))) (re.++ (re.union (re.* (str.to_re "u")) (re.* (str.to_re "vv"))) (re.++ (re.+ (re.+ (str.to_re "w"))) (re.++ (re.+ (re.+ (str.to_re "x"))) (re.++ (re.+ (re.* (str.to_re "yyy"))) (re.++ (re.+ (re.+ (str.to_re "zz"))) (re.++ (re.* (re.* (str.to_re "AA"))) (re.++ (re.+ (re.union (str.to_re "BB") (str.to_re "CCC"))) (re.++ (re.* (re.union (str.to_re "D") (str.to_re "EEE"))) (re.++ (re.union (re.union (str.to_re "FF") (str.to_re "GG")) (re.+ (str.to_re "HHH"))) (re.++ (re.union (re.+ (str.to_re "I")) (re.* (str.to_re "JJJ"))) (re.++ (re.union (re.* (str.to_re "KKK")) (re.* (str.to_re "LLL"))) (re.++ (re.* (re.* (str.to_re "M"))) (re.++ (re.union (re.+ (str.to_re "NNN")) (re.union (str.to_re "OOO") (str.to_re "PPP"))) (re.++ (re.+ (re.union (str.to_re "QQ") (str.to_re "RRR"))) (re.++ (re.* (re.union (str.to_re "SS") (str.to_re "T"))) (re.++ (re.union (re.* (str.to_re "UUU")) (re.+ (str.to_re "V"))) (re.++ (re.* (re.* (str.to_re "WWW"))) (re.++ (re.+ (re.+ (str.to_re "XX"))) (re.++ (re.+ (re.+ (str.to_re "YY"))) (re.++ (re.+ (re.union (str.to_re "Z") (str.to_re "!!!"))) (re.++ (re.* (re.union (str.to_re """") (str.to_re "###"))) (re.++ (re.* (re.union (str.to_re "$$") (str.to_re "%%"))) (re.++ (re.* (re.* (str.to_re "&&"))) (re.++ (re.union (re.union (str.to_re "'") (str.to_re "((")) (re.+ (str.to_re ")))"))) (re.++ (re.* (re.union (str.to_re "*") (str.to_re "+"))) (re.++ (re.union (re.* (str.to_re ",,")) (re.+ (str.to_re "--"))) (re.++ (re.union (re.* (str.to_re ".")) (re.* (str.to_re "//"))) (re.++ (re.+ (re.* (str.to_re "::"))) (re.++ (re.* (re.union (str.to_re ";;") (str.to_re "<"))) (re.++ (re.* (re.union (str.to_re "=") (str.to_re ">>>"))) (re.++ (re.+ (re.+ (str.to_re "???"))) (re.++ (re.* (re.union (str.to_re "@@@") (str.to_re "["))) (re.++ (re.union (re.+ (str.to_re "\\\\")) (re.+ (str.to_re "]"))) (re.++ (re.* (re.+ (str.to_re "^"))) (re.++ (re.+ (re.union (str.to_re "_") (str.to_re "`"))) (re.++ (re.* (re.union (str.to_re "{{") (str.to_re "||"))) (re.++ (re.* (re.+ (str.to_re "}}"))) (re.++ (re.* (re.+ (str.to_re "~~"))) (re.++ (re.* (re.union (str.to_re "00") (str.to_re "111"))) (re.++ (re.union (re.* (str.to_re "22")) (re.* (str.to_re "33"))) (re.++ (re.* (re.* (str.to_re "4"))) (re.++ (re.union (re.* (str.to_re "555")) (re.union (str.to_re "6") (str.to_re "7"))) (re.++ (re.* (re.union (str.to_re "8") (str.to_re "9"))) (re.++ (re.+ (re.+ (str.to_re "a"))) (re.++ (re.union (re.union (str.to_re "bbb") (str.to_re "c")) (re.* (str.to_re "dd"))) (re.++ (re.* (re.* (str.to_re "ee"))) (re.++ (re.union (re.+ (str.to_re "fff")) (re.* (str.to_re "gg"))) (re.++ (re.union (re.* (str.to_re "hh")) (re.* (str.to_re "iii"))) (re.++ (re.+ (re.+ (str.to_re "j"))) (re.++ (re.+ (re.union (str.to_re "kk") (str.to_re "l"))) (re.++ (re.union (re.* (str.to_re "mmm")) (re.union (str.to_re "n") (str.to_re "oo"))) (re.++ (re.union (re.union (str.to_re "ppp") (str.to_re "qqq")) (re.* (str.to_re "r"))) (re.++ (re.union (re.+ (str.to_re "ss")) (re.+ (str.to_re "ttt"))) (re.* (re.* (str.to_re "uuu")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
