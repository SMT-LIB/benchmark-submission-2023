(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "000"))) (re.++ (re.union (re.* (str.to_re "1")) (re.* (str.to_re "2"))) (re.++ (re.+ (re.+ (str.to_re "33"))) (re.++ (re.+ (re.* (str.to_re "444"))) (re.++ (re.union (re.+ (str.to_re "55")) (re.union (str.to_re "66") (str.to_re "7"))) (re.++ (re.* (re.* (str.to_re "888"))) (re.++ (re.+ (re.+ (str.to_re "9"))) (re.++ (re.union (re.union (str.to_re "aa") (str.to_re "bb")) (re.* (str.to_re "cc"))) (re.++ (re.union (re.+ (str.to_re "dd")) (re.* (str.to_re "ee"))) (re.++ (re.union (re.+ (str.to_re "ff")) (re.+ (str.to_re "ggg"))) (re.++ (re.union (re.union (str.to_re "hhh") (str.to_re "ii")) (re.+ (str.to_re "jj"))) (re.++ (re.* (re.* (str.to_re "k"))) (re.++ (re.union (re.+ (str.to_re "l")) (re.union (str.to_re "mm") (str.to_re "nn"))) (re.++ (re.* (re.+ (str.to_re "o"))) (re.++ (re.union (re.* (str.to_re "p")) (re.+ (str.to_re "q"))) (re.++ (re.union (re.union (str.to_re "r") (str.to_re "ss")) (re.union (str.to_re "t") (str.to_re "uu"))) (re.++ (re.* (re.+ (str.to_re "vv"))) (re.++ (re.+ (re.+ (str.to_re "www"))) (re.++ (re.+ (re.union (str.to_re "xx") (str.to_re "yy"))) (re.++ (re.* (re.* (str.to_re "zz"))) (re.++ (re.+ (re.union (str.to_re "AA") (str.to_re "BBB"))) (re.++ (re.* (re.union (str.to_re "CC") (str.to_re "DD"))) (re.++ (re.union (re.+ (str.to_re "E")) (re.* (str.to_re "F"))) (re.++ (re.+ (re.* (str.to_re "G"))) (re.++ (re.+ (re.* (str.to_re "HHH"))) (re.++ (re.union (re.* (str.to_re "III")) (re.+ (str.to_re "J"))) (re.++ (re.+ (re.* (str.to_re "KKK"))) (re.++ (re.union (re.* (str.to_re "L")) (re.+ (str.to_re "MMM"))) (re.++ (re.+ (re.+ (str.to_re "NN"))) (re.++ (re.* (re.union (str.to_re "OO") (str.to_re "PPP"))) (re.++ (re.* (re.union (str.to_re "QQ") (str.to_re "RRR"))) (re.++ (re.+ (re.union (str.to_re "SS") (str.to_re "TT"))) (re.++ (re.+ (re.* (str.to_re "UU"))) (re.++ (re.+ (re.+ (str.to_re "VV"))) (re.++ (re.+ (re.+ (str.to_re "WWW"))) (re.++ (re.union (re.+ (str.to_re "XXX")) (re.+ (str.to_re "Y"))) (re.++ (re.+ (re.+ (str.to_re "ZZ"))) (re.++ (re.union (re.union (str.to_re "!!") (str.to_re """")) (re.union (str.to_re "##") (str.to_re "$$$"))) (re.++ (re.union (re.+ (str.to_re "%%")) (re.union (str.to_re "&&") (str.to_re "'"))) (re.++ (re.* (re.union (str.to_re "(((") (str.to_re "))"))) (re.++ (re.* (re.union (str.to_re "*") (str.to_re "+"))) (re.++ (re.+ (re.+ (str.to_re ","))) (re.* (re.* (str.to_re "---")))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
