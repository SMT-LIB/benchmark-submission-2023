(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "00")) (re.union (str.to_re "111") (str.to_re "222"))) (re.++ (re.+ (re.+ (str.to_re "33"))) (re.++ (re.+ (re.+ (str.to_re "444"))) (re.++ (re.* (re.+ (str.to_re "55"))) (re.++ (re.union (re.+ (str.to_re "666")) (re.union (str.to_re "77") (str.to_re "888"))) (re.++ (re.* (re.* (str.to_re "999"))) (re.++ (re.+ (re.* (str.to_re "aaa"))) (re.++ (re.+ (re.union (str.to_re "b") (str.to_re "cc"))) (re.++ (re.+ (re.union (str.to_re "d") (str.to_re "eee"))) (re.++ (re.+ (re.+ (str.to_re "ff"))) (re.++ (re.union (re.* (str.to_re "g")) (re.+ (str.to_re "h"))) (re.++ (re.union (re.* (str.to_re "ii")) (re.+ (str.to_re "jjj"))) (re.++ (re.union (re.* (str.to_re "kk")) (re.* (str.to_re "ll"))) (re.++ (re.+ (re.union (str.to_re "mm") (str.to_re "nn"))) (re.++ (re.+ (re.union (str.to_re "o") (str.to_re "p"))) (re.++ (re.+ (re.+ (str.to_re "qqq"))) (re.++ (re.union (re.* (str.to_re "rrr")) (re.+ (str.to_re "ss"))) (re.++ (re.+ (re.+ (str.to_re "tt"))) (re.++ (re.+ (re.* (str.to_re "uuu"))) (re.++ (re.* (re.* (str.to_re "vv"))) (re.++ (re.union (re.union (str.to_re "www") (str.to_re "x")) (re.+ (str.to_re "yyy"))) (re.++ (re.* (re.* (str.to_re "z"))) (re.++ (re.+ (re.+ (str.to_re "AA"))) (re.++ (re.* (re.* (str.to_re "BBB"))) (re.++ (re.* (re.union (str.to_re "C") (str.to_re "DDD"))) (re.++ (re.* (re.+ (str.to_re "E"))) (re.++ (re.+ (re.* (str.to_re "FF"))) (re.++ (re.* (re.* (str.to_re "G"))) (re.++ (re.* (re.+ (str.to_re "HH"))) (re.++ (re.union (re.union (str.to_re "I") (str.to_re "JJ")) (re.union (str.to_re "KKK") (str.to_re "LLL"))) (re.++ (re.union (re.union (str.to_re "M") (str.to_re "NNN")) (re.union (str.to_re "OOO") (str.to_re "PPP"))) (re.++ (re.union (re.union (str.to_re "QQ") (str.to_re "R")) (re.union (str.to_re "SSS") (str.to_re "TTT"))) (re.++ (re.union (re.+ (str.to_re "UUU")) (re.+ (str.to_re "VVV"))) (re.++ (re.* (re.+ (str.to_re "WWW"))) (re.++ (re.+ (re.union (str.to_re "XXX") (str.to_re "YY"))) (re.++ (re.* (re.union (str.to_re "ZZ") (str.to_re "!!"))) (re.++ (re.* (re.union (str.to_re """""""") (str.to_re "###"))) (re.++ (re.union (re.union (str.to_re "$") (str.to_re "%")) (re.union (str.to_re "&&&") (str.to_re "'''"))) (re.++ (re.* (re.+ (str.to_re "("))) (re.++ (re.+ (re.+ (str.to_re "))"))) (re.++ (re.union (re.+ (str.to_re "**")) (re.union (str.to_re "+") (str.to_re ",,,"))) (re.++ (re.union (re.* (str.to_re "---")) (re.union (str.to_re ".") (str.to_re "///"))) (re.++ (re.+ (re.union (str.to_re ":") (str.to_re ";;"))) (re.++ (re.+ (re.+ (str.to_re "<<<"))) (re.++ (re.* (re.* (str.to_re "=="))) (re.++ (re.union (re.+ (str.to_re ">>>")) (re.union (str.to_re "??") (str.to_re "@"))) (re.++ (re.union (re.+ (str.to_re "[[[")) (re.union (str.to_re "\\\\") (str.to_re "]]]"))) (re.++ (re.union (re.* (str.to_re "^^")) (re.union (str.to_re "__") (str.to_re "`"))) (re.++ (re.union (re.union (str.to_re "{{{") (str.to_re "|||")) (re.+ (str.to_re "}}"))) (re.++ (re.union (re.union (str.to_re "~") (str.to_re "000")) (re.union (str.to_re "11") (str.to_re "22"))) (re.++ (re.+ (re.+ (str.to_re "333"))) (re.++ (re.union (re.+ (str.to_re "444")) (re.union (str.to_re "5") (str.to_re "6"))) (re.++ (re.* (re.* (str.to_re "777"))) (re.++ (re.* (re.+ (str.to_re "888"))) (re.++ (re.+ (re.* (str.to_re "999"))) (re.++ (re.union (re.* (str.to_re "aa")) (re.+ (str.to_re "b"))) (re.++ (re.union (re.union (str.to_re "cc") (str.to_re "ddd")) (re.+ (str.to_re "ee"))) (re.++ (re.union (re.+ (str.to_re "ff")) (re.+ (str.to_re "ggg"))) (re.++ (re.union (re.+ (str.to_re "hh")) (re.+ (str.to_re "i"))) (re.++ (re.* (re.* (str.to_re "jj"))) (re.++ (re.+ (re.union (str.to_re "kk") (str.to_re "lll"))) (re.++ (re.union (re.union (str.to_re "m") (str.to_re "nnn")) (re.+ (str.to_re "oo"))) (re.++ (re.+ (re.* (str.to_re "p"))) (re.++ (re.union (re.+ (str.to_re "qqq")) (re.+ (str.to_re "r"))) (re.++ (re.* (re.* (str.to_re "sss"))) (re.++ (re.union (re.+ (str.to_re "t")) (re.union (str.to_re "uu") (str.to_re "vvv"))) (re.++ (re.union (re.* (str.to_re "w")) (re.+ (str.to_re "x"))) (re.++ (re.* (re.* (str.to_re "yyy"))) (re.++ (re.* (re.union (str.to_re "z") (str.to_re "AAA"))) (re.++ (re.* (re.union (str.to_re "B") (str.to_re "CCC"))) (re.++ (re.* (re.+ (str.to_re "D"))) (re.++ (re.+ (re.union (str.to_re "EE") (str.to_re "F"))) (re.++ (re.* (re.+ (str.to_re "G"))) (re.++ (re.+ (re.union (str.to_re "HHH") (str.to_re "I"))) (re.++ (re.+ (re.union (str.to_re "JJJ") (str.to_re "KKK"))) (re.++ (re.union (re.union (str.to_re "LLL") (str.to_re "MM")) (re.+ (str.to_re "N"))) (re.++ (re.+ (re.* (str.to_re "OOO"))) (re.++ (re.+ (re.union (str.to_re "PP") (str.to_re "QQ"))) (re.++ (re.* (re.+ (str.to_re "RR"))) (re.++ (re.+ (re.union (str.to_re "SSS") (str.to_re "TT"))) (re.++ (re.* (re.* (str.to_re "UUU"))) (re.++ (re.+ (re.union (str.to_re "VVV") (str.to_re "WW"))) (re.++ (re.+ (re.union (str.to_re "X") (str.to_re "YYY"))) (re.++ (re.+ (re.+ (str.to_re "Z"))) (re.++ (re.* (re.+ (str.to_re "!"))) (re.++ (re.union (re.+ (str.to_re """")) (re.union (str.to_re "#") (str.to_re "$"))) (re.++ (re.+ (re.union (str.to_re "%%") (str.to_re "&&"))) (re.++ (re.union (re.union (str.to_re "''") (str.to_re "((")) (re.* (str.to_re ")"))) (re.++ (re.union (re.+ (str.to_re "*")) (re.+ (str.to_re "+++"))) (re.++ (re.+ (re.+ (str.to_re ","))) (re.++ (re.+ (re.union (str.to_re "--") (str.to_re "."))) (re.* (re.+ (str.to_re "///"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
