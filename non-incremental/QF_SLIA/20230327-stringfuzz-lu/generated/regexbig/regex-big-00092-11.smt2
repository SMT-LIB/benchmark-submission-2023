(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (str.to_re "000") (str.to_re "111")) (re.+ (str.to_re "22"))) (re.++ (re.* (re.union (str.to_re "3") (str.to_re "4"))) (re.++ (re.* (re.+ (str.to_re "55"))) (re.++ (re.+ (re.* (str.to_re "666"))) (re.++ (re.* (re.* (str.to_re "77"))) (re.++ (re.union (re.union (str.to_re "88") (str.to_re "999")) (re.* (str.to_re "aaa"))) (re.++ (re.* (re.union (str.to_re "bb") (str.to_re "cc"))) (re.++ (re.+ (re.union (str.to_re "d") (str.to_re "ee"))) (re.++ (re.* (re.* (str.to_re "f"))) (re.++ (re.union (re.* (str.to_re "gg")) (re.union (str.to_re "hh") (str.to_re "i"))) (re.++ (re.* (re.* (str.to_re "jj"))) (re.++ (re.+ (re.+ (str.to_re "kkk"))) (re.++ (re.+ (re.* (str.to_re "lll"))) (re.++ (re.+ (re.union (str.to_re "mmm") (str.to_re "nn"))) (re.++ (re.* (re.* (str.to_re "oo"))) (re.++ (re.* (re.* (str.to_re "p"))) (re.++ (re.union (re.union (str.to_re "qqq") (str.to_re "rr")) (re.union (str.to_re "sss") (str.to_re "t"))) (re.++ (re.union (re.union (str.to_re "u") (str.to_re "v")) (re.* (str.to_re "ww"))) (re.++ (re.+ (re.union (str.to_re "xxx") (str.to_re "y"))) (re.++ (re.+ (re.union (str.to_re "zzz") (str.to_re "A"))) (re.++ (re.union (re.+ (str.to_re "BBB")) (re.* (str.to_re "CC"))) (re.++ (re.* (re.* (str.to_re "D"))) (re.++ (re.union (re.union (str.to_re "EE") (str.to_re "FF")) (re.* (str.to_re "GGG"))) (re.++ (re.* (re.union (str.to_re "H") (str.to_re "III"))) (re.++ (re.+ (re.+ (str.to_re "J"))) (re.++ (re.+ (re.* (str.to_re "KK"))) (re.++ (re.* (re.+ (str.to_re "L"))) (re.++ (re.union (re.* (str.to_re "M")) (re.* (str.to_re "NNN"))) (re.++ (re.union (re.union (str.to_re "OOO") (str.to_re "P")) (re.union (str.to_re "QQ") (str.to_re "R"))) (re.++ (re.union (re.* (str.to_re "S")) (re.+ (str.to_re "T"))) (re.++ (re.+ (re.* (str.to_re "U"))) (re.++ (re.+ (re.* (str.to_re "VV"))) (re.++ (re.union (re.* (str.to_re "WWW")) (re.union (str.to_re "XXX") (str.to_re "YYY"))) (re.++ (re.+ (re.* (str.to_re "Z"))) (re.++ (re.union (re.* (str.to_re "!!!")) (re.* (str.to_re """"))) (re.++ (re.* (re.union (str.to_re "#") (str.to_re "$"))) (re.++ (re.* (re.* (str.to_re "%"))) (re.++ (re.+ (re.* (str.to_re "&&&"))) (re.++ (re.union (re.+ (str.to_re "''")) (re.* (str.to_re "((("))) (re.++ (re.* (re.* (str.to_re ")"))) (re.++ (re.+ (re.union (str.to_re "**") (str.to_re "+"))) (re.++ (re.union (re.+ (str.to_re ",,,")) (re.+ (str.to_re "--"))) (re.++ (re.union (re.+ (str.to_re "...")) (re.union (str.to_re "///") (str.to_re "::"))) (re.++ (re.* (re.union (str.to_re ";") (str.to_re "<"))) (re.++ (re.union (re.* (str.to_re "==")) (re.* (str.to_re ">"))) (re.++ (re.union (re.* (str.to_re "?")) (re.union (str.to_re "@@@") (str.to_re "[["))) (re.++ (re.* (re.union (str.to_re "\\\\\\") (str.to_re "]"))) (re.++ (re.+ (re.* (str.to_re "^^^"))) (re.++ (re.* (re.* (str.to_re "_"))) (re.++ (re.+ (re.union (str.to_re "``") (str.to_re "{{"))) (re.++ (re.* (re.+ (str.to_re "|"))) (re.++ (re.union (re.+ (str.to_re "}}}")) (re.+ (str.to_re "~~"))) (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.+ (re.* (str.to_re "1"))) (re.++ (re.* (re.union (str.to_re "22") (str.to_re "333"))) (re.++ (re.* (re.union (str.to_re "444") (str.to_re "555"))) (re.++ (re.* (re.* (str.to_re "6"))) (re.++ (re.* (re.+ (str.to_re "77"))) (re.++ (re.+ (re.* (str.to_re "8"))) (re.++ (re.+ (re.+ (str.to_re "999"))) (re.++ (re.+ (re.* (str.to_re "a"))) (re.++ (re.+ (re.union (str.to_re "bbb") (str.to_re "ccc"))) (re.++ (re.* (re.* (str.to_re "ddd"))) (re.++ (re.+ (re.+ (str.to_re "eee"))) (re.++ (re.+ (re.* (str.to_re "fff"))) (re.++ (re.* (re.+ (str.to_re "gg"))) (re.++ (re.* (re.* (str.to_re "hh"))) (re.++ (re.+ (re.union (str.to_re "iii") (str.to_re "j"))) (re.++ (re.* (re.union (str.to_re "k") (str.to_re "l"))) (re.++ (re.union (re.union (str.to_re "mm") (str.to_re "nnn")) (re.union (str.to_re "o") (str.to_re "ppp"))) (re.++ (re.union (re.+ (str.to_re "qqq")) (re.* (str.to_re "rr"))) (re.++ (re.+ (re.* (str.to_re "s"))) (re.++ (re.* (re.* (str.to_re "t"))) (re.++ (re.+ (re.union (str.to_re "uu") (str.to_re "v"))) (re.++ (re.+ (re.union (str.to_re "w") (str.to_re "x"))) (re.++ (re.union (re.union (str.to_re "y") (str.to_re "zz")) (re.union (str.to_re "A") (str.to_re "BBB"))) (re.++ (re.* (re.+ (str.to_re "CCC"))) (re.++ (re.union (re.+ (str.to_re "DD")) (re.union (str.to_re "E") (str.to_re "F"))) (re.++ (re.+ (re.* (str.to_re "GGG"))) (re.++ (re.* (re.* (str.to_re "HHH"))) (re.++ (re.+ (re.union (str.to_re "III") (str.to_re "JJJ"))) (re.++ (re.+ (re.union (str.to_re "KKK") (str.to_re "L"))) (re.++ (re.* (re.union (str.to_re "MM") (str.to_re "NN"))) (re.++ (re.* (re.* (str.to_re "OO"))) (re.++ (re.+ (re.* (str.to_re "PP"))) (re.++ (re.union (re.* (str.to_re "QQQ")) (re.+ (str.to_re "RRR"))) (re.++ (re.* (re.union (str.to_re "S") (str.to_re "T"))) (re.++ (re.+ (re.+ (str.to_re "U"))) (re.++ (re.* (re.* (str.to_re "V"))) (re.++ (re.* (re.* (str.to_re "W"))) (re.++ (re.+ (re.+ (str.to_re "XX"))) (re.+ (re.* (str.to_re "YY"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
