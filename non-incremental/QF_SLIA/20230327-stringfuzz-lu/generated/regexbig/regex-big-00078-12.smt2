(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "0") (str.to_re "11"))) (re.++ (re.* (re.* (str.to_re "222"))) (re.++ (re.+ (re.* (str.to_re "333"))) (re.++ (re.union (re.union (str.to_re "44") (str.to_re "55")) (re.+ (str.to_re "6"))) (re.++ (re.+ (re.+ (str.to_re "777"))) (re.++ (re.+ (re.* (str.to_re "88"))) (re.++ (re.* (re.* (str.to_re "99"))) (re.++ (re.+ (re.* (str.to_re "aaa"))) (re.++ (re.union (re.* (str.to_re "bbb")) (re.* (str.to_re "c"))) (re.++ (re.union (re.union (str.to_re "dd") (str.to_re "e")) (re.union (str.to_re "fff") (str.to_re "g"))) (re.++ (re.* (re.* (str.to_re "hhh"))) (re.++ (re.union (re.+ (str.to_re "iii")) (re.+ (str.to_re "j"))) (re.++ (re.+ (re.union (str.to_re "k") (str.to_re "l"))) (re.++ (re.+ (re.union (str.to_re "mm") (str.to_re "n"))) (re.++ (re.union (re.+ (str.to_re "o")) (re.+ (str.to_re "p"))) (re.++ (re.* (re.union (str.to_re "qqq") (str.to_re "r"))) (re.++ (re.union (re.union (str.to_re "sss") (str.to_re "ttt")) (re.+ (str.to_re "uuu"))) (re.++ (re.+ (re.union (str.to_re "v") (str.to_re "www"))) (re.++ (re.union (re.* (str.to_re "x")) (re.union (str.to_re "y") (str.to_re "zz"))) (re.++ (re.union (re.+ (str.to_re "AAA")) (re.* (str.to_re "B"))) (re.++ (re.+ (re.* (str.to_re "CC"))) (re.++ (re.* (re.* (str.to_re "DDD"))) (re.++ (re.union (re.+ (str.to_re "EEE")) (re.* (str.to_re "FF"))) (re.++ (re.union (re.+ (str.to_re "GGG")) (re.* (str.to_re "HHH"))) (re.++ (re.* (re.+ (str.to_re "I"))) (re.++ (re.union (re.* (str.to_re "JJ")) (re.union (str.to_re "KK") (str.to_re "LLL"))) (re.++ (re.+ (re.union (str.to_re "MMM") (str.to_re "NNN"))) (re.++ (re.* (re.* (str.to_re "O"))) (re.++ (re.+ (re.union (str.to_re "PP") (str.to_re "QQQ"))) (re.++ (re.union (re.* (str.to_re "RR")) (re.* (str.to_re "SSS"))) (re.++ (re.* (re.union (str.to_re "TTT") (str.to_re "U"))) (re.++ (re.* (re.union (str.to_re "VVV") (str.to_re "WW"))) (re.++ (re.union (re.union (str.to_re "X") (str.to_re "YYY")) (re.+ (str.to_re "Z"))) (re.++ (re.union (re.union (str.to_re "!!") (str.to_re """")) (re.+ (str.to_re "##"))) (re.++ (re.* (re.+ (str.to_re "$"))) (re.++ (re.union (re.* (str.to_re "%%%")) (re.+ (str.to_re "&&&"))) (re.++ (re.+ (re.union (str.to_re "''") (str.to_re "((("))) (re.++ (re.union (re.union (str.to_re "))") (str.to_re "***")) (re.+ (str.to_re "+++"))) (re.++ (re.+ (re.union (str.to_re ",,") (str.to_re "-"))) (re.++ (re.union (re.* (str.to_re ".")) (re.* (str.to_re "//"))) (re.++ (re.union (re.union (str.to_re ":::") (str.to_re ";;;")) (re.union (str.to_re "<<") (str.to_re "==="))) (re.++ (re.* (re.union (str.to_re ">>>") (str.to_re "?"))) (re.++ (re.union (re.* (str.to_re "@@@")) (re.* (str.to_re "["))) (re.++ (re.union (re.+ (str.to_re "\\\\\\")) (re.+ (str.to_re "]]"))) (re.++ (re.* (re.* (str.to_re "^^"))) (re.++ (re.+ (re.+ (str.to_re "_"))) (re.++ (re.* (re.union (str.to_re "`") (str.to_re "{"))) (re.++ (re.+ (re.union (str.to_re "|") (str.to_re "}}"))) (re.++ (re.union (re.* (str.to_re "~")) (re.+ (str.to_re "0"))) (re.++ (re.union (re.+ (str.to_re "11")) (re.* (str.to_re "222"))) (re.++ (re.+ (re.* (str.to_re "333"))) (re.++ (re.* (re.union (str.to_re "44") (str.to_re "55"))) (re.++ (re.+ (re.* (str.to_re "6"))) (re.++ (re.* (re.* (str.to_re "77"))) (re.++ (re.* (re.+ (str.to_re "8"))) (re.++ (re.union (re.union (str.to_re "99") (str.to_re "aaa")) (re.* (str.to_re "b"))) (re.++ (re.union (re.* (str.to_re "cc")) (re.* (str.to_re "ddd"))) (re.++ (re.* (re.* (str.to_re "ee"))) (re.++ (re.union (re.* (str.to_re "fff")) (re.+ (str.to_re "ggg"))) (re.++ (re.+ (re.* (str.to_re "hh"))) (re.++ (re.+ (re.+ (str.to_re "iii"))) (re.++ (re.+ (re.* (str.to_re "jj"))) (re.++ (re.union (re.* (str.to_re "k")) (re.* (str.to_re "lll"))) (re.++ (re.+ (re.union (str.to_re "mmm") (str.to_re "nn"))) (re.++ (re.union (re.* (str.to_re "oo")) (re.union (str.to_re "pp") (str.to_re "qqq"))) (re.++ (re.+ (re.+ (str.to_re "r"))) (re.++ (re.* (re.* (str.to_re "ss"))) (re.++ (re.+ (re.union (str.to_re "t") (str.to_re "u"))) (re.++ (re.* (re.union (str.to_re "vvv") (str.to_re "ww"))) (re.++ (re.* (re.* (str.to_re "xx"))) (re.++ (re.* (re.+ (str.to_re "yy"))) (re.++ (re.* (re.+ (str.to_re "zzz"))) (re.++ (re.+ (re.union (str.to_re "A") (str.to_re "B"))) (re.++ (re.union (re.* (str.to_re "C")) (re.* (str.to_re "DDD"))) (re.++ (re.* (re.union (str.to_re "EEE") (str.to_re "FFF"))) (re.++ (re.union (re.+ (str.to_re "GGG")) (re.union (str.to_re "H") (str.to_re "III"))) (re.++ (re.union (re.+ (str.to_re "J")) (re.+ (str.to_re "KKK"))) (re.+ (re.+ (str.to_re "L"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
