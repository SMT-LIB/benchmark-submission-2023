(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (str.to_re "00"))) (re.++ (re.+ (re.union (str.to_re "1") (str.to_re "2"))) (re.++ (re.* (re.* (str.to_re "33"))) (re.++ (re.+ (re.* (str.to_re "4"))) (re.++ (re.union (re.* (str.to_re "5")) (re.union (str.to_re "666") (str.to_re "777"))) (re.++ (re.* (re.* (str.to_re "888"))) (re.++ (re.* (re.union (str.to_re "9") (str.to_re "aa"))) (re.++ (re.union (re.union (str.to_re "bb") (str.to_re "ccc")) (re.* (str.to_re "d"))) (re.++ (re.* (re.+ (str.to_re "e"))) (re.++ (re.union (re.* (str.to_re "fff")) (re.union (str.to_re "ggg") (str.to_re "hhh"))) (re.++ (re.+ (re.+ (str.to_re "iii"))) (re.++ (re.union (re.union (str.to_re "j") (str.to_re "k")) (re.+ (str.to_re "lll"))) (re.++ (re.+ (re.union (str.to_re "mm") (str.to_re "nn"))) (re.++ (re.union (re.union (str.to_re "oo") (str.to_re "pp")) (re.* (str.to_re "q"))) (re.++ (re.union (re.* (str.to_re "r")) (re.+ (str.to_re "sss"))) (re.++ (re.union (re.+ (str.to_re "ttt")) (re.union (str.to_re "uuu") (str.to_re "vvv"))) (re.++ (re.union (re.union (str.to_re "www") (str.to_re "xx")) (re.+ (str.to_re "yy"))) (re.++ (re.* (re.union (str.to_re "z") (str.to_re "AA"))) (re.++ (re.* (re.+ (str.to_re "B"))) (re.++ (re.* (re.+ (str.to_re "C"))) (re.++ (re.* (re.+ (str.to_re "DD"))) (re.++ (re.* (re.union (str.to_re "EEE") (str.to_re "FF"))) (re.++ (re.* (re.* (str.to_re "GG"))) (re.++ (re.* (re.union (str.to_re "H") (str.to_re "II"))) (re.++ (re.* (re.* (str.to_re "JJ"))) (re.++ (re.union (re.* (str.to_re "KKK")) (re.* (str.to_re "L"))) (re.++ (re.+ (re.* (str.to_re "M"))) (re.++ (re.union (re.+ (str.to_re "NNN")) (re.* (str.to_re "O"))) (re.++ (re.* (re.union (str.to_re "P") (str.to_re "QQ"))) (re.++ (re.* (re.union (str.to_re "RRR") (str.to_re "S"))) (re.++ (re.union (re.* (str.to_re "TT")) (re.union (str.to_re "UU") (str.to_re "V"))) (re.++ (re.union (re.* (str.to_re "W")) (re.+ (str.to_re "X"))) (re.++ (re.* (re.* (str.to_re "YYY"))) (re.++ (re.+ (re.+ (str.to_re "Z"))) (re.++ (re.+ (re.union (str.to_re "!!") (str.to_re """"""""))) (re.++ (re.+ (re.+ (str.to_re "#"))) (re.++ (re.union (re.* (str.to_re "$$")) (re.* (str.to_re "%%%"))) (re.++ (re.union (re.* (str.to_re "&&&")) (re.union (str.to_re "'") (str.to_re "("))) (re.++ (re.+ (re.+ (str.to_re "))"))) (re.++ (re.union (re.+ (str.to_re "***")) (re.+ (str.to_re "+"))) (re.++ (re.* (re.* (str.to_re ",,,"))) (re.++ (re.+ (re.+ (str.to_re "-"))) (re.++ (re.union (re.* (str.to_re "..")) (re.* (str.to_re "///"))) (re.++ (re.* (re.+ (str.to_re ":::"))) (re.++ (re.+ (re.* (str.to_re ";"))) (re.++ (re.union (re.* (str.to_re "<<")) (re.+ (str.to_re "=="))) (re.++ (re.* (re.* (str.to_re ">"))) (re.++ (re.+ (re.* (str.to_re "??"))) (re.++ (re.* (re.union (str.to_re "@") (str.to_re "[["))) (re.++ (re.* (re.union (str.to_re "\\\\\\") (str.to_re "]"))) (re.++ (re.* (re.* (str.to_re "^^^"))) (re.++ (re.union (re.* (str.to_re "__")) (re.union (str.to_re "`") (str.to_re "{"))) (re.++ (re.+ (re.* (str.to_re "|"))) (re.++ (re.* (re.+ (str.to_re "}"))) (re.++ (re.* (re.* (str.to_re "~~"))) (re.++ (re.* (re.* (str.to_re "0"))) (re.++ (re.* (re.union (str.to_re "1") (str.to_re "222"))) (re.++ (re.+ (re.union (str.to_re "3") (str.to_re "44"))) (re.++ (re.union (re.+ (str.to_re "55")) (re.+ (str.to_re "66"))) (re.++ (re.* (re.union (str.to_re "7") (str.to_re "8"))) (re.++ (re.* (re.+ (str.to_re "9"))) (re.++ (re.+ (re.+ (str.to_re "aa"))) (re.++ (re.union (re.+ (str.to_re "bb")) (re.* (str.to_re "c"))) (re.++ (re.* (re.* (str.to_re "dd"))) (re.++ (re.* (re.union (str.to_re "eee") (str.to_re "ff"))) (re.++ (re.union (re.+ (str.to_re "gg")) (re.+ (str.to_re "h"))) (re.++ (re.* (re.+ (str.to_re "iii"))) (re.++ (re.+ (re.* (str.to_re "jjj"))) (re.++ (re.+ (re.* (str.to_re "k"))) (re.++ (re.union (re.+ (str.to_re "lll")) (re.union (str.to_re "m") (str.to_re "nn"))) (re.+ (re.+ (str.to_re "ooo")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
