(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.* (re.+ (str.to_re "1"))) (re.++ (re.* (re.union (str.to_re "22") (str.to_re "3"))) (re.++ (re.union (re.* (str.to_re "4")) (re.* (str.to_re "5"))) (re.++ (re.+ (re.+ (str.to_re "66"))) (re.++ (re.+ (re.union (str.to_re "777") (str.to_re "888"))) (re.++ (re.* (re.+ (str.to_re "9"))) (re.++ (re.union (re.+ (str.to_re "aa")) (re.union (str.to_re "b") (str.to_re "c"))) (re.++ (re.+ (re.union (str.to_re "d") (str.to_re "ee"))) (re.++ (re.+ (re.* (str.to_re "f"))) (re.++ (re.+ (re.+ (str.to_re "gg"))) (re.++ (re.union (re.* (str.to_re "hhh")) (re.union (str.to_re "ii") (str.to_re "j"))) (re.++ (re.union (re.+ (str.to_re "kkk")) (re.+ (str.to_re "lll"))) (re.++ (re.+ (re.* (str.to_re "mm"))) (re.++ (re.* (re.+ (str.to_re "n"))) (re.++ (re.* (re.union (str.to_re "oo") (str.to_re "pp"))) (re.++ (re.* (re.+ (str.to_re "qqq"))) (re.++ (re.+ (re.union (str.to_re "rr") (str.to_re "s"))) (re.++ (re.union (re.* (str.to_re "ttt")) (re.* (str.to_re "uuu"))) (re.++ (re.+ (re.+ (str.to_re "vvv"))) (re.++ (re.union (re.union (str.to_re "ww") (str.to_re "xxx")) (re.* (str.to_re "yyy"))) (re.++ (re.* (re.union (str.to_re "z") (str.to_re "AAA"))) (re.++ (re.union (re.* (str.to_re "BBB")) (re.* (str.to_re "CCC"))) (re.++ (re.union (re.* (str.to_re "DDD")) (re.+ (str.to_re "EEE"))) (re.++ (re.+ (re.* (str.to_re "FFF"))) (re.++ (re.+ (re.* (str.to_re "GG"))) (re.++ (re.union (re.union (str.to_re "HHH") (str.to_re "III")) (re.+ (str.to_re "J"))) (re.++ (re.+ (re.+ (str.to_re "K"))) (re.++ (re.+ (re.union (str.to_re "LL") (str.to_re "M"))) (re.++ (re.* (re.+ (str.to_re "N"))) (re.++ (re.union (re.* (str.to_re "O")) (re.* (str.to_re "PP"))) (re.++ (re.union (re.+ (str.to_re "Q")) (re.* (str.to_re "R"))) (re.++ (re.* (re.+ (str.to_re "SS"))) (re.++ (re.union (re.union (str.to_re "TT") (str.to_re "UU")) (re.* (str.to_re "V"))) (re.++ (re.* (re.union (str.to_re "W") (str.to_re "X"))) (re.++ (re.* (re.union (str.to_re "YYY") (str.to_re "ZZ"))) (re.++ (re.+ (re.* (str.to_re "!!"))) (re.++ (re.* (re.+ (str.to_re """"""))) (re.++ (re.union (re.+ (str.to_re "###")) (re.* (str.to_re "$$$"))) (re.++ (re.union (re.* (str.to_re "%%%")) (re.union (str.to_re "&") (str.to_re "'''"))) (re.++ (re.union (re.* (str.to_re "((")) (re.* (str.to_re "))"))) (re.++ (re.union (re.* (str.to_re "*")) (re.+ (str.to_re "+"))) (re.++ (re.* (re.union (str.to_re ",") (str.to_re "-"))) (re.++ (re.+ (re.* (str.to_re ".."))) (re.++ (re.+ (re.union (str.to_re "///") (str.to_re ":"))) (re.++ (re.+ (re.* (str.to_re ";;;"))) (re.++ (re.* (re.union (str.to_re "<<") (str.to_re "==="))) (re.++ (re.union (re.* (str.to_re ">")) (re.union (str.to_re "?") (str.to_re "@@"))) (re.++ (re.+ (re.+ (str.to_re "[["))) (re.++ (re.* (re.+ (str.to_re "\\"))) (re.++ (re.union (re.+ (str.to_re "]]]")) (re.+ (str.to_re "^^"))) (re.++ (re.+ (re.+ (str.to_re "_"))) (re.++ (re.+ (re.* (str.to_re "`"))) (re.++ (re.union (re.union (str.to_re "{") (str.to_re "|||")) (re.+ (str.to_re "}}}"))) (re.++ (re.+ (re.* (str.to_re "~"))) (re.++ (re.+ (re.* (str.to_re "00"))) (re.++ (re.+ (re.+ (str.to_re "11"))) (re.++ (re.+ (re.union (str.to_re "22") (str.to_re "3"))) (re.++ (re.union (re.union (str.to_re "4") (str.to_re "555")) (re.+ (str.to_re "6"))) (re.++ (re.union (re.* (str.to_re "777")) (re.+ (str.to_re "8"))) (re.++ (re.union (re.+ (str.to_re "99")) (re.+ (str.to_re "a"))) (re.++ (re.* (re.+ (str.to_re "bbb"))) (re.++ (re.* (re.+ (str.to_re "cc"))) (re.++ (re.union (re.+ (str.to_re "ddd")) (re.* (str.to_re "eee"))) (re.++ (re.+ (re.union (str.to_re "f") (str.to_re "gg"))) (re.++ (re.* (re.+ (str.to_re "hhh"))) (re.++ (re.union (re.union (str.to_re "iii") (str.to_re "jjj")) (re.+ (str.to_re "kkk"))) (re.++ (re.* (re.* (str.to_re "lll"))) (re.++ (re.union (re.union (str.to_re "mmm") (str.to_re "nn")) (re.+ (str.to_re "o"))) (re.++ (re.union (re.+ (str.to_re "p")) (re.+ (str.to_re "q"))) (re.++ (re.+ (re.* (str.to_re "rr"))) (re.++ (re.+ (re.* (str.to_re "ss"))) (re.++ (re.+ (re.union (str.to_re "ttt") (str.to_re "u"))) (re.++ (re.union (re.union (str.to_re "vvv") (str.to_re "www")) (re.union (str.to_re "x") (str.to_re "y"))) (re.++ (re.union (re.+ (str.to_re "z")) (re.+ (str.to_re "AAA"))) (re.++ (re.union (re.* (str.to_re "BBB")) (re.* (str.to_re "CCC"))) (re.++ (re.* (re.+ (str.to_re "DDD"))) (re.++ (re.union (re.* (str.to_re "EE")) (re.* (str.to_re "FF"))) (re.++ (re.* (re.* (str.to_re "G"))) (re.++ (re.+ (re.union (str.to_re "HHH") (str.to_re "III"))) (re.++ (re.union (re.* (str.to_re "JJ")) (re.+ (str.to_re "K"))) (re.++ (re.+ (re.union (str.to_re "LL") (str.to_re "MM"))) (re.++ (re.+ (re.+ (str.to_re "NNN"))) (re.++ (re.* (re.+ (str.to_re "OO"))) (re.+ (re.* (str.to_re "PPP")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
