(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (str.to_re "000") (str.to_re "111")) (re.union (str.to_re "2") (str.to_re "3"))) (re.++ (re.union (re.union (str.to_re "44") (str.to_re "555")) (re.+ (str.to_re "66"))) (re.++ (re.* (re.* (str.to_re "7"))) (re.++ (re.+ (re.* (str.to_re "88"))) (re.++ (re.* (re.union (str.to_re "999") (str.to_re "aa"))) (re.++ (re.* (re.+ (str.to_re "bbb"))) (re.++ (re.+ (re.+ (str.to_re "ccc"))) (re.++ (re.union (re.+ (str.to_re "ddd")) (re.union (str.to_re "e") (str.to_re "f"))) (re.++ (re.union (re.* (str.to_re "gg")) (re.* (str.to_re "hh"))) (re.++ (re.union (re.union (str.to_re "i") (str.to_re "j")) (re.+ (str.to_re "kkk"))) (re.++ (re.+ (re.* (str.to_re "ll"))) (re.++ (re.union (re.+ (str.to_re "mmm")) (re.union (str.to_re "nn") (str.to_re "ooo"))) (re.++ (re.* (re.+ (str.to_re "ppp"))) (re.++ (re.+ (re.union (str.to_re "q") (str.to_re "rr"))) (re.++ (re.+ (re.+ (str.to_re "ss"))) (re.++ (re.union (re.+ (str.to_re "ttt")) (re.union (str.to_re "uuu") (str.to_re "vvv"))) (re.++ (re.* (re.* (str.to_re "ww"))) (re.++ (re.+ (re.union (str.to_re "x") (str.to_re "yyy"))) (re.++ (re.* (re.union (str.to_re "zz") (str.to_re "A"))) (re.++ (re.* (re.union (str.to_re "B") (str.to_re "CC"))) (re.++ (re.+ (re.+ (str.to_re "DDD"))) (re.++ (re.+ (re.* (str.to_re "EE"))) (re.++ (re.union (re.* (str.to_re "FF")) (re.+ (str.to_re "G"))) (re.++ (re.union (re.+ (str.to_re "HH")) (re.* (str.to_re "I"))) (re.++ (re.* (re.* (str.to_re "JJ"))) (re.++ (re.* (re.* (str.to_re "KK"))) (re.++ (re.union (re.* (str.to_re "LL")) (re.union (str.to_re "M") (str.to_re "NN"))) (re.++ (re.+ (re.union (str.to_re "OO") (str.to_re "P"))) (re.++ (re.* (re.* (str.to_re "QQ"))) (re.++ (re.+ (re.* (str.to_re "RR"))) (re.++ (re.union (re.+ (str.to_re "SS")) (re.* (str.to_re "TTT"))) (re.++ (re.* (re.* (str.to_re "UU"))) (re.++ (re.* (re.+ (str.to_re "V"))) (re.++ (re.* (re.union (str.to_re "WW") (str.to_re "XX"))) (re.++ (re.* (re.* (str.to_re "YY"))) (re.++ (re.union (re.* (str.to_re "ZZ")) (re.+ (str.to_re "!!"))) (re.++ (re.union (re.* (str.to_re """""""")) (re.union (str.to_re "#") (str.to_re "$"))) (re.++ (re.union (re.* (str.to_re "%")) (re.* (str.to_re "&&"))) (re.++ (re.* (re.+ (str.to_re "'"))) (re.++ (re.* (re.* (str.to_re "(("))) (re.++ (re.+ (re.+ (str.to_re "))"))) (re.++ (re.+ (re.+ (str.to_re "**"))) (re.++ (re.* (re.union (str.to_re "+") (str.to_re ",,"))) (re.++ (re.+ (re.* (str.to_re "--"))) (re.++ (re.+ (re.union (str.to_re "...") (str.to_re "/"))) (re.++ (re.union (re.* (str.to_re ":")) (re.+ (str.to_re ";;"))) (re.++ (re.+ (re.* (str.to_re "<<<"))) (re.++ (re.* (re.+ (str.to_re "==="))) (re.++ (re.* (re.+ (str.to_re ">>>"))) (re.++ (re.* (re.union (str.to_re "?") (str.to_re "@"))) (re.++ (re.* (re.union (str.to_re "[[") (str.to_re "\\\\"))) (re.++ (re.+ (re.+ (str.to_re "]]]"))) (re.++ (re.union (re.* (str.to_re "^")) (re.union (str.to_re "_") (str.to_re "```"))) (re.++ (re.* (re.+ (str.to_re "{"))) (re.++ (re.* (re.* (str.to_re "||"))) (re.++ (re.* (re.* (str.to_re "}"))) (re.++ (re.union (re.+ (str.to_re "~~~")) (re.* (str.to_re "00"))) (re.++ (re.union (re.+ (str.to_re "1")) (re.union (str.to_re "222") (str.to_re "33"))) (re.++ (re.union (re.* (str.to_re "44")) (re.* (str.to_re "555"))) (re.++ (re.union (re.* (str.to_re "666")) (re.+ (str.to_re "77"))) (re.++ (re.union (re.* (str.to_re "88")) (re.+ (str.to_re "9"))) (re.++ (re.+ (re.+ (str.to_re "aaa"))) (re.++ (re.union (re.* (str.to_re "bb")) (re.* (str.to_re "ccc"))) (re.++ (re.+ (re.union (str.to_re "dd") (str.to_re "e"))) (re.++ (re.* (re.union (str.to_re "ff") (str.to_re "g"))) (re.++ (re.* (re.* (str.to_re "hhh"))) (re.++ (re.* (re.* (str.to_re "ii"))) (re.++ (re.+ (re.union (str.to_re "jjj") (str.to_re "kk"))) (re.++ (re.+ (re.+ (str.to_re "l"))) (re.++ (re.union (re.* (str.to_re "mm")) (re.+ (str.to_re "nnn"))) (re.++ (re.union (re.+ (str.to_re "ooo")) (re.union (str.to_re "pp") (str.to_re "qq"))) (re.++ (re.* (re.union (str.to_re "r") (str.to_re "sss"))) (re.++ (re.+ (re.+ (str.to_re "ttt"))) (re.++ (re.+ (re.+ (str.to_re "uuu"))) (re.++ (re.+ (re.union (str.to_re "v") (str.to_re "ww"))) (re.++ (re.union (re.union (str.to_re "x") (str.to_re "yyy")) (re.+ (str.to_re "zz"))) (re.++ (re.union (re.* (str.to_re "A")) (re.* (str.to_re "B"))) (re.++ (re.union (re.* (str.to_re "CCC")) (re.+ (str.to_re "DDD"))) (re.++ (re.union (re.* (str.to_re "EE")) (re.+ (str.to_re "FFF"))) (re.++ (re.+ (re.* (str.to_re "GGG"))) (re.++ (re.+ (re.+ (str.to_re "HHH"))) (re.++ (re.union (re.+ (str.to_re "II")) (re.* (str.to_re "JJJ"))) (re.++ (re.* (re.* (str.to_re "KKK"))) (re.++ (re.+ (re.union (str.to_re "L") (str.to_re "M"))) (re.++ (re.+ (re.+ (str.to_re "NNN"))) (re.++ (re.union (re.* (str.to_re "O")) (re.* (str.to_re "PP"))) (re.++ (re.union (re.+ (str.to_re "QQQ")) (re.* (str.to_re "RR"))) (re.++ (re.union (re.* (str.to_re "SS")) (re.* (str.to_re "TT"))) (re.++ (re.+ (re.* (str.to_re "UUU"))) (re.++ (re.* (re.union (str.to_re "V") (str.to_re "WW"))) (re.++ (re.union (re.* (str.to_re "XX")) (re.union (str.to_re "YYY") (str.to_re "Z"))) (re.+ (re.+ (str.to_re "!!"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
