(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.union (str.to_re "0") (str.to_re "111"))) (re.++ (re.+ (re.* (str.to_re "22"))) (re.++ (re.union (re.union (str.to_re "33") (str.to_re "444")) (re.+ (str.to_re "5"))) (re.++ (re.+ (re.union (str.to_re "666") (str.to_re "77"))) (re.++ (re.* (re.* (str.to_re "888"))) (re.++ (re.union (re.* (str.to_re "99")) (re.+ (str.to_re "a"))) (re.++ (re.* (re.* (str.to_re "b"))) (re.++ (re.union (re.union (str.to_re "c") (str.to_re "d")) (re.+ (str.to_re "eee"))) (re.++ (re.* (re.* (str.to_re "fff"))) (re.++ (re.+ (re.union (str.to_re "g") (str.to_re "hh"))) (re.++ (re.* (re.union (str.to_re "ii") (str.to_re "jj"))) (re.++ (re.* (re.* (str.to_re "k"))) (re.++ (re.union (re.+ (str.to_re "l")) (re.* (str.to_re "mmm"))) (re.++ (re.+ (re.* (str.to_re "n"))) (re.++ (re.union (re.union (str.to_re "o") (str.to_re "ppp")) (re.union (str.to_re "qq") (str.to_re "rr"))) (re.++ (re.* (re.+ (str.to_re "ss"))) (re.++ (re.+ (re.union (str.to_re "t") (str.to_re "uuu"))) (re.++ (re.* (re.+ (str.to_re "v"))) (re.++ (re.+ (re.union (str.to_re "w") (str.to_re "x"))) (re.++ (re.union (re.* (str.to_re "yy")) (re.union (str.to_re "zzz") (str.to_re "AAA"))) (re.++ (re.* (re.union (str.to_re "B") (str.to_re "C"))) (re.++ (re.* (re.+ (str.to_re "D"))) (re.++ (re.union (re.+ (str.to_re "EE")) (re.* (str.to_re "F"))) (re.++ (re.* (re.* (str.to_re "G"))) (re.++ (re.+ (re.union (str.to_re "H") (str.to_re "III"))) (re.++ (re.* (re.+ (str.to_re "JJJ"))) (re.++ (re.+ (re.+ (str.to_re "KKK"))) (re.++ (re.+ (re.* (str.to_re "L"))) (re.++ (re.* (re.+ (str.to_re "MMM"))) (re.++ (re.union (re.* (str.to_re "NN")) (re.union (str.to_re "O") (str.to_re "PP"))) (re.++ (re.* (re.union (str.to_re "QQ") (str.to_re "R"))) (re.++ (re.+ (re.* (str.to_re "SS"))) (re.++ (re.union (re.union (str.to_re "TTT") (str.to_re "U")) (re.* (str.to_re "V"))) (re.++ (re.+ (re.union (str.to_re "W") (str.to_re "XXX"))) (re.++ (re.+ (re.union (str.to_re "Y") (str.to_re "ZZZ"))) (re.++ (re.+ (re.union (str.to_re "!!") (str.to_re """"))) (re.++ (re.+ (re.union (str.to_re "##") (str.to_re "$$$"))) (re.++ (re.* (re.+ (str.to_re "%"))) (re.++ (re.+ (re.+ (str.to_re "&"))) (re.++ (re.+ (re.+ (str.to_re "'''"))) (re.++ (re.* (re.+ (str.to_re "(("))) (re.++ (re.* (re.+ (str.to_re ")"))) (re.++ (re.union (re.+ (str.to_re "**")) (re.* (str.to_re "++"))) (re.++ (re.union (re.union (str.to_re ",") (str.to_re "--")) (re.* (str.to_re "..."))) (re.++ (re.union (re.union (str.to_re "//") (str.to_re "::")) (re.* (str.to_re ";;;"))) (re.++ (re.* (re.union (str.to_re "<") (str.to_re "=="))) (re.++ (re.+ (re.union (str.to_re ">>>") (str.to_re "???"))) (re.++ (re.union (re.+ (str.to_re "@")) (re.+ (str.to_re "[["))) (re.++ (re.* (re.+ (str.to_re "\\\\\\"))) (re.++ (re.* (re.union (str.to_re "]]") (str.to_re "^^^"))) (re.++ (re.+ (re.union (str.to_re "___") (str.to_re "`"))) (re.++ (re.* (re.+ (str.to_re "{"))) (re.++ (re.* (re.union (str.to_re "|||") (str.to_re "}}}"))) (re.++ (re.union (re.+ (str.to_re "~")) (re.+ (str.to_re "00"))) (re.++ (re.union (re.union (str.to_re "11") (str.to_re "2")) (re.union (str.to_re "3") (str.to_re "44"))) (re.++ (re.+ (re.+ (str.to_re "5"))) (re.++ (re.+ (re.+ (str.to_re "666"))) (re.++ (re.+ (re.union (str.to_re "7") (str.to_re "8"))) (re.++ (re.* (re.* (str.to_re "99"))) (re.++ (re.* (re.union (str.to_re "aa") (str.to_re "b"))) (re.++ (re.+ (re.* (str.to_re "ccc"))) (re.++ (re.+ (re.union (str.to_re "dd") (str.to_re "ee"))) (re.++ (re.union (re.union (str.to_re "f") (str.to_re "ggg")) (re.union (str.to_re "hh") (str.to_re "iii"))) (re.++ (re.+ (re.+ (str.to_re "jj"))) (re.++ (re.+ (re.+ (str.to_re "kkk"))) (re.++ (re.+ (re.union (str.to_re "ll") (str.to_re "m"))) (re.++ (re.union (re.* (str.to_re "nn")) (re.+ (str.to_re "ooo"))) (re.++ (re.+ (re.union (str.to_re "p") (str.to_re "qqq"))) (re.++ (re.+ (re.* (str.to_re "rr"))) (re.++ (re.+ (re.* (str.to_re "sss"))) (re.++ (re.union (re.+ (str.to_re "ttt")) (re.union (str.to_re "u") (str.to_re "v"))) (re.++ (re.union (re.union (str.to_re "w") (str.to_re "xxx")) (re.union (str.to_re "yy") (str.to_re "z"))) (re.++ (re.union (re.* (str.to_re "AA")) (re.* (str.to_re "BB"))) (re.++ (re.union (re.union (str.to_re "C") (str.to_re "DD")) (re.union (str.to_re "E") (str.to_re "F"))) (re.++ (re.union (re.* (str.to_re "GGG")) (re.* (str.to_re "H"))) (re.++ (re.union (re.+ (str.to_re "I")) (re.union (str.to_re "J") (str.to_re "K"))) (re.++ (re.+ (re.union (str.to_re "LLL") (str.to_re "MM"))) (re.++ (re.+ (re.+ (str.to_re "NN"))) (re.++ (re.* (re.+ (str.to_re "OO"))) (re.++ (re.union (re.union (str.to_re "P") (str.to_re "Q")) (re.+ (str.to_re "RR"))) (re.++ (re.+ (re.* (str.to_re "SS"))) (re.++ (re.+ (re.+ (str.to_re "TT"))) (re.++ (re.union (re.* (str.to_re "UU")) (re.union (str.to_re "VV") (str.to_re "WWW"))) (re.++ (re.union (re.* (str.to_re "XX")) (re.* (str.to_re "YYY"))) (re.++ (re.union (re.+ (str.to_re "ZZ")) (re.+ (str.to_re "!"))) (re.++ (re.* (re.* (str.to_re """"""""))) (re.++ (re.union (re.+ (str.to_re "##")) (re.+ (str.to_re "$"))) (re.++ (re.union (re.* (str.to_re "%%%")) (re.union (str.to_re "&&&") (str.to_re "''"))) (re.++ (re.union (re.+ (str.to_re "(")) (re.+ (str.to_re ")"))) (re.++ (re.union (re.union (str.to_re "**") (str.to_re "+++")) (re.* (str.to_re ",,"))) (re.++ (re.union (re.union (str.to_re "---") (str.to_re ".")) (re.union (str.to_re "/") (str.to_re ":"))) (re.++ (re.+ (re.+ (str.to_re ";;"))) (re.++ (re.union (re.* (str.to_re "<<<")) (re.+ (str.to_re "=="))) (re.++ (re.union (re.union (str.to_re ">") (str.to_re "???")) (re.+ (str.to_re "@"))) (re.++ (re.* (re.+ (str.to_re "[["))) (re.++ (re.union (re.union (str.to_re "\\\\") (str.to_re "]]]")) (re.* (str.to_re "^^^"))) (re.++ (re.+ (re.union (str.to_re "___") (str.to_re "`"))) (re.++ (re.+ (re.+ (str.to_re "{{"))) (re.++ (re.* (re.+ (str.to_re "|"))) (re.++ (re.* (re.* (str.to_re "}}}"))) (re.++ (re.union (re.+ (str.to_re "~~")) (re.+ (str.to_re "00"))) (re.++ (re.+ (re.* (str.to_re "111"))) (re.++ (re.+ (re.union (str.to_re "222") (str.to_re "3"))) (re.++ (re.* (re.* (str.to_re "44"))) (re.++ (re.union (re.+ (str.to_re "5")) (re.* (str.to_re "66"))) (re.++ (re.+ (re.+ (str.to_re "77"))) (re.++ (re.union (re.+ (str.to_re "88")) (re.* (str.to_re "99"))) (re.++ (re.* (re.+ (str.to_re "aaa"))) (re.++ (re.+ (re.* (str.to_re "bbb"))) (re.++ (re.* (re.+ (str.to_re "c"))) (re.++ (re.union (re.union (str.to_re "dd") (str.to_re "eee")) (re.+ (str.to_re "ff"))) (re.++ (re.+ (re.+ (str.to_re "ggg"))) (re.++ (re.+ (re.* (str.to_re "hh"))) (re.++ (re.union (re.union (str.to_re "i") (str.to_re "j")) (re.* (str.to_re "kk"))) (re.++ (re.+ (re.* (str.to_re "lll"))) (re.++ (re.union (re.union (str.to_re "mmm") (str.to_re "n")) (re.* (str.to_re "ooo"))) (re.++ (re.union (re.+ (str.to_re "ppp")) (re.union (str.to_re "qq") (str.to_re "rrr"))) (re.++ (re.* (re.union (str.to_re "sss") (str.to_re "ttt"))) (re.++ (re.* (re.union (str.to_re "u") (str.to_re "vvv"))) (re.++ (re.* (re.* (str.to_re "w"))) (re.++ (re.* (re.union (str.to_re "x") (str.to_re "y"))) (re.++ (re.union (re.union (str.to_re "z") (str.to_re "A")) (re.+ (str.to_re "BB"))) (re.++ (re.union (re.+ (str.to_re "C")) (re.+ (str.to_re "D"))) (re.++ (re.+ (re.+ (str.to_re "E"))) (re.++ (re.* (re.union (str.to_re "FFF") (str.to_re "GG"))) (re.++ (re.union (re.+ (str.to_re "H")) (re.+ (str.to_re "II"))) (re.union (re.+ (str.to_re "J")) (re.union (str.to_re "KK") (str.to_re "LL")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
