(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "00") (str.to_re "11"))) (re.++ (re.* (re.* (str.to_re "222"))) (re.++ (re.+ (re.+ (str.to_re "3"))) (re.++ (re.+ (re.* (str.to_re "444"))) (re.++ (re.* (re.* (str.to_re "55"))) (re.++ (re.* (re.+ (str.to_re "666"))) (re.++ (re.union (re.+ (str.to_re "7")) (re.union (str.to_re "888") (str.to_re "9"))) (re.++ (re.union (re.+ (str.to_re "a")) (re.+ (str.to_re "bbb"))) (re.++ (re.+ (re.+ (str.to_re "cc"))) (re.++ (re.union (re.+ (str.to_re "dd")) (re.union (str.to_re "eee") (str.to_re "f"))) (re.++ (re.* (re.* (str.to_re "gg"))) (re.++ (re.* (re.* (str.to_re "hhh"))) (re.++ (re.* (re.* (str.to_re "i"))) (re.++ (re.* (re.* (str.to_re "jjj"))) (re.++ (re.union (re.+ (str.to_re "k")) (re.* (str.to_re "l"))) (re.++ (re.+ (re.union (str.to_re "mm") (str.to_re "nn"))) (re.++ (re.* (re.+ (str.to_re "oo"))) (re.++ (re.* (re.+ (str.to_re "pp"))) (re.++ (re.union (re.union (str.to_re "qq") (str.to_re "rr")) (re.* (str.to_re "ss"))) (re.++ (re.+ (re.* (str.to_re "tt"))) (re.++ (re.+ (re.* (str.to_re "u"))) (re.++ (re.union (re.* (str.to_re "vv")) (re.union (str.to_re "ww") (str.to_re "xxx"))) (re.++ (re.+ (re.+ (str.to_re "y"))) (re.++ (re.union (re.+ (str.to_re "zzz")) (re.union (str.to_re "A") (str.to_re "B"))) (re.++ (re.+ (re.* (str.to_re "CCC"))) (re.++ (re.union (re.union (str.to_re "DDD") (str.to_re "E")) (re.+ (str.to_re "F"))) (re.++ (re.+ (re.* (str.to_re "G"))) (re.++ (re.union (re.+ (str.to_re "HHH")) (re.* (str.to_re "II"))) (re.++ (re.+ (re.+ (str.to_re "JJJ"))) (re.++ (re.union (re.* (str.to_re "KKK")) (re.* (str.to_re "L"))) (re.++ (re.+ (re.* (str.to_re "M"))) (re.++ (re.* (re.union (str.to_re "NNN") (str.to_re "O"))) (re.++ (re.* (re.union (str.to_re "P") (str.to_re "Q"))) (re.++ (re.+ (re.* (str.to_re "R"))) (re.++ (re.union (re.* (str.to_re "SS")) (re.* (str.to_re "TT"))) (re.++ (re.* (re.union (str.to_re "U") (str.to_re "VV"))) (re.++ (re.union (re.union (str.to_re "W") (str.to_re "XX")) (re.union (str.to_re "YYY") (str.to_re "ZZ"))) (re.++ (re.* (re.+ (str.to_re "!"))) (re.++ (re.+ (re.union (str.to_re """""") (str.to_re "##"))) (re.++ (re.union (re.* (str.to_re "$")) (re.union (str.to_re "%%%") (str.to_re "&&&"))) (re.++ (re.* (re.* (str.to_re "'''"))) (re.++ (re.+ (re.+ (str.to_re "(("))) (re.++ (re.* (re.+ (str.to_re "))"))) (re.++ (re.+ (re.* (str.to_re "**"))) (re.++ (re.* (re.union (str.to_re "+++") (str.to_re ",,,"))) (re.++ (re.+ (re.* (str.to_re "-"))) (re.++ (re.+ (re.+ (str.to_re ".."))) (re.++ (re.* (re.* (str.to_re "/"))) (re.++ (re.+ (re.+ (str.to_re ":"))) (re.++ (re.union (re.+ (str.to_re ";;;")) (re.union (str.to_re "<<") (str.to_re "=="))) (re.++ (re.union (re.union (str.to_re ">") (str.to_re "?")) (re.union (str.to_re "@@") (str.to_re "[[["))) (re.++ (re.union (re.union (str.to_re "\\\\\\") (str.to_re "]]]")) (re.union (str.to_re "^") (str.to_re "__"))) (re.++ (re.union (re.+ (str.to_re "`")) (re.* (str.to_re "{{{"))) (re.++ (re.+ (re.union (str.to_re "||") (str.to_re "}"))) (re.++ (re.* (re.* (str.to_re "~~"))) (re.++ (re.* (re.* (str.to_re "0"))) (re.++ (re.+ (re.+ (str.to_re "11"))) (re.++ (re.+ (re.* (str.to_re "222"))) (re.++ (re.* (re.union (str.to_re "33") (str.to_re "44"))) (re.++ (re.* (re.+ (str.to_re "5"))) (re.++ (re.* (re.union (str.to_re "666") (str.to_re "7"))) (re.++ (re.union (re.union (str.to_re "88") (str.to_re "99")) (re.+ (str.to_re "aa"))) (re.++ (re.* (re.+ (str.to_re "bbb"))) (re.++ (re.+ (re.union (str.to_re "ccc") (str.to_re "d"))) (re.++ (re.* (re.* (str.to_re "eee"))) (re.++ (re.* (re.+ (str.to_re "f"))) (re.++ (re.* (re.+ (str.to_re "gg"))) (re.++ (re.+ (re.union (str.to_re "hhh") (str.to_re "ii"))) (re.++ (re.+ (re.* (str.to_re "jjj"))) (re.++ (re.* (re.* (str.to_re "kkk"))) (re.++ (re.* (re.+ (str.to_re "l"))) (re.++ (re.union (re.* (str.to_re "mm")) (re.union (str.to_re "n") (str.to_re "o"))) (re.++ (re.* (re.union (str.to_re "p") (str.to_re "qqq"))) (re.++ (re.union (re.union (str.to_re "rr") (str.to_re "sss")) (re.* (str.to_re "ttt"))) (re.++ (re.union (re.+ (str.to_re "uu")) (re.* (str.to_re "vv"))) (re.++ (re.+ (re.* (str.to_re "www"))) (re.++ (re.* (re.+ (str.to_re "xx"))) (re.++ (re.union (re.+ (str.to_re "yyy")) (re.* (str.to_re "zzz"))) (re.++ (re.* (re.* (str.to_re "AA"))) (re.++ (re.+ (re.+ (str.to_re "B"))) (re.++ (re.+ (re.* (str.to_re "CC"))) (re.++ (re.+ (re.+ (str.to_re "DDD"))) (re.++ (re.* (re.union (str.to_re "EEE") (str.to_re "FF"))) (re.++ (re.union (re.* (str.to_re "G")) (re.* (str.to_re "HH"))) (re.++ (re.+ (re.* (str.to_re "I"))) (re.++ (re.+ (re.union (str.to_re "JJJ") (str.to_re "KKK"))) (re.++ (re.union (re.* (str.to_re "LL")) (re.* (str.to_re "M"))) (re.++ (re.+ (re.+ (str.to_re "N"))) (re.++ (re.* (re.union (str.to_re "OOO") (str.to_re "PPP"))) (re.++ (re.* (re.union (str.to_re "QQQ") (str.to_re "RR"))) (re.++ (re.* (re.+ (str.to_re "SSS"))) (re.++ (re.union (re.union (str.to_re "TTT") (str.to_re "U")) (re.+ (str.to_re "VVV"))) (re.++ (re.union (re.union (str.to_re "WWW") (str.to_re "XX")) (re.union (str.to_re "Y") (str.to_re "ZZZ"))) (re.++ (re.* (re.* (str.to_re "!!"))) (re.++ (re.union (re.* (str.to_re """""")) (re.+ (str.to_re "##"))) (re.++ (re.+ (re.* (str.to_re "$"))) (re.++ (re.union (re.union (str.to_re "%%%") (str.to_re "&&")) (re.* (str.to_re "'''"))) (re.++ (re.union (re.* (str.to_re "((")) (re.* (str.to_re ")"))) (re.+ (re.+ (str.to_re "**")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
