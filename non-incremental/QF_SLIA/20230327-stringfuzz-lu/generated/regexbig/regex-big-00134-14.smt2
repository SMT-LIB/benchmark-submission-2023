(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "00"))) (re.++ (re.union (re.union (str.to_re "1") (str.to_re "222")) (re.* (str.to_re "3"))) (re.++ (re.* (re.union (str.to_re "444") (str.to_re "5"))) (re.++ (re.union (re.* (str.to_re "66")) (re.* (str.to_re "777"))) (re.++ (re.* (re.union (str.to_re "88") (str.to_re "9"))) (re.++ (re.union (re.union (str.to_re "aa") (str.to_re "b")) (re.+ (str.to_re "c"))) (re.++ (re.+ (re.+ (str.to_re "ddd"))) (re.++ (re.* (re.* (str.to_re "eee"))) (re.++ (re.union (re.+ (str.to_re "ff")) (re.union (str.to_re "ggg") (str.to_re "hh"))) (re.++ (re.+ (re.* (str.to_re "ii"))) (re.++ (re.union (re.* (str.to_re "j")) (re.* (str.to_re "kkk"))) (re.++ (re.union (re.union (str.to_re "ll") (str.to_re "mmm")) (re.union (str.to_re "n") (str.to_re "ooo"))) (re.++ (re.* (re.* (str.to_re "p"))) (re.++ (re.* (re.+ (str.to_re "qqq"))) (re.++ (re.+ (re.+ (str.to_re "r"))) (re.++ (re.union (re.union (str.to_re "ss") (str.to_re "ttt")) (re.+ (str.to_re "uuu"))) (re.++ (re.+ (re.+ (str.to_re "v"))) (re.++ (re.+ (re.+ (str.to_re "ww"))) (re.++ (re.+ (re.+ (str.to_re "x"))) (re.++ (re.+ (re.union (str.to_re "yyy") (str.to_re "zz"))) (re.++ (re.+ (re.* (str.to_re "A"))) (re.++ (re.union (re.* (str.to_re "B")) (re.* (str.to_re "C"))) (re.++ (re.union (re.+ (str.to_re "D")) (re.+ (str.to_re "EEE"))) (re.++ (re.+ (re.* (str.to_re "FFF"))) (re.++ (re.* (re.+ (str.to_re "GGG"))) (re.++ (re.* (re.union (str.to_re "HH") (str.to_re "I"))) (re.++ (re.+ (re.union (str.to_re "JJJ") (str.to_re "KKK"))) (re.++ (re.+ (re.+ (str.to_re "L"))) (re.++ (re.union (re.* (str.to_re "MMM")) (re.* (str.to_re "NNN"))) (re.++ (re.+ (re.+ (str.to_re "OOO"))) (re.++ (re.* (re.union (str.to_re "PP") (str.to_re "QQ"))) (re.++ (re.union (re.+ (str.to_re "RRR")) (re.union (str.to_re "SSS") (str.to_re "T"))) (re.++ (re.union (re.+ (str.to_re "U")) (re.* (str.to_re "VVV"))) (re.++ (re.+ (re.* (str.to_re "WWW"))) (re.++ (re.* (re.* (str.to_re "XX"))) (re.++ (re.* (re.+ (str.to_re "YY"))) (re.++ (re.union (re.union (str.to_re "Z") (str.to_re "!!!")) (re.union (str.to_re """""") (str.to_re "##"))) (re.++ (re.+ (re.* (str.to_re "$"))) (re.++ (re.* (re.+ (str.to_re "%%%"))) (re.++ (re.union (re.union (str.to_re "&") (str.to_re "'''")) (re.+ (str.to_re "((("))) (re.++ (re.union (re.+ (str.to_re ")")) (re.* (str.to_re "***"))) (re.++ (re.union (re.union (str.to_re "++") (str.to_re ",,,")) (re.* (str.to_re "--"))) (re.++ (re.* (re.* (str.to_re "."))) (re.++ (re.union (re.* (str.to_re "///")) (re.* (str.to_re ":"))) (re.++ (re.+ (re.union (str.to_re ";;;") (str.to_re "<"))) (re.++ (re.* (re.* (str.to_re "==="))) (re.++ (re.* (re.union (str.to_re ">>>") (str.to_re "???"))) (re.++ (re.* (re.+ (str.to_re "@"))) (re.++ (re.* (re.+ (str.to_re "[[["))) (re.++ (re.* (re.union (str.to_re "\\") (str.to_re "]]"))) (re.++ (re.+ (re.union (str.to_re "^") (str.to_re "__"))) (re.++ (re.+ (re.* (str.to_re "``"))) (re.++ (re.* (re.* (str.to_re "{"))) (re.++ (re.* (re.* (str.to_re "||"))) (re.++ (re.+ (re.* (str.to_re "}"))) (re.++ (re.+ (re.+ (str.to_re "~~"))) (re.++ (re.+ (re.* (str.to_re "00"))) (re.++ (re.union (re.union (str.to_re "111") (str.to_re "2")) (re.+ (str.to_re "33"))) (re.++ (re.+ (re.+ (str.to_re "44"))) (re.++ (re.* (re.union (str.to_re "555") (str.to_re "66"))) (re.++ (re.union (re.+ (str.to_re "7")) (re.+ (str.to_re "8"))) (re.++ (re.+ (re.+ (str.to_re "999"))) (re.++ (re.* (re.union (str.to_re "a") (str.to_re "bbb"))) (re.++ (re.* (re.union (str.to_re "ccc") (str.to_re "dd"))) (re.++ (re.union (re.* (str.to_re "eee")) (re.* (str.to_re "fff"))) (re.++ (re.+ (re.union (str.to_re "gg") (str.to_re "h"))) (re.++ (re.* (re.+ (str.to_re "ii"))) (re.++ (re.+ (re.* (str.to_re "jjj"))) (re.++ (re.+ (re.union (str.to_re "k") (str.to_re "lll"))) (re.++ (re.union (re.* (str.to_re "mmm")) (re.union (str.to_re "n") (str.to_re "o"))) (re.++ (re.* (re.union (str.to_re "pp") (str.to_re "q"))) (re.++ (re.* (re.union (str.to_re "r") (str.to_re "sss"))) (re.++ (re.union (re.+ (str.to_re "t")) (re.* (str.to_re "uuu"))) (re.++ (re.* (re.* (str.to_re "vvv"))) (re.++ (re.+ (re.union (str.to_re "www") (str.to_re "xx"))) (re.++ (re.+ (re.+ (str.to_re "yy"))) (re.++ (re.* (re.union (str.to_re "zz") (str.to_re "AA"))) (re.++ (re.* (re.union (str.to_re "BBB") (str.to_re "CC"))) (re.++ (re.+ (re.union (str.to_re "D") (str.to_re "E"))) (re.++ (re.union (re.* (str.to_re "F")) (re.union (str.to_re "GG") (str.to_re "HHH"))) (re.++ (re.union (re.* (str.to_re "III")) (re.* (str.to_re "J"))) (re.++ (re.union (re.union (str.to_re "KK") (str.to_re "LLL")) (re.+ (str.to_re "MM"))) (re.++ (re.* (re.+ (str.to_re "NNN"))) (re.++ (re.+ (re.+ (str.to_re "O"))) (re.++ (re.* (re.union (str.to_re "PPP") (str.to_re "QQ"))) (re.++ (re.union (re.* (str.to_re "R")) (re.* (str.to_re "SS"))) (re.++ (re.+ (re.union (str.to_re "T") (str.to_re "UU"))) (re.++ (re.+ (re.* (str.to_re "VVV"))) (re.++ (re.union (re.* (str.to_re "WWW")) (re.+ (str.to_re "X"))) (re.++ (re.* (re.* (str.to_re "YYY"))) (re.++ (re.+ (re.* (str.to_re "ZZ"))) (re.++ (re.+ (re.+ (str.to_re "!!"))) (re.++ (re.union (re.union (str.to_re """""") (str.to_re "#")) (re.union (str.to_re "$") (str.to_re "%%"))) (re.++ (re.union (re.* (str.to_re "&")) (re.+ (str.to_re "'"))) (re.++ (re.+ (re.* (str.to_re "((("))) (re.++ (re.* (re.* (str.to_re "))"))) (re.++ (re.union (re.union (str.to_re "***") (str.to_re "++")) (re.union (str.to_re ",,,") (str.to_re "--"))) (re.++ (re.union (re.union (str.to_re ".") (str.to_re "//")) (re.union (str.to_re ":") (str.to_re ";"))) (re.++ (re.* (re.* (str.to_re "<"))) (re.++ (re.union (re.union (str.to_re "=") (str.to_re ">>")) (re.+ (str.to_re "?"))) (re.++ (re.* (re.union (str.to_re "@@@") (str.to_re "["))) (re.++ (re.union (re.* (str.to_re "\\")) (re.* (str.to_re "]]]"))) (re.++ (re.+ (re.* (str.to_re "^^"))) (re.++ (re.* (re.union (str.to_re "___") (str.to_re "`"))) (re.++ (re.union (re.union (str.to_re "{") (str.to_re "||")) (re.* (str.to_re "}"))) (re.++ (re.* (re.* (str.to_re "~~~"))) (re.++ (re.+ (re.+ (str.to_re "00"))) (re.++ (re.* (re.union (str.to_re "11") (str.to_re "222"))) (re.++ (re.union (re.+ (str.to_re "3")) (re.* (str.to_re "44"))) (re.++ (re.+ (re.* (str.to_re "55"))) (re.++ (re.+ (re.* (str.to_re "6"))) (re.++ (re.+ (re.+ (str.to_re "77"))) (re.++ (re.* (re.+ (str.to_re "8"))) (re.++ (re.* (re.+ (str.to_re "9"))) (re.++ (re.* (re.+ (str.to_re "aa"))) (re.++ (re.union (re.* (str.to_re "bb")) (re.union (str.to_re "c") (str.to_re "ddd"))) (re.++ (re.+ (re.+ (str.to_re "ee"))) (re.++ (re.* (re.union (str.to_re "fff") (str.to_re "gg"))) (re.++ (re.+ (re.union (str.to_re "hh") (str.to_re "i"))) (re.++ (re.+ (re.union (str.to_re "jjj") (str.to_re "kkk"))) (re.++ (re.union (re.union (str.to_re "l") (str.to_re "mm")) (re.union (str.to_re "nn") (str.to_re "ooo"))) (re.++ (re.* (re.union (str.to_re "p") (str.to_re "qq"))) (re.++ (re.* (re.* (str.to_re "r"))) (re.++ (re.* (re.+ (str.to_re "sss"))) (re.++ (re.* (re.+ (str.to_re "t"))) (re.++ (re.* (re.* (str.to_re "u"))) (re.++ (re.* (re.* (str.to_re "v"))) (re.++ (re.* (re.union (str.to_re "ww") (str.to_re "xx"))) (re.++ (re.+ (re.+ (str.to_re "y"))) (re.++ (re.* (re.* (str.to_re "z"))) (re.++ (re.* (re.union (str.to_re "AA") (str.to_re "BBB"))) (re.++ (re.* (re.* (str.to_re "CC"))) (re.++ (re.union (re.union (str.to_re "DD") (str.to_re "E")) (re.* (str.to_re "FF"))) (re.* (re.+ (str.to_re "GGG"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
