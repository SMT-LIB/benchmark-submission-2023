(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "0"))) (re.++ (re.union (re.union (str.to_re "1") (str.to_re "22")) (re.union (str.to_re "3") (str.to_re "4"))) (re.++ (re.* (re.union (str.to_re "55") (str.to_re "66"))) (re.++ (re.+ (re.+ (str.to_re "777"))) (re.++ (re.* (re.union (str.to_re "88") (str.to_re "9"))) (re.++ (re.+ (re.union (str.to_re "aa") (str.to_re "bb"))) (re.++ (re.* (re.* (str.to_re "cc"))) (re.++ (re.+ (re.union (str.to_re "ddd") (str.to_re "e"))) (re.++ (re.+ (re.+ (str.to_re "ff"))) (re.++ (re.* (re.* (str.to_re "gg"))) (re.++ (re.+ (re.* (str.to_re "h"))) (re.++ (re.+ (re.+ (str.to_re "ii"))) (re.++ (re.+ (re.+ (str.to_re "jjj"))) (re.++ (re.union (re.+ (str.to_re "k")) (re.+ (str.to_re "lll"))) (re.++ (re.union (re.* (str.to_re "mm")) (re.* (str.to_re "n"))) (re.++ (re.* (re.+ (str.to_re "oo"))) (re.++ (re.+ (re.* (str.to_re "p"))) (re.++ (re.union (re.* (str.to_re "qq")) (re.+ (str.to_re "r"))) (re.++ (re.union (re.+ (str.to_re "ss")) (re.* (str.to_re "tt"))) (re.++ (re.union (re.union (str.to_re "uu") (str.to_re "vv")) (re.union (str.to_re "w") (str.to_re "xx"))) (re.++ (re.* (re.+ (str.to_re "y"))) (re.++ (re.union (re.* (str.to_re "z")) (re.union (str.to_re "AA") (str.to_re "B"))) (re.++ (re.union (re.union (str.to_re "C") (str.to_re "DDD")) (re.* (str.to_re "EEE"))) (re.++ (re.union (re.union (str.to_re "FF") (str.to_re "GG")) (re.union (str.to_re "HHH") (str.to_re "II"))) (re.++ (re.+ (re.union (str.to_re "JJ") (str.to_re "K"))) (re.++ (re.+ (re.+ (str.to_re "LLL"))) (re.++ (re.* (re.+ (str.to_re "M"))) (re.++ (re.union (re.union (str.to_re "NN") (str.to_re "OOO")) (re.* (str.to_re "PPP"))) (re.++ (re.* (re.* (str.to_re "QQQ"))) (re.++ (re.union (re.* (str.to_re "RR")) (re.* (str.to_re "SSS"))) (re.++ (re.* (re.+ (str.to_re "T"))) (re.++ (re.* (re.union (str.to_re "U") (str.to_re "V"))) (re.++ (re.+ (re.* (str.to_re "WW"))) (re.++ (re.+ (re.union (str.to_re "XXX") (str.to_re "YY"))) (re.++ (re.+ (re.+ (str.to_re "Z"))) (re.++ (re.union (re.+ (str.to_re "!")) (re.+ (str.to_re """"""))) (re.++ (re.+ (re.* (str.to_re "###"))) (re.++ (re.+ (re.* (str.to_re "$$$"))) (re.++ (re.* (re.union (str.to_re "%%") (str.to_re "&&&"))) (re.++ (re.* (re.+ (str.to_re "'"))) (re.++ (re.union (re.+ (str.to_re "(")) (re.union (str.to_re ")") (str.to_re "*"))) (re.++ (re.+ (re.+ (str.to_re "+"))) (re.++ (re.+ (re.union (str.to_re ",") (str.to_re "--"))) (re.++ (re.* (re.union (str.to_re "...") (str.to_re "//"))) (re.++ (re.+ (re.* (str.to_re ":::"))) (re.++ (re.+ (re.+ (str.to_re ";"))) (re.++ (re.* (re.+ (str.to_re "<<<"))) (re.++ (re.union (re.union (str.to_re "=") (str.to_re ">>>")) (re.* (str.to_re "?"))) (re.++ (re.union (re.* (str.to_re "@@")) (re.union (str.to_re "[[[") (str.to_re "\\"))) (re.++ (re.* (re.* (str.to_re "]]]"))) (re.++ (re.+ (re.+ (str.to_re "^^"))) (re.++ (re.+ (re.+ (str.to_re "_"))) (re.++ (re.* (re.* (str.to_re "```"))) (re.++ (re.* (re.* (str.to_re "{"))) (re.++ (re.* (re.+ (str.to_re "|"))) (re.++ (re.* (re.union (str.to_re "}}") (str.to_re "~~"))) (re.++ (re.* (re.+ (str.to_re "000"))) (re.++ (re.* (re.* (str.to_re "11"))) (re.++ (re.* (re.union (str.to_re "22") (str.to_re "33"))) (re.++ (re.union (re.union (str.to_re "4") (str.to_re "5")) (re.union (str.to_re "66") (str.to_re "7"))) (re.++ (re.+ (re.union (str.to_re "88") (str.to_re "999"))) (re.++ (re.* (re.* (str.to_re "aa"))) (re.++ (re.union (re.* (str.to_re "bbb")) (re.+ (str.to_re "cc"))) (re.++ (re.+ (re.+ (str.to_re "dd"))) (re.++ (re.union (re.* (str.to_re "eee")) (re.* (str.to_re "f"))) (re.++ (re.* (re.+ (str.to_re "gg"))) (re.++ (re.+ (re.* (str.to_re "hh"))) (re.++ (re.union (re.union (str.to_re "i") (str.to_re "j")) (re.union (str.to_re "kkk") (str.to_re "l"))) (re.++ (re.* (re.+ (str.to_re "mmm"))) (re.++ (re.union (re.union (str.to_re "n") (str.to_re "o")) (re.* (str.to_re "ppp"))) (re.++ (re.+ (re.union (str.to_re "qq") (str.to_re "r"))) (re.++ (re.* (re.+ (str.to_re "s"))) (re.++ (re.* (re.union (str.to_re "ttt") (str.to_re "u"))) (re.++ (re.union (re.union (str.to_re "vv") (str.to_re "www")) (re.* (str.to_re "xxx"))) (re.++ (re.+ (re.+ (str.to_re "y"))) (re.++ (re.* (re.* (str.to_re "zzz"))) (re.++ (re.union (re.* (str.to_re "AAA")) (re.+ (str.to_re "BB"))) (re.++ (re.+ (re.+ (str.to_re "CC"))) (re.++ (re.+ (re.* (str.to_re "D"))) (re.++ (re.* (re.union (str.to_re "EE") (str.to_re "FF"))) (re.++ (re.union (re.* (str.to_re "G")) (re.union (str.to_re "HHH") (str.to_re "I"))) (re.++ (re.union (re.* (str.to_re "J")) (re.+ (str.to_re "K"))) (re.++ (re.* (re.* (str.to_re "LLL"))) (re.++ (re.* (re.union (str.to_re "MM") (str.to_re "N"))) (re.++ (re.* (re.+ (str.to_re "OOO"))) (re.++ (re.+ (re.union (str.to_re "PP") (str.to_re "QQQ"))) (re.++ (re.* (re.+ (str.to_re "R"))) (re.++ (re.union (re.* (str.to_re "S")) (re.* (str.to_re "T"))) (re.++ (re.union (re.union (str.to_re "U") (str.to_re "V")) (re.union (str.to_re "WWW") (str.to_re "X"))) (re.++ (re.* (re.union (str.to_re "YY") (str.to_re "ZZ"))) (re.++ (re.union (re.* (str.to_re "!!!")) (re.* (str.to_re """"))) (re.++ (re.+ (re.+ (str.to_re "#"))) (re.++ (re.* (re.union (str.to_re "$") (str.to_re "%%%"))) (re.++ (re.+ (re.* (str.to_re "&"))) (re.++ (re.+ (re.* (str.to_re "''"))) (re.++ (re.+ (re.* (str.to_re "(("))) (re.++ (re.* (re.+ (str.to_re ")))"))) (re.++ (re.union (re.+ (str.to_re "**")) (re.union (str.to_re "++") (str.to_re ",,"))) (re.union (re.union (str.to_re "--") (str.to_re "...")) (re.union (str.to_re "/") (str.to_re ":::")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
