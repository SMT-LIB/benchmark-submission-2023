(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "000")) (re.union (str.to_re "1") (str.to_re "2"))) (re.++ (re.* (re.* (str.to_re "33"))) (re.++ (re.* (re.* (str.to_re "44"))) (re.++ (re.union (re.union (str.to_re "555") (str.to_re "666")) (re.union (str.to_re "777") (str.to_re "88"))) (re.++ (re.+ (re.* (str.to_re "999"))) (re.++ (re.* (re.+ (str.to_re "aa"))) (re.++ (re.+ (re.+ (str.to_re "bb"))) (re.++ (re.union (re.+ (str.to_re "cc")) (re.* (str.to_re "ddd"))) (re.++ (re.* (re.union (str.to_re "e") (str.to_re "f"))) (re.++ (re.* (re.union (str.to_re "g") (str.to_re "h"))) (re.++ (re.union (re.+ (str.to_re "iii")) (re.union (str.to_re "j") (str.to_re "k"))) (re.++ (re.union (re.* (str.to_re "l")) (re.* (str.to_re "mm"))) (re.++ (re.* (re.+ (str.to_re "n"))) (re.++ (re.union (re.union (str.to_re "o") (str.to_re "ppp")) (re.* (str.to_re "qq"))) (re.++ (re.* (re.* (str.to_re "rrr"))) (re.++ (re.* (re.* (str.to_re "sss"))) (re.++ (re.* (re.union (str.to_re "tt") (str.to_re "uuu"))) (re.++ (re.* (re.union (str.to_re "vvv") (str.to_re "w"))) (re.++ (re.union (re.+ (str.to_re "xx")) (re.* (str.to_re "yyy"))) (re.++ (re.* (re.* (str.to_re "zz"))) (re.++ (re.* (re.union (str.to_re "AAA") (str.to_re "BB"))) (re.++ (re.union (re.* (str.to_re "CC")) (re.union (str.to_re "D") (str.to_re "E"))) (re.++ (re.union (re.+ (str.to_re "F")) (re.+ (str.to_re "G"))) (re.++ (re.union (re.union (str.to_re "HH") (str.to_re "III")) (re.union (str.to_re "JJ") (str.to_re "KKK"))) (re.++ (re.+ (re.union (str.to_re "LL") (str.to_re "M"))) (re.++ (re.union (re.+ (str.to_re "NN")) (re.union (str.to_re "OOO") (str.to_re "P"))) (re.++ (re.+ (re.+ (str.to_re "Q"))) (re.++ (re.+ (re.* (str.to_re "RRR"))) (re.++ (re.* (re.+ (str.to_re "SS"))) (re.++ (re.union (re.* (str.to_re "TT")) (re.+ (str.to_re "UU"))) (re.++ (re.+ (re.union (str.to_re "V") (str.to_re "WW"))) (re.++ (re.union (re.+ (str.to_re "X")) (re.union (str.to_re "Y") (str.to_re "ZZ"))) (re.++ (re.union (re.* (str.to_re "!!")) (re.* (str.to_re """"""))) (re.++ (re.* (re.* (str.to_re "##"))) (re.++ (re.* (re.+ (str.to_re "$$"))) (re.++ (re.+ (re.union (str.to_re "%%%") (str.to_re "&"))) (re.++ (re.union (re.* (str.to_re "'''")) (re.+ (str.to_re "("))) (re.++ (re.* (re.+ (str.to_re "))"))) (re.++ (re.+ (re.+ (str.to_re "***"))) (re.++ (re.+ (re.union (str.to_re "+") (str.to_re ",,"))) (re.++ (re.union (re.* (str.to_re "---")) (re.+ (str.to_re ".."))) (re.++ (re.union (re.* (str.to_re "/")) (re.+ (str.to_re ":::"))) (re.++ (re.union (re.union (str.to_re ";") (str.to_re "<")) (re.union (str.to_re "==") (str.to_re ">>"))) (re.++ (re.union (re.* (str.to_re "?")) (re.+ (str.to_re "@@"))) (re.++ (re.* (re.* (str.to_re "["))) (re.++ (re.union (re.+ (str.to_re "\\\\")) (re.* (str.to_re "]"))) (re.++ (re.* (re.* (str.to_re "^"))) (re.++ (re.union (re.* (str.to_re "_")) (re.* (str.to_re "`"))) (re.++ (re.* (re.* (str.to_re "{"))) (re.++ (re.* (re.union (str.to_re "|||") (str.to_re "}}}"))) (re.++ (re.* (re.union (str.to_re "~~") (str.to_re "0"))) (re.++ (re.+ (re.+ (str.to_re "111"))) (re.++ (re.* (re.* (str.to_re "2"))) (re.++ (re.union (re.* (str.to_re "333")) (re.union (str.to_re "44") (str.to_re "55"))) (re.++ (re.union (re.* (str.to_re "666")) (re.union (str.to_re "77") (str.to_re "88"))) (re.++ (re.* (re.+ (str.to_re "9"))) (re.++ (re.+ (re.+ (str.to_re "aa"))) (re.++ (re.+ (re.* (str.to_re "b"))) (re.++ (re.union (re.* (str.to_re "c")) (re.* (str.to_re "dd"))) (re.++ (re.* (re.union (str.to_re "eee") (str.to_re "ff"))) (re.++ (re.union (re.* (str.to_re "ggg")) (re.* (str.to_re "hhh"))) (re.++ (re.+ (re.* (str.to_re "i"))) (re.++ (re.* (re.+ (str.to_re "jjj"))) (re.++ (re.+ (re.+ (str.to_re "k"))) (re.++ (re.* (re.union (str.to_re "ll") (str.to_re "mm"))) (re.++ (re.union (re.* (str.to_re "nnn")) (re.union (str.to_re "o") (str.to_re "pp"))) (re.++ (re.+ (re.* (str.to_re "q"))) (re.++ (re.union (re.union (str.to_re "rrr") (str.to_re "sss")) (re.union (str.to_re "tt") (str.to_re "u"))) (re.++ (re.* (re.union (str.to_re "vv") (str.to_re "ww"))) (re.++ (re.union (re.+ (str.to_re "x")) (re.+ (str.to_re "yyy"))) (re.+ (re.+ (str.to_re "zz")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
