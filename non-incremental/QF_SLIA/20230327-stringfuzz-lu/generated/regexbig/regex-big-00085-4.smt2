(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.union (str.to_re "0") (str.to_re "11"))) (re.++ (re.union (re.* (str.to_re "222")) (re.+ (str.to_re "3"))) (re.++ (re.* (re.union (str.to_re "444") (str.to_re "55"))) (re.++ (re.+ (re.union (str.to_re "666") (str.to_re "7"))) (re.++ (re.union (re.union (str.to_re "8") (str.to_re "999")) (re.* (str.to_re "aaa"))) (re.++ (re.+ (re.union (str.to_re "bbb") (str.to_re "ccc"))) (re.++ (re.* (re.union (str.to_re "d") (str.to_re "eee"))) (re.++ (re.union (re.union (str.to_re "ff") (str.to_re "g")) (re.+ (str.to_re "hhh"))) (re.++ (re.+ (re.+ (str.to_re "iii"))) (re.++ (re.* (re.+ (str.to_re "jj"))) (re.++ (re.* (re.+ (str.to_re "k"))) (re.++ (re.* (re.+ (str.to_re "l"))) (re.++ (re.* (re.* (str.to_re "mm"))) (re.++ (re.* (re.+ (str.to_re "nnn"))) (re.++ (re.+ (re.+ (str.to_re "o"))) (re.++ (re.* (re.* (str.to_re "p"))) (re.++ (re.* (re.union (str.to_re "qq") (str.to_re "rrr"))) (re.++ (re.union (re.* (str.to_re "s")) (re.+ (str.to_re "ttt"))) (re.++ (re.union (re.union (str.to_re "u") (str.to_re "v")) (re.* (str.to_re "ww"))) (re.++ (re.+ (re.* (str.to_re "xx"))) (re.++ (re.union (re.union (str.to_re "y") (str.to_re "z")) (re.+ (str.to_re "A"))) (re.++ (re.union (re.union (str.to_re "BB") (str.to_re "CCC")) (re.union (str.to_re "DDD") (str.to_re "E"))) (re.++ (re.+ (re.+ (str.to_re "FFF"))) (re.++ (re.union (re.+ (str.to_re "GGG")) (re.* (str.to_re "H"))) (re.++ (re.+ (re.* (str.to_re "I"))) (re.++ (re.* (re.* (str.to_re "JJJ"))) (re.++ (re.* (re.* (str.to_re "KK"))) (re.++ (re.* (re.union (str.to_re "L") (str.to_re "MMM"))) (re.++ (re.+ (re.+ (str.to_re "NN"))) (re.++ (re.* (re.* (str.to_re "O"))) (re.++ (re.union (re.+ (str.to_re "PPP")) (re.* (str.to_re "Q"))) (re.++ (re.+ (re.+ (str.to_re "RRR"))) (re.++ (re.* (re.+ (str.to_re "SS"))) (re.++ (re.+ (re.union (str.to_re "TTT") (str.to_re "U"))) (re.++ (re.union (re.union (str.to_re "V") (str.to_re "WWW")) (re.+ (str.to_re "XXX"))) (re.++ (re.+ (re.union (str.to_re "YYY") (str.to_re "ZZ"))) (re.++ (re.+ (re.* (str.to_re "!!!"))) (re.++ (re.* (re.union (str.to_re """""""") (str.to_re "##"))) (re.++ (re.+ (re.* (str.to_re "$"))) (re.++ (re.+ (re.+ (str.to_re "%%"))) (re.++ (re.+ (re.+ (str.to_re "&&"))) (re.++ (re.union (re.* (str.to_re "'''")) (re.* (str.to_re "((("))) (re.++ (re.union (re.+ (str.to_re ")))")) (re.* (str.to_re "**"))) (re.++ (re.union (re.+ (str.to_re "++")) (re.* (str.to_re ","))) (re.++ (re.+ (re.* (str.to_re "--"))) (re.++ (re.union (re.+ (str.to_re "...")) (re.union (str.to_re "///") (str.to_re ":"))) (re.++ (re.+ (re.+ (str.to_re ";;;"))) (re.++ (re.union (re.* (str.to_re "<")) (re.+ (str.to_re "=="))) (re.++ (re.+ (re.+ (str.to_re ">>"))) (re.++ (re.+ (re.+ (str.to_re "?"))) (re.++ (re.union (re.union (str.to_re "@") (str.to_re "[")) (re.* (str.to_re "\\"))) (re.++ (re.* (re.union (str.to_re "]]]") (str.to_re "^^^"))) (re.++ (re.+ (re.+ (str.to_re "___"))) (re.++ (re.+ (re.* (str.to_re "```"))) (re.++ (re.+ (re.* (str.to_re "{{{"))) (re.++ (re.+ (re.* (str.to_re "|"))) (re.++ (re.* (re.union (str.to_re "}}") (str.to_re "~"))) (re.++ (re.union (re.* (str.to_re "0")) (re.* (str.to_re "11"))) (re.++ (re.+ (re.+ (str.to_re "222"))) (re.++ (re.+ (re.union (str.to_re "333") (str.to_re "44"))) (re.++ (re.* (re.union (str.to_re "555") (str.to_re "666"))) (re.++ (re.* (re.+ (str.to_re "7"))) (re.++ (re.+ (re.union (str.to_re "888") (str.to_re "999"))) (re.++ (re.* (re.* (str.to_re "aaa"))) (re.++ (re.* (re.union (str.to_re "b") (str.to_re "ccc"))) (re.++ (re.union (re.union (str.to_re "d") (str.to_re "ee")) (re.union (str.to_re "fff") (str.to_re "ggg"))) (re.++ (re.* (re.union (str.to_re "h") (str.to_re "ii"))) (re.++ (re.union (re.+ (str.to_re "jjj")) (re.* (str.to_re "kkk"))) (re.++ (re.* (re.union (str.to_re "l") (str.to_re "m"))) (re.++ (re.+ (re.union (str.to_re "nnn") (str.to_re "ooo"))) (re.++ (re.+ (re.+ (str.to_re "p"))) (re.++ (re.* (re.+ (str.to_re "qq"))) (re.++ (re.* (re.+ (str.to_re "rr"))) (re.++ (re.union (re.* (str.to_re "s")) (re.+ (str.to_re "ttt"))) (re.++ (re.+ (re.* (str.to_re "uu"))) (re.++ (re.* (re.+ (str.to_re "vvv"))) (re.++ (re.union (re.union (str.to_re "ww") (str.to_re "xx")) (re.* (str.to_re "yy"))) (re.++ (re.* (re.+ (str.to_re "zzz"))) (re.++ (re.union (re.* (str.to_re "AAA")) (re.union (str.to_re "BB") (str.to_re "C"))) (re.++ (re.+ (re.+ (str.to_re "DD"))) (re.++ (re.+ (re.union (str.to_re "EEE") (str.to_re "FFF"))) (re.++ (re.union (re.+ (str.to_re "GGG")) (re.+ (str.to_re "HHH"))) (re.++ (re.+ (re.* (str.to_re "III"))) (re.++ (re.* (re.* (str.to_re "JJJ"))) (re.+ (re.+ (str.to_re "K")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
