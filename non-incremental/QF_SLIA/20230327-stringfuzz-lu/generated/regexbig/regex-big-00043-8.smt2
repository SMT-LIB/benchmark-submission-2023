(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (str.to_re "00"))) (re.++ (re.union (re.+ (str.to_re "11")) (re.* (str.to_re "22"))) (re.++ (re.+ (re.* (str.to_re "33"))) (re.++ (re.union (re.+ (str.to_re "4")) (re.union (str.to_re "555") (str.to_re "66"))) (re.++ (re.+ (re.* (str.to_re "7"))) (re.++ (re.* (re.+ (str.to_re "88"))) (re.++ (re.* (re.* (str.to_re "9"))) (re.++ (re.union (re.union (str.to_re "aa") (str.to_re "bbb")) (re.* (str.to_re "c"))) (re.++ (re.+ (re.+ (str.to_re "dd"))) (re.++ (re.+ (re.+ (str.to_re "ee"))) (re.++ (re.* (re.union (str.to_re "ff") (str.to_re "ggg"))) (re.++ (re.* (re.* (str.to_re "h"))) (re.++ (re.union (re.union (str.to_re "iii") (str.to_re "jjj")) (re.* (str.to_re "kkk"))) (re.++ (re.* (re.union (str.to_re "lll") (str.to_re "mmm"))) (re.++ (re.* (re.union (str.to_re "nnn") (str.to_re "o"))) (re.++ (re.union (re.* (str.to_re "ppp")) (re.union (str.to_re "q") (str.to_re "r"))) (re.++ (re.+ (re.* (str.to_re "ss"))) (re.++ (re.+ (re.union (str.to_re "tt") (str.to_re "uuu"))) (re.++ (re.* (re.* (str.to_re "v"))) (re.++ (re.* (re.* (str.to_re "www"))) (re.++ (re.union (re.+ (str.to_re "x")) (re.* (str.to_re "y"))) (re.++ (re.+ (re.* (str.to_re "z"))) (re.++ (re.union (re.union (str.to_re "AAA") (str.to_re "BB")) (re.* (str.to_re "C"))) (re.++ (re.union (re.* (str.to_re "DDD")) (re.+ (str.to_re "EEE"))) (re.++ (re.* (re.union (str.to_re "FFF") (str.to_re "GGG"))) (re.++ (re.* (re.* (str.to_re "HHH"))) (re.++ (re.* (re.union (str.to_re "I") (str.to_re "J"))) (re.++ (re.union (re.union (str.to_re "KKK") (str.to_re "LLL")) (re.+ (str.to_re "M"))) (re.++ (re.union (re.* (str.to_re "N")) (re.+ (str.to_re "OOO"))) (re.++ (re.* (re.* (str.to_re "P"))) (re.++ (re.* (re.+ (str.to_re "QQQ"))) (re.++ (re.union (re.* (str.to_re "R")) (re.union (str.to_re "S") (str.to_re "TTT"))) (re.++ (re.union (re.* (str.to_re "U")) (re.* (str.to_re "VV"))) (re.++ (re.* (re.* (str.to_re "W"))) (re.++ (re.+ (re.* (str.to_re "X"))) (re.++ (re.* (re.* (str.to_re "Y"))) (re.++ (re.union (re.union (str.to_re "ZZZ") (str.to_re "!!!")) (re.union (str.to_re """""") (str.to_re "##"))) (re.++ (re.+ (re.+ (str.to_re "$"))) (re.++ (re.* (re.* (str.to_re "%"))) (re.++ (re.+ (re.* (str.to_re "&&&"))) (re.++ (re.union (re.+ (str.to_re "''")) (re.* (str.to_re "(("))) (re.++ (re.+ (re.* (str.to_re ")))"))) (re.* (re.* (str.to_re "*")))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
