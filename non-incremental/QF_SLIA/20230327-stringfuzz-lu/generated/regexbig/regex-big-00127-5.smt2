(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "00")) (re.union (str.to_re "11") (str.to_re "2"))) (re.++ (re.* (re.union (str.to_re "3") (str.to_re "4"))) (re.++ (re.union (re.* (str.to_re "55")) (re.union (str.to_re "66") (str.to_re "77"))) (re.++ (re.union (re.union (str.to_re "8") (str.to_re "9")) (re.union (str.to_re "aa") (str.to_re "b"))) (re.++ (re.union (re.union (str.to_re "c") (str.to_re "d")) (re.union (str.to_re "ee") (str.to_re "f"))) (re.++ (re.* (re.+ (str.to_re "ggg"))) (re.++ (re.union (re.* (str.to_re "hhh")) (re.union (str.to_re "iii") (str.to_re "jj"))) (re.++ (re.+ (re.+ (str.to_re "kk"))) (re.++ (re.union (re.union (str.to_re "l") (str.to_re "m")) (re.union (str.to_re "nnn") (str.to_re "oo"))) (re.++ (re.union (re.union (str.to_re "ppp") (str.to_re "q")) (re.+ (str.to_re "rr"))) (re.++ (re.+ (re.+ (str.to_re "sss"))) (re.++ (re.* (re.* (str.to_re "tt"))) (re.++ (re.union (re.* (str.to_re "uuu")) (re.union (str.to_re "v") (str.to_re "w"))) (re.++ (re.union (re.union (str.to_re "x") (str.to_re "yyy")) (re.+ (str.to_re "zz"))) (re.++ (re.+ (re.+ (str.to_re "AA"))) (re.++ (re.union (re.+ (str.to_re "BBB")) (re.* (str.to_re "C"))) (re.++ (re.union (re.+ (str.to_re "DD")) (re.+ (str.to_re "EEE"))) (re.++ (re.+ (re.union (str.to_re "FF") (str.to_re "GG"))) (re.++ (re.* (re.* (str.to_re "HH"))) (re.++ (re.* (re.union (str.to_re "III") (str.to_re "JJJ"))) (re.++ (re.union (re.union (str.to_re "KKK") (str.to_re "LL")) (re.union (str.to_re "MM") (str.to_re "N"))) (re.++ (re.union (re.+ (str.to_re "OOO")) (re.* (str.to_re "PPP"))) (re.++ (re.+ (re.union (str.to_re "QQQ") (str.to_re "RR"))) (re.++ (re.+ (re.union (str.to_re "SSS") (str.to_re "T"))) (re.++ (re.* (re.+ (str.to_re "UU"))) (re.++ (re.* (re.union (str.to_re "VV") (str.to_re "WW"))) (re.++ (re.union (re.* (str.to_re "X")) (re.* (str.to_re "YYY"))) (re.++ (re.+ (re.* (str.to_re "ZZZ"))) (re.++ (re.+ (re.+ (str.to_re "!"))) (re.++ (re.union (re.* (str.to_re """""")) (re.* (str.to_re "###"))) (re.++ (re.* (re.+ (str.to_re "$"))) (re.++ (re.+ (re.union (str.to_re "%") (str.to_re "&&"))) (re.++ (re.union (re.+ (str.to_re "''")) (re.* (str.to_re "((("))) (re.++ (re.* (re.+ (str.to_re "))"))) (re.++ (re.+ (re.+ (str.to_re "*"))) (re.++ (re.* (re.union (str.to_re "+++") (str.to_re ",,,"))) (re.++ (re.* (re.+ (str.to_re "---"))) (re.++ (re.union (re.* (str.to_re ".")) (re.* (str.to_re "///"))) (re.++ (re.* (re.* (str.to_re "::"))) (re.++ (re.union (re.union (str.to_re ";;") (str.to_re "<<<")) (re.union (str.to_re "=") (str.to_re ">>"))) (re.++ (re.union (re.union (str.to_re "?") (str.to_re "@")) (re.* (str.to_re "[[["))) (re.++ (re.union (re.+ (str.to_re "\\\\")) (re.* (str.to_re "]]"))) (re.++ (re.+ (re.+ (str.to_re "^^"))) (re.++ (re.union (re.* (str.to_re "___")) (re.union (str.to_re "``") (str.to_re "{{"))) (re.++ (re.+ (re.union (str.to_re "|||") (str.to_re "}}}"))) (re.++ (re.+ (re.union (str.to_re "~~") (str.to_re "00"))) (re.++ (re.* (re.* (str.to_re "1"))) (re.++ (re.* (re.* (str.to_re "2"))) (re.++ (re.* (re.* (str.to_re "3"))) (re.++ (re.union (re.* (str.to_re "444")) (re.* (str.to_re "555"))) (re.++ (re.union (re.+ (str.to_re "66")) (re.union (str.to_re "7") (str.to_re "8"))) (re.++ (re.union (re.union (str.to_re "9") (str.to_re "a")) (re.+ (str.to_re "bb"))) (re.++ (re.* (re.union (str.to_re "cc") (str.to_re "d"))) (re.++ (re.* (re.* (str.to_re "eee"))) (re.++ (re.union (re.union (str.to_re "f") (str.to_re "gg")) (re.+ (str.to_re "hhh"))) (re.++ (re.union (re.+ (str.to_re "ii")) (re.+ (str.to_re "jj"))) (re.++ (re.union (re.+ (str.to_re "k")) (re.union (str.to_re "ll") (str.to_re "m"))) (re.++ (re.* (re.union (str.to_re "nnn") (str.to_re "ooo"))) (re.++ (re.union (re.+ (str.to_re "ppp")) (re.union (str.to_re "qq") (str.to_re "rr"))) (re.++ (re.* (re.+ (str.to_re "sss"))) (re.++ (re.* (re.+ (str.to_re "ttt"))) (re.++ (re.+ (re.+ (str.to_re "uu"))) (re.++ (re.* (re.+ (str.to_re "vv"))) (re.++ (re.union (re.union (str.to_re "www") (str.to_re "xx")) (re.* (str.to_re "y"))) (re.++ (re.* (re.* (str.to_re "zz"))) (re.++ (re.union (re.* (str.to_re "AA")) (re.+ (str.to_re "B"))) (re.++ (re.union (re.* (str.to_re "CCC")) (re.* (str.to_re "DDD"))) (re.++ (re.* (re.union (str.to_re "EEE") (str.to_re "F"))) (re.++ (re.+ (re.union (str.to_re "GGG") (str.to_re "HH"))) (re.++ (re.+ (re.+ (str.to_re "III"))) (re.++ (re.* (re.+ (str.to_re "JJ"))) (re.++ (re.* (re.* (str.to_re "KKK"))) (re.++ (re.union (re.* (str.to_re "LL")) (re.* (str.to_re "MM"))) (re.++ (re.+ (re.* (str.to_re "NNN"))) (re.++ (re.+ (re.union (str.to_re "OOO") (str.to_re "PPP"))) (re.++ (re.* (re.union (str.to_re "QQQ") (str.to_re "R"))) (re.++ (re.union (re.union (str.to_re "SS") (str.to_re "T")) (re.+ (str.to_re "UU"))) (re.++ (re.+ (re.+ (str.to_re "VVV"))) (re.++ (re.+ (re.* (str.to_re "WW"))) (re.++ (re.+ (re.+ (str.to_re "X"))) (re.++ (re.+ (re.union (str.to_re "Y") (str.to_re "Z"))) (re.++ (re.* (re.* (str.to_re "!"))) (re.++ (re.* (re.* (str.to_re """"""))) (re.++ (re.union (re.union (str.to_re "##") (str.to_re "$")) (re.union (str.to_re "%%") (str.to_re "&&"))) (re.++ (re.union (re.+ (str.to_re "'''")) (re.union (str.to_re "(((") (str.to_re ")))"))) (re.++ (re.* (re.+ (str.to_re "**"))) (re.++ (re.* (re.union (str.to_re "+") (str.to_re ",,,"))) (re.++ (re.* (re.+ (str.to_re "--"))) (re.++ (re.union (re.* (str.to_re ".")) (re.* (str.to_re "/"))) (re.++ (re.* (re.union (str.to_re ":::") (str.to_re ";;;"))) (re.++ (re.union (re.union (str.to_re "<<<") (str.to_re "==")) (re.union (str.to_re ">") (str.to_re "??"))) (re.++ (re.+ (re.union (str.to_re "@") (str.to_re "[["))) (re.++ (re.* (re.* (str.to_re "\\"))) (re.++ (re.* (re.* (str.to_re "]"))) (re.++ (re.* (re.+ (str.to_re "^^^"))) (re.++ (re.+ (re.union (str.to_re "__") (str.to_re "`"))) (re.++ (re.union (re.* (str.to_re "{")) (re.union (str.to_re "|") (str.to_re "}}"))) (re.++ (re.+ (re.+ (str.to_re "~"))) (re.++ (re.* (re.* (str.to_re "0"))) (re.++ (re.union (re.+ (str.to_re "11")) (re.+ (str.to_re "22"))) (re.++ (re.* (re.+ (str.to_re "33"))) (re.++ (re.union (re.* (str.to_re "444")) (re.union (str.to_re "5") (str.to_re "666"))) (re.++ (re.+ (re.union (str.to_re "777") (str.to_re "8"))) (re.++ (re.* (re.union (str.to_re "9") (str.to_re "a"))) (re.++ (re.union (re.* (str.to_re "bbb")) (re.+ (str.to_re "ccc"))) (re.++ (re.* (re.union (str.to_re "ddd") (str.to_re "ee"))) (re.++ (re.* (re.+ (str.to_re "ff"))) (re.++ (re.* (re.union (str.to_re "ggg") (str.to_re "h"))) (re.++ (re.+ (re.* (str.to_re "i"))) (re.++ (re.union (re.union (str.to_re "j") (str.to_re "kkk")) (re.* (str.to_re "ll"))) (re.++ (re.union (re.* (str.to_re "mmm")) (re.+ (str.to_re "n"))) (re.++ (re.* (re.union (str.to_re "o") (str.to_re "p"))) (re.++ (re.* (re.* (str.to_re "q"))) (re.++ (re.union (re.+ (str.to_re "rrr")) (re.union (str.to_re "s") (str.to_re "ttt"))) (re.++ (re.* (re.* (str.to_re "uu"))) (re.++ (re.union (re.* (str.to_re "vv")) (re.+ (str.to_re "ww"))) (re.++ (re.union (re.union (str.to_re "xx") (str.to_re "yyy")) (re.* (str.to_re "z"))) (re.++ (re.* (re.+ (str.to_re "AAA"))) (re.++ (re.* (re.* (str.to_re "B"))) (re.++ (re.union (re.* (str.to_re "C")) (re.union (str.to_re "DD") (str.to_re "EE"))) (re.++ (re.* (re.+ (str.to_re "F"))) (re.++ (re.union (re.union (str.to_re "G") (str.to_re "H")) (re.* (str.to_re "I"))) (re.++ (re.union (re.+ (str.to_re "JJ")) (re.+ (str.to_re "K"))) (re.++ (re.union (re.* (str.to_re "LLL")) (re.* (str.to_re "M"))) (re.++ (re.+ (re.union (str.to_re "N") (str.to_re "OO"))) (re.++ (re.* (re.union (str.to_re "P") (str.to_re "QQQ"))) (re.* (re.union (str.to_re "RRR") (str.to_re "SSS")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
