(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (str.to_re "00")) (re.union (str.to_re "111") (str.to_re "2"))) (re.++ (re.* (re.* (str.to_re "33"))) (re.++ (re.+ (re.union (str.to_re "4") (str.to_re "5"))) (re.++ (re.* (re.* (str.to_re "6"))) (re.++ (re.* (re.union (str.to_re "777") (str.to_re "88"))) (re.++ (re.+ (re.union (str.to_re "9") (str.to_re "a"))) (re.++ (re.union (re.union (str.to_re "bb") (str.to_re "cc")) (re.* (str.to_re "d"))) (re.++ (re.union (re.* (str.to_re "ee")) (re.union (str.to_re "f") (str.to_re "ggg"))) (re.++ (re.union (re.+ (str.to_re "hhh")) (re.union (str.to_re "iii") (str.to_re "jj"))) (re.++ (re.* (re.union (str.to_re "k") (str.to_re "lll"))) (re.++ (re.* (re.* (str.to_re "mm"))) (re.++ (re.* (re.+ (str.to_re "nn"))) (re.++ (re.+ (re.* (str.to_re "o"))) (re.++ (re.union (re.union (str.to_re "pp") (str.to_re "qq")) (re.union (str.to_re "rrr") (str.to_re "sss"))) (re.++ (re.* (re.* (str.to_re "ttt"))) (re.++ (re.* (re.* (str.to_re "uuu"))) (re.++ (re.* (re.+ (str.to_re "v"))) (re.++ (re.union (re.* (str.to_re "w")) (re.union (str.to_re "xxx") (str.to_re "yyy"))) (re.++ (re.union (re.+ (str.to_re "z")) (re.union (str.to_re "AA") (str.to_re "BB"))) (re.++ (re.+ (re.* (str.to_re "CCC"))) (re.++ (re.* (re.* (str.to_re "DD"))) (re.++ (re.+ (re.union (str.to_re "EE") (str.to_re "FF"))) (re.++ (re.+ (re.+ (str.to_re "GGG"))) (re.++ (re.+ (re.+ (str.to_re "H"))) (re.++ (re.* (re.+ (str.to_re "III"))) (re.++ (re.* (re.* (str.to_re "JJJ"))) (re.++ (re.+ (re.union (str.to_re "K") (str.to_re "LL"))) (re.++ (re.union (re.union (str.to_re "MMM") (str.to_re "N")) (re.+ (str.to_re "OO"))) (re.++ (re.+ (re.* (str.to_re "PP"))) (re.++ (re.union (re.union (str.to_re "QQQ") (str.to_re "RRR")) (re.+ (str.to_re "SSS"))) (re.++ (re.+ (re.union (str.to_re "TT") (str.to_re "U"))) (re.++ (re.union (re.* (str.to_re "V")) (re.* (str.to_re "WW"))) (re.++ (re.+ (re.* (str.to_re "XX"))) (re.++ (re.+ (re.* (str.to_re "Y"))) (re.++ (re.union (re.union (str.to_re "Z") (str.to_re "!")) (re.* (str.to_re """"""""))) (re.++ (re.* (re.+ (str.to_re "#"))) (re.++ (re.union (re.* (str.to_re "$$")) (re.* (str.to_re "%%%"))) (re.++ (re.+ (re.* (str.to_re "&&&"))) (re.++ (re.+ (re.+ (str.to_re "'"))) (re.++ (re.* (re.union (str.to_re "(") (str.to_re ")"))) (re.++ (re.union (re.* (str.to_re "*")) (re.+ (str.to_re "++"))) (re.++ (re.+ (re.* (str.to_re ",,,"))) (re.++ (re.union (re.union (str.to_re "---") (str.to_re ".")) (re.+ (str.to_re "//"))) (re.++ (re.union (re.union (str.to_re ":") (str.to_re ";;;")) (re.+ (str.to_re "<<<"))) (re.++ (re.+ (re.+ (str.to_re "==="))) (re.++ (re.* (re.union (str.to_re ">>>") (str.to_re "???"))) (re.++ (re.union (re.+ (str.to_re "@@@")) (re.* (str.to_re "[["))) (re.++ (re.+ (re.+ (str.to_re "\\"))) (re.++ (re.+ (re.* (str.to_re "]]]"))) (re.++ (re.* (re.union (str.to_re "^^^") (str.to_re "___"))) (re.++ (re.* (re.union (str.to_re "``") (str.to_re "{"))) (re.++ (re.* (re.+ (str.to_re "|"))) (re.++ (re.* (re.+ (str.to_re "}"))) (re.++ (re.+ (re.* (str.to_re "~"))) (re.++ (re.* (re.* (str.to_re "00"))) (re.++ (re.+ (re.union (str.to_re "1") (str.to_re "22"))) (re.++ (re.+ (re.+ (str.to_re "3"))) (re.++ (re.+ (re.* (str.to_re "444"))) (re.++ (re.+ (re.* (str.to_re "5"))) (re.++ (re.* (re.* (str.to_re "666"))) (re.++ (re.+ (re.union (str.to_re "777") (str.to_re "888"))) (re.++ (re.* (re.+ (str.to_re "99"))) (re.++ (re.union (re.* (str.to_re "a")) (re.union (str.to_re "b") (str.to_re "ccc"))) (re.++ (re.+ (re.* (str.to_re "ddd"))) (re.++ (re.+ (re.* (str.to_re "eee"))) (re.++ (re.* (re.* (str.to_re "f"))) (re.++ (re.* (re.union (str.to_re "gg") (str.to_re "hhh"))) (re.++ (re.union (re.union (str.to_re "iii") (str.to_re "j")) (re.union (str.to_re "kkk") (str.to_re "lll"))) (re.++ (re.+ (re.+ (str.to_re "m"))) (re.++ (re.* (re.+ (str.to_re "nn"))) (re.union (re.union (str.to_re "o") (str.to_re "ppp")) (re.union (str.to_re "qqq") (str.to_re "rr")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
