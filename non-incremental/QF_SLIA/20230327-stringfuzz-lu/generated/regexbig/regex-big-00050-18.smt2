(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "0"))) (re.++ (re.* (re.* (str.to_re "11"))) (re.++ (re.+ (re.* (str.to_re "2"))) (re.++ (re.+ (re.+ (str.to_re "33"))) (re.++ (re.union (re.union (str.to_re "44") (str.to_re "555")) (re.+ (str.to_re "666"))) (re.++ (re.union (re.* (str.to_re "7")) (re.union (str.to_re "888") (str.to_re "99"))) (re.++ (re.union (re.* (str.to_re "a")) (re.* (str.to_re "bbb"))) (re.++ (re.+ (re.+ (str.to_re "ccc"))) (re.++ (re.union (re.union (str.to_re "ddd") (str.to_re "ee")) (re.union (str.to_re "f") (str.to_re "ggg"))) (re.++ (re.* (re.* (str.to_re "hhh"))) (re.++ (re.* (re.+ (str.to_re "ii"))) (re.++ (re.* (re.union (str.to_re "jj") (str.to_re "kkk"))) (re.++ (re.union (re.* (str.to_re "l")) (re.union (str.to_re "mm") (str.to_re "n"))) (re.++ (re.+ (re.union (str.to_re "oo") (str.to_re "ppp"))) (re.++ (re.* (re.* (str.to_re "qqq"))) (re.++ (re.* (re.union (str.to_re "rr") (str.to_re "ss"))) (re.++ (re.union (re.* (str.to_re "t")) (re.+ (str.to_re "uu"))) (re.++ (re.+ (re.+ (str.to_re "vvv"))) (re.++ (re.+ (re.union (str.to_re "www") (str.to_re "xx"))) (re.++ (re.union (re.union (str.to_re "yyy") (str.to_re "zz")) (re.union (str.to_re "AAA") (str.to_re "BB"))) (re.++ (re.union (re.union (str.to_re "CC") (str.to_re "DDD")) (re.union (str.to_re "E") (str.to_re "F"))) (re.++ (re.union (re.union (str.to_re "GGG") (str.to_re "HHH")) (re.union (str.to_re "II") (str.to_re "JJJ"))) (re.++ (re.* (re.+ (str.to_re "KK"))) (re.++ (re.* (re.+ (str.to_re "LLL"))) (re.++ (re.* (re.+ (str.to_re "MMM"))) (re.++ (re.union (re.* (str.to_re "NNN")) (re.+ (str.to_re "O"))) (re.++ (re.union (re.* (str.to_re "PP")) (re.+ (str.to_re "QQ"))) (re.++ (re.* (re.* (str.to_re "RR"))) (re.++ (re.+ (re.+ (str.to_re "SSS"))) (re.++ (re.+ (re.union (str.to_re "TTT") (str.to_re "UUU"))) (re.++ (re.+ (re.union (str.to_re "V") (str.to_re "WWW"))) (re.++ (re.* (re.+ (str.to_re "XXX"))) (re.++ (re.* (re.+ (str.to_re "YY"))) (re.++ (re.* (re.union (str.to_re "ZZZ") (str.to_re "!"))) (re.++ (re.union (re.union (str.to_re """") (str.to_re "#")) (re.+ (str.to_re "$"))) (re.++ (re.union (re.* (str.to_re "%%")) (re.* (str.to_re "&&&"))) (re.++ (re.union (re.union (str.to_re "'''") (str.to_re "((")) (re.union (str.to_re ")") (str.to_re "***"))) (re.++ (re.* (re.* (str.to_re "+++"))) (re.++ (re.union (re.+ (str.to_re ",,")) (re.union (str.to_re "-") (str.to_re "..."))) (re.++ (re.+ (re.* (str.to_re "/"))) (re.++ (re.* (re.+ (str.to_re ":"))) (re.++ (re.+ (re.union (str.to_re ";") (str.to_re "<<<"))) (re.++ (re.+ (re.* (str.to_re "="))) (re.++ (re.union (re.union (str.to_re ">>") (str.to_re "??")) (re.union (str.to_re "@@") (str.to_re "["))) (re.++ (re.+ (re.* (str.to_re "\\"))) (re.++ (re.union (re.union (str.to_re "]") (str.to_re "^^")) (re.union (str.to_re "___") (str.to_re "```"))) (re.++ (re.union (re.+ (str.to_re "{{")) (re.* (str.to_re "|"))) (re.++ (re.+ (re.+ (str.to_re "}"))) (re.++ (re.* (re.* (str.to_re "~~"))) (re.+ (re.+ (str.to_re "000"))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
