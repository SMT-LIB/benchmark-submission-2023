(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "000") (str.to_re "111"))) (re.++ (re.union (re.union (str.to_re "22") (str.to_re "33")) (re.union (str.to_re "4") (str.to_re "55"))) (re.++ (re.* (re.+ (str.to_re "66"))) (re.++ (re.+ (re.union (str.to_re "77") (str.to_re "88"))) (re.++ (re.union (re.* (str.to_re "9")) (re.* (str.to_re "a"))) (re.++ (re.+ (re.* (str.to_re "bb"))) (re.++ (re.* (re.union (str.to_re "ccc") (str.to_re "d"))) (re.++ (re.union (re.+ (str.to_re "eee")) (re.* (str.to_re "f"))) (re.++ (re.* (re.+ (str.to_re "ggg"))) (re.++ (re.+ (re.union (str.to_re "hhh") (str.to_re "iii"))) (re.++ (re.* (re.* (str.to_re "jj"))) (re.++ (re.* (re.* (str.to_re "k"))) (re.++ (re.union (re.union (str.to_re "l") (str.to_re "mm")) (re.union (str.to_re "n") (str.to_re "o"))) (re.++ (re.union (re.union (str.to_re "p") (str.to_re "qq")) (re.* (str.to_re "rr"))) (re.++ (re.union (re.+ (str.to_re "s")) (re.* (str.to_re "tt"))) (re.++ (re.+ (re.union (str.to_re "uu") (str.to_re "vvv"))) (re.++ (re.union (re.union (str.to_re "w") (str.to_re "x")) (re.+ (str.to_re "yyy"))) (re.++ (re.+ (re.+ (str.to_re "z"))) (re.++ (re.* (re.* (str.to_re "A"))) (re.++ (re.+ (re.union (str.to_re "B") (str.to_re "C"))) (re.++ (re.+ (re.+ (str.to_re "DDD"))) (re.++ (re.+ (re.* (str.to_re "EE"))) (re.++ (re.+ (re.union (str.to_re "FF") (str.to_re "G"))) (re.++ (re.union (re.union (str.to_re "H") (str.to_re "III")) (re.+ (str.to_re "JJJ"))) (re.++ (re.+ (re.union (str.to_re "KKK") (str.to_re "LLL"))) (re.++ (re.union (re.+ (str.to_re "M")) (re.union (str.to_re "N") (str.to_re "OO"))) (re.++ (re.union (re.+ (str.to_re "PPP")) (re.* (str.to_re "QQQ"))) (re.++ (re.union (re.+ (str.to_re "RRR")) (re.+ (str.to_re "SSS"))) (re.++ (re.union (re.* (str.to_re "T")) (re.+ (str.to_re "UUU"))) (re.++ (re.+ (re.+ (str.to_re "VVV"))) (re.++ (re.+ (re.* (str.to_re "WWW"))) (re.++ (re.+ (re.* (str.to_re "X"))) (re.++ (re.* (re.* (str.to_re "YYY"))) (re.++ (re.* (re.* (str.to_re "ZZ"))) (re.++ (re.+ (re.+ (str.to_re "!"))) (re.++ (re.+ (re.union (str.to_re """""") (str.to_re "##"))) (re.++ (re.+ (re.union (str.to_re "$") (str.to_re "%%"))) (re.++ (re.union (re.union (str.to_re "&") (str.to_re "'''")) (re.* (str.to_re "((("))) (re.++ (re.+ (re.union (str.to_re "))") (str.to_re "*"))) (re.++ (re.+ (re.+ (str.to_re "+"))) (re.++ (re.union (re.+ (str.to_re ",")) (re.+ (str.to_re "-"))) (re.++ (re.+ (re.union (str.to_re "..") (str.to_re "/"))) (re.++ (re.union (re.* (str.to_re ":")) (re.* (str.to_re ";;"))) (re.++ (re.* (re.* (str.to_re "<<"))) (re.++ (re.* (re.* (str.to_re "="))) (re.++ (re.union (re.union (str.to_re ">>>") (str.to_re "???")) (re.* (str.to_re "@@"))) (re.++ (re.+ (re.+ (str.to_re "[[["))) (re.++ (re.* (re.* (str.to_re "\\\\\\"))) (re.++ (re.+ (re.+ (str.to_re "]"))) (re.++ (re.+ (re.+ (str.to_re "^^"))) (re.++ (re.+ (re.+ (str.to_re "__"))) (re.++ (re.* (re.union (str.to_re "```") (str.to_re "{{"))) (re.++ (re.+ (re.+ (str.to_re "|"))) (re.++ (re.+ (re.* (str.to_re "}}}"))) (re.++ (re.+ (re.union (str.to_re "~~") (str.to_re "000"))) (re.++ (re.+ (re.* (str.to_re "11"))) (re.++ (re.* (re.* (str.to_re "222"))) (re.++ (re.+ (re.+ (str.to_re "333"))) (re.++ (re.+ (re.+ (str.to_re "44"))) (re.++ (re.+ (re.+ (str.to_re "555"))) (re.++ (re.+ (re.+ (str.to_re "666"))) (re.++ (re.union (re.+ (str.to_re "7")) (re.union (str.to_re "8") (str.to_re "99"))) (re.++ (re.+ (re.+ (str.to_re "a"))) (re.++ (re.* (re.union (str.to_re "bb") (str.to_re "ccc"))) (re.++ (re.* (re.+ (str.to_re "d"))) (re.++ (re.+ (re.union (str.to_re "ee") (str.to_re "fff"))) (re.++ (re.* (re.union (str.to_re "ggg") (str.to_re "h"))) (re.++ (re.* (re.union (str.to_re "ii") (str.to_re "jjj"))) (re.++ (re.+ (re.union (str.to_re "k") (str.to_re "l"))) (re.++ (re.* (re.union (str.to_re "mm") (str.to_re "nn"))) (re.++ (re.union (re.* (str.to_re "o")) (re.union (str.to_re "pp") (str.to_re "q"))) (re.++ (re.+ (re.union (str.to_re "r") (str.to_re "sss"))) (re.++ (re.union (re.union (str.to_re "ttt") (str.to_re "u")) (re.* (str.to_re "vv"))) (re.++ (re.+ (re.union (str.to_re "w") (str.to_re "xx"))) (re.++ (re.+ (re.union (str.to_re "y") (str.to_re "z"))) (re.++ (re.+ (re.* (str.to_re "A"))) (re.++ (re.+ (re.union (str.to_re "BB") (str.to_re "CC"))) (re.++ (re.union (re.union (str.to_re "D") (str.to_re "E")) (re.+ (str.to_re "FF"))) (re.++ (re.union (re.+ (str.to_re "GGG")) (re.* (str.to_re "HHH"))) (re.++ (re.* (re.+ (str.to_re "I"))) (re.++ (re.* (re.union (str.to_re "JJJ") (str.to_re "KKK"))) (re.++ (re.* (re.union (str.to_re "LLL") (str.to_re "MMM"))) (re.++ (re.union (re.* (str.to_re "NN")) (re.union (str.to_re "OO") (str.to_re "P"))) (re.++ (re.union (re.* (str.to_re "QQ")) (re.* (str.to_re "RRR"))) (re.* (re.union (str.to_re "SSS") (str.to_re "T")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
