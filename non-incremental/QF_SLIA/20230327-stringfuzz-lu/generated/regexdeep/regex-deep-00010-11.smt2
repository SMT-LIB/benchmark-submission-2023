(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (re.union (re.* (re.union (re.+ (re.* (re.union (re.+ (re.union (str.to_re "00") (str.to_re "111"))) (re.* (re.union (str.to_re "222") (str.to_re "333")))))) (re.union (re.+ (re.union (re.+ (re.union (str.to_re "444") (str.to_re "555"))) (re.union (re.+ (str.to_re "666")) (re.+ (str.to_re "77"))))) (re.union (re.* (re.union (re.* (str.to_re "888")) (re.+ (str.to_re "99")))) (re.+ (re.union (re.union (str.to_re "aa") (str.to_re "b")) (re.+ (str.to_re "cc")))))))) (re.union (re.* (re.+ (re.* (re.+ (re.+ (re.union (str.to_re "ddd") (str.to_re "ee"))))))) (re.* (re.* (re.* (re.union (re.* (re.* (str.to_re "f"))) (re.union (re.* (str.to_re "ggg")) (re.* (str.to_re "h"))))))))) (re.* (re.union (re.union (re.union (re.* (re.* (re.* (re.union (str.to_re "iii") (str.to_re "jjj"))))) (re.union (re.* (re.+ (re.union (str.to_re "k") (str.to_re "ll")))) (re.+ (re.* (re.+ (str.to_re "m")))))) (re.+ (re.* (re.union (re.union (re.union (str.to_re "n") (str.to_re "ooo")) (re.* (str.to_re "pp"))) (re.+ (re.union (str.to_re "qq") (str.to_re "rrr"))))))) (re.+ (re.+ (re.union (re.* (re.* (re.+ (str.to_re "s")))) (re.* (re.+ (re.* (str.to_re "t")))))))))) (re.+ (re.union (re.union (re.* (re.union (re.union (re.+ (re.* (re.+ (str.to_re "uu")))) (re.* (re.* (re.+ (str.to_re "vv"))))) (re.* (re.+ (re.+ (re.+ (str.to_re "www"))))))) (re.+ (re.+ (re.union (re.+ (re.union (re.+ (str.to_re "xx")) (re.union (str.to_re "yy") (str.to_re "zz")))) (re.+ (re.+ (re.union (str.to_re "AA") (str.to_re "BBB")))))))) (re.+ (re.* (re.* (re.+ (re.* (re.+ (re.* (str.to_re "CC"))))))))))) (re.union (re.+ (re.union (re.* (re.+ (re.union (re.+ (re.* (re.+ (re.* (str.to_re "DDD"))))) (re.* (re.* (re.union (re.union (str.to_re "EEE") (str.to_re "FFF")) (re.* (str.to_re "GG")))))))) (re.+ (re.* (re.+ (re.+ (re.union (re.* (re.union (str.to_re "H") (str.to_re "III"))) (re.* (re.union (str.to_re "JJJ") (str.to_re "KKK")))))))))) (re.* (re.union (re.+ (re.union (re.+ (re.union (re.+ (re.* (re.* (str.to_re "L")))) (re.+ (re.+ (re.union (str.to_re "MM") (str.to_re "NNN")))))) (re.+ (re.* (re.union (re.union (re.+ (str.to_re "O")) (re.union (str.to_re "P") (str.to_re "QQQ"))) (re.* (re.+ (str.to_re "RRR")))))))) (re.* (re.+ (re.* (re.union (re.+ (re.union (re.union (str.to_re "SS") (str.to_re "TT")) (re.+ (str.to_re "UUU")))) (re.+ (re.+ (re.union (str.to_re "V") (str.to_re "WWW"))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
