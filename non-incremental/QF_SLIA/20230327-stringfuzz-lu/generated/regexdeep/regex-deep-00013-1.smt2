(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (re.* (re.* (re.+ (re.* (re.* (re.union (re.union (re.* (re.union (re.* (re.union (str.to_re "0") (str.to_re "1"))) (re.+ (re.union (str.to_re "222") (str.to_re "333"))))) (re.* (re.+ (re.union (re.union (str.to_re "444") (str.to_re "555")) (re.+ (str.to_re "66")))))) (re.union (re.union (re.* (re.* (re.union (str.to_re "7") (str.to_re "8")))) (re.* (re.* (re.union (str.to_re "99") (str.to_re "aa"))))) (re.* (re.union (re.union (re.+ (str.to_re "bbb")) (re.union (str.to_re "c") (str.to_re "d"))) (re.union (re.* (str.to_re "ee")) (re.+ (str.to_re "f")))))))))))) (re.union (re.* (re.* (re.* (re.* (re.+ (re.* (re.union (re.union (re.union (re.+ (str.to_re "gg")) (re.* (str.to_re "hhh"))) (re.union (re.* (str.to_re "ii")) (re.union (str.to_re "jjj") (str.to_re "k")))) (re.union (re.+ (re.* (str.to_re "lll"))) (re.union (re.+ (str.to_re "m")) (re.+ (str.to_re "n"))))))))))) (re.* (re.union (re.union (re.union (re.* (re.union (re.union (re.* (re.* (re.union (str.to_re "o") (str.to_re "pp")))) (re.union (re.* (re.* (str.to_re "qqq"))) (re.+ (re.union (str.to_re "rr") (str.to_re "s"))))) (re.+ (re.* (re.+ (re.union (str.to_re "t") (str.to_re "u"))))))) (re.union (re.* (re.+ (re.+ (re.* (re.+ (str.to_re "vvv")))))) (re.+ (re.* (re.union (re.+ (re.* (str.to_re "ww"))) (re.* (re.* (str.to_re "xx")))))))) (re.* (re.union (re.union (re.union (re.+ (re.* (re.+ (str.to_re "y")))) (re.+ (re.* (re.union (str.to_re "z") (str.to_re "A"))))) (re.+ (re.+ (re.* (re.+ (str.to_re "B")))))) (re.* (re.+ (re.union (re.* (re.+ (str.to_re "C"))) (re.union (re.union (str.to_re "DDD") (str.to_re "EE")) (re.+ (str.to_re "F"))))))))) (re.* (re.* (re.+ (re.union (re.union (re.+ (re.* (re.+ (str.to_re "G")))) (re.* (re.union (re.* (str.to_re "HH")) (re.* (str.to_re "I"))))) (re.+ (re.* (re.* (re.* (str.to_re "J"))))))))))))) (re.+ (re.* (re.+ (re.* (re.* (re.union (re.* (re.* (re.union (re.* (re.* (re.* (str.to_re "K")))) (re.+ (re.+ (re.+ (str.to_re "L"))))))) (re.+ (re.+ (re.+ (re.+ (re.* (re.+ (str.to_re "MMM")))))))))))))) (re.union (re.* (re.+ (re.* (re.union (re.* (re.+ (re.+ (re.+ (re.* (re.+ (re.* (re.+ (str.to_re "N"))))))))) (re.* (re.union (re.+ (re.* (re.* (re.* (re.+ (re.* (str.to_re "O"))))))) (re.+ (re.union (re.union (re.+ (re.union (re.union (str.to_re "PP") (str.to_re "Q")) (re.* (str.to_re "R")))) (re.union (re.* (re.+ (str.to_re "SSS"))) (re.union (re.+ (str.to_re "TT")) (re.union (str.to_re "UUU") (str.to_re "VVV"))))) (re.* (re.union (re.+ (re.+ (str.to_re "WW"))) (re.+ (re.+ (str.to_re "XXX"))))))))))))) (re.union (re.* (re.* (re.union (re.union (re.union (re.union (re.+ (re.+ (re.+ (re.+ (re.* (str.to_re "YY")))))) (re.+ (re.+ (re.* (re.* (re.+ (str.to_re "ZZZ"))))))) (re.* (re.* (re.* (re.* (re.* (re.+ (str.to_re "!!!")))))))) (re.+ (re.+ (re.union (re.* (re.+ (re.union (re.* (str.to_re """")) (re.+ (str.to_re "#"))))) (re.+ (re.union (re.* (re.+ (str.to_re "$"))) (re.* (re.* (str.to_re "%%%"))))))))) (re.+ (re.* (re.* (re.* (re.* (re.* (re.* (re.union (str.to_re "&&&") (str.to_re "'")))))))))))) (re.union (re.+ (re.+ (re.+ (re.+ (re.union (re.* (re.union (re.+ (re.+ (re.+ (str.to_re "(")))) (re.+ (re.* (re.union (str.to_re ")))") (str.to_re "***")))))) (re.+ (re.union (re.union (re.union (re.* (str.to_re "++")) (re.+ (str.to_re ",,,"))) (re.+ (re.+ (str.to_re "---")))) (re.+ (re.union (re.* (str.to_re "..")) (re.union (str.to_re "///") (str.to_re ":"))))))))))) (re.* (re.union (re.union (re.union (re.+ (re.+ (re.union (re.* (re.* (re.* (str.to_re ";;")))) (re.union (re.union (re.union (str.to_re "<<") (str.to_re "=")) (re.+ (str.to_re ">"))) (re.union (re.* (str.to_re "???")) (re.+ (str.to_re "@"))))))) (re.union (re.+ (re.union (re.+ (re.* (re.+ (str.to_re "[")))) (re.+ (re.* (re.union (str.to_re "\\\\\\") (str.to_re "]]")))))) (re.union (re.union (re.union (re.* (re.+ (str.to_re "^"))) (re.+ (re.union (str.to_re "___") (str.to_re "```")))) (re.* (re.* (re.* (str.to_re "{{{"))))) (re.* (re.* (re.+ (re.+ (str.to_re "||")))))))) (re.* (re.union (re.* (re.* (re.union (re.+ (re.* (str.to_re "}}"))) (re.union (re.+ (str.to_re "~~~")) (re.* (str.to_re "0")))))) (re.* (re.* (re.+ (re.* (re.+ (str.to_re "11"))))))))) (re.union (re.union (re.union (re.* (re.* (re.union (re.+ (re.+ (str.to_re "2"))) (re.* (re.union (str.to_re "3") (str.to_re "4")))))) (re.+ (re.+ (re.* (re.+ (re.union (str.to_re "5") (str.to_re "6"))))))) (re.union (re.+ (re.* (re.union (re.* (re.union (str.to_re "777") (str.to_re "8"))) (re.union (re.union (str.to_re "999") (str.to_re "aaa")) (re.union (str.to_re "bbb") (str.to_re "ccc")))))) (re.+ (re.* (re.* (re.* (re.union (str.to_re "d") (str.to_re "eee")))))))) (re.union (re.* (re.* (re.* (re.* (re.* (re.union (str.to_re "f") (str.to_re "ggg"))))))) (re.+ (re.+ (re.union (re.* (re.union (re.* (str.to_re "hhh")) (re.union (str.to_re "i") (str.to_re "j")))) (re.+ (re.+ (re.union (str.to_re "k") (str.to_re "lll")))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
