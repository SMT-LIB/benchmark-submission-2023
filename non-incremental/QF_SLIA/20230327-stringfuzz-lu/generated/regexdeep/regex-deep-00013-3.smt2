(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (re.union (re.* (re.* (re.union (re.* (re.union (re.union (re.union (re.+ (re.* (re.+ (str.to_re "000")))) (re.union (re.+ (re.union (str.to_re "111") (str.to_re "222"))) (re.* (re.* (str.to_re "3"))))) (re.* (re.+ (re.union (re.+ (str.to_re "444")) (re.+ (str.to_re "55")))))) (re.union (re.+ (re.union (re.union (re.* (str.to_re "666")) (re.+ (str.to_re "777"))) (re.union (re.+ (str.to_re "888")) (re.union (str.to_re "9") (str.to_re "a"))))) (re.* (re.+ (re.union (re.union (str.to_re "bb") (str.to_re "ccc")) (re.+ (str.to_re "ddd")))))))) (re.union (re.+ (re.+ (re.union (re.+ (re.* (re.* (str.to_re "eee")))) (re.union (re.* (re.union (str.to_re "f") (str.to_re "gg"))) (re.union (re.+ (str.to_re "hhh")) (re.union (str.to_re "ii") (str.to_re "j"))))))) (re.+ (re.* (re.union (re.+ (re.union (re.* (str.to_re "kk")) (re.union (str.to_re "l") (str.to_re "mm")))) (re.+ (re.+ (re.+ (str.to_re "nnn"))))))))))) (re.union (re.* (re.* (re.union (re.union (re.+ (re.+ (re.+ (re.* (re.+ (str.to_re "ooo")))))) (re.* (re.+ (re.union (re.union (re.* (str.to_re "p")) (re.* (str.to_re "q"))) (re.* (re.* (str.to_re "rr"))))))) (re.union (re.union (re.union (re.union (re.union (re.* (str.to_re "sss")) (re.+ (str.to_re "t"))) (re.+ (re.union (str.to_re "uu") (str.to_re "vv")))) (re.* (re.+ (re.+ (str.to_re "www"))))) (re.* (re.+ (re.* (re.union (str.to_re "x") (str.to_re "yy")))))) (re.union (re.+ (re.union (re.+ (re.union (str.to_re "zzz") (str.to_re "AAA"))) (re.+ (re.* (str.to_re "BB"))))) (re.union (re.* (re.union (re.* (str.to_re "CC")) (re.* (str.to_re "DD")))) (re.+ (re.+ (re.+ (str.to_re "E")))))))))) (re.+ (re.+ (re.* (re.+ (re.union (re.+ (re.union (re.* (re.+ (str.to_re "F"))) (re.+ (re.union (str.to_re "GG") (str.to_re "H"))))) (re.+ (re.+ (re.+ (re.* (str.to_re "I"))))))))))))) (re.+ (re.union (re.* (re.+ (re.* (re.+ (re.* (re.union (re.+ (re.* (re.* (re.union (str.to_re "JJJ") (str.to_re "KKK"))))) (re.+ (re.+ (re.+ (re.* (str.to_re "L"))))))))))) (re.union (re.+ (re.* (re.+ (re.+ (re.union (re.+ (re.union (re.+ (re.union (str.to_re "MM") (str.to_re "NN"))) (re.union (re.+ (str.to_re "OO")) (re.+ (str.to_re "PPP"))))) (re.* (re.+ (re.+ (re.* (str.to_re "QQ")))))))))) (re.union (re.* (re.+ (re.+ (re.+ (re.* (re.+ (re.* (re.union (str.to_re "R") (str.to_re "SSS"))))))))) (re.union (re.+ (re.union (re.* (re.+ (re.* (re.union (re.+ (str.to_re "TTT")) (re.union (str.to_re "U") (str.to_re "VVV")))))) (re.union (re.* (re.* (re.union (re.* (str.to_re "WWW")) (re.union (str.to_re "XX") (str.to_re "Y"))))) (re.+ (re.+ (re.* (re.* (str.to_re "ZZZ")))))))) (re.union (re.+ (re.+ (re.union (re.+ (re.+ (re.* (str.to_re "!!")))) (re.union (re.* (re.union (str.to_re """""""") (str.to_re "#"))) (re.+ (re.* (str.to_re "$$"))))))) (re.union (re.* (re.+ (re.+ (re.* (re.* (str.to_re "%")))))) (re.* (re.+ (re.+ (re.+ (re.union (str.to_re "&") (str.to_re "''")))))))))))))) (re.+ (re.+ (re.union (re.+ (re.union (re.* (re.* (re.union (re.union (re.* (re.union (re.union (re.+ (str.to_re "(")) (re.+ (str.to_re ")))"))) (re.union (re.* (str.to_re "**")) (re.* (str.to_re "++"))))) (re.union (re.+ (re.union (re.+ (str.to_re ",")) (re.union (str.to_re "-") (str.to_re "..")))) (re.+ (re.+ (re.* (str.to_re "//")))))) (re.* (re.* (re.union (re.union (re.union (str.to_re "::") (str.to_re ";")) (re.* (str.to_re "<<<"))) (re.+ (re.* (str.to_re "="))))))))) (re.union (re.union (re.+ (re.* (re.* (re.+ (re.union (re.* (str.to_re ">>>")) (re.+ (str.to_re "?"))))))) (re.+ (re.union (re.+ (re.+ (re.union (re.+ (str.to_re "@")) (re.union (str.to_re "[") (str.to_re "\\\\\\"))))) (re.union (re.+ (re.union (re.+ (str.to_re "]")) (re.+ (str.to_re "^")))) (re.* (re.+ (re.+ (str.to_re "___")))))))) (re.union (re.* (re.* (re.union (re.* (re.+ (re.* (str.to_re "```")))) (re.union (re.+ (re.* (str.to_re "{"))) (re.* (re.+ (str.to_re "||"))))))) (re.+ (re.+ (re.union (re.+ (re.+ (re.* (str.to_re "}}")))) (re.* (re.+ (re.union (str.to_re "~") (str.to_re "00"))))))))))) (re.* (re.+ (re.+ (re.union (re.* (re.+ (re.union (re.* (re.* (re.union (str.to_re "111") (str.to_re "22")))) (re.union (re.union (re.* (str.to_re "33")) (re.* (str.to_re "44"))) (re.union (re.+ (str.to_re "55")) (re.+ (str.to_re "666"))))))) (re.union (re.union (re.+ (re.+ (re.union (re.* (str.to_re "777")) (re.+ (str.to_re "88"))))) (re.+ (re.+ (re.+ (re.+ (str.to_re "99")))))) (re.* (re.union (re.union (re.union (re.+ (str.to_re "aaa")) (re.+ (str.to_re "bbb"))) (re.union (re.+ (str.to_re "cc")) (re.* (str.to_re "dd")))) (re.union (re.+ (re.* (str.to_re "eee"))) (re.+ (re.+ (str.to_re "ff")))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
