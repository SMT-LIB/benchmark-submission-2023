(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (re.union (re.union (re.+ (re.union (re.union (re.+ (re.union (re.+ (re.union (re.* (re.+ (str.to_re "00"))) (re.+ (re.+ (str.to_re "111"))))) (re.* (re.* (re.union (re.union (str.to_re "22") (str.to_re "33")) (re.+ (str.to_re "44"))))))) (re.+ (re.+ (re.+ (re.union (re.+ (re.+ (str.to_re "5"))) (re.* (re.* (str.to_re "6")))))))) (re.+ (re.+ (re.+ (re.+ (re.union (re.union (re.+ (str.to_re "7")) (re.* (str.to_re "88"))) (re.+ (re.* (str.to_re "999")))))))))) (re.union (re.+ (re.union (re.union (re.+ (re.union (re.+ (re.union (re.+ (str.to_re "a")) (re.* (str.to_re "bbb")))) (re.union (re.* (re.union (str.to_re "cc") (str.to_re "dd"))) (re.* (re.union (str.to_re "ee") (str.to_re "ff")))))) (re.union (re.+ (re.+ (re.union (re.* (str.to_re "gg")) (re.union (str.to_re "hhh") (str.to_re "iii"))))) (re.* (re.+ (re.union (re.union (str.to_re "jjj") (str.to_re "kkk")) (re.* (str.to_re "ll"))))))) (re.union (re.+ (re.+ (re.* (re.union (re.+ (str.to_re "mm")) (re.+ (str.to_re "n")))))) (re.+ (re.* (re.union (re.+ (re.union (str.to_re "ooo") (str.to_re "ppp"))) (re.+ (re.union (str.to_re "qqq") (str.to_re "rrr"))))))))) (re.+ (re.* (re.* (re.* (re.* (re.+ (re.union (re.+ (str.to_re "s")) (re.+ (str.to_re "tt"))))))))))) (re.union (re.* (re.+ (re.* (re.union (re.+ (re.union (re.union (re.* (re.union (str.to_re "u") (str.to_re "vv"))) (re.+ (re.+ (str.to_re "w")))) (re.union (re.+ (re.union (str.to_re "xx") (str.to_re "yyy"))) (re.union (re.* (str.to_re "zzz")) (re.union (str.to_re "A") (str.to_re "BBB")))))) (re.* (re.+ (re.union (re.+ (re.union (str.to_re "CCC") (str.to_re "DD"))) (re.union (re.union (str.to_re "E") (str.to_re "FF")) (re.union (str.to_re "G") (str.to_re "H")))))))))) (re.+ (re.* (re.union (re.* (re.union (re.union (re.* (re.union (re.* (str.to_re "I")) (re.* (str.to_re "JJ")))) (re.union (re.union (re.* (str.to_re "KKK")) (re.+ (str.to_re "LL"))) (re.+ (re.* (str.to_re "MMM"))))) (re.+ (re.+ (re.+ (re.union (str.to_re "NN") (str.to_re "OO"))))))) (re.union (re.* (re.* (re.union (re.* (re.+ (str.to_re "PP"))) (re.union (re.union (str.to_re "Q") (str.to_re "RR")) (re.+ (str.to_re "SSS")))))) (re.union (re.* (re.union (re.+ (re.+ (str.to_re "TT"))) (re.union (re.union (str.to_re "U") (str.to_re "VVV")) (re.+ (str.to_re "WWW"))))) (re.union (re.* (re.+ (re.+ (str.to_re "X")))) (re.* (re.* (re.+ (str.to_re "YY")))))))))))))) (re.+ (re.* (re.union (re.union (re.union (re.+ (re.+ (re.+ (re.* (re.union (re.* (re.union (re.+ (str.to_re "ZZZ")) (re.* (str.to_re "!!!")))) (re.+ (re.union (re.union (str.to_re """""") (str.to_re "###")) (re.+ (str.to_re "$$"))))))))) (re.* (re.+ (re.* (re.+ (re.union (re.* (re.* (re.union (str.to_re "%") (str.to_re "&")))) (re.* (re.union (re.union (str.to_re "'''") (str.to_re "(")) (re.* (str.to_re "))")))))))))) (re.* (re.+ (re.union (re.* (re.union (re.union (re.union (re.* (re.+ (str.to_re "***"))) (re.* (re.* (str.to_re "++")))) (re.+ (re.union (re.+ (str.to_re ",,")) (re.* (str.to_re "-"))))) (re.* (re.+ (re.+ (re.+ (str.to_re "."))))))) (re.* (re.+ (re.union (re.* (re.* (re.+ (str.to_re "//")))) (re.+ (re.+ (re.* (str.to_re "::"))))))))))) (re.+ (re.+ (re.* (re.union (re.* (re.union (re.union (re.+ (re.+ (re.+ (str.to_re ";;")))) (re.* (re.* (re.* (str.to_re "<"))))) (re.* (re.+ (re.* (re.* (str.to_re "==="))))))) (re.union (re.+ (re.* (re.+ (re.* (re.union (str.to_re ">>>") (str.to_re "???")))))) (re.+ (re.+ (re.* (re.* (re.+ (str.to_re "@@@")))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
