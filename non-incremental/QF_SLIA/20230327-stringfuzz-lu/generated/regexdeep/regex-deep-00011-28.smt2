(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (re.* (re.* (re.union (re.+ (re.* (re.+ (re.* (re.union (re.* (str.to_re "0")) (re.+ (str.to_re "1"))))))) (re.union (re.union (re.union (re.union (re.union (re.union (str.to_re "2") (str.to_re "3")) (re.* (str.to_re "44"))) (re.union (re.* (str.to_re "55")) (re.union (str.to_re "66") (str.to_re "77")))) (re.+ (re.union (re.union (str.to_re "888") (str.to_re "9")) (re.union (str.to_re "aa") (str.to_re "b"))))) (re.union (re.union (re.* (re.* (str.to_re "ccc"))) (re.+ (re.* (str.to_re "d")))) (re.+ (re.* (re.union (str.to_re "e") (str.to_re "f")))))) (re.+ (re.+ (re.* (re.* (re.* (str.to_re "g")))))))))) (re.union (re.+ (re.union (re.* (re.union (re.+ (re.* (re.* (re.* (str.to_re "hhh"))))) (re.* (re.+ (re.+ (re.union (str.to_re "iii") (str.to_re "j"))))))) (re.* (re.+ (re.* (re.* (re.union (re.union (str.to_re "kk") (str.to_re "lll")) (re.+ (str.to_re "mmm"))))))))) (re.* (re.+ (re.+ (re.union (re.* (re.union (re.union (re.* (str.to_re "nnn")) (re.+ (str.to_re "o"))) (re.* (re.+ (str.to_re "pp"))))) (re.union (re.union (re.* (re.+ (str.to_re "qq"))) (re.union (re.union (str.to_re "rr") (str.to_re "sss")) (re.* (str.to_re "t")))) (re.+ (re.union (re.* (str.to_re "uuu")) (re.+ (str.to_re "v")))))))))))) (re.* (re.* (re.union (re.* (re.union (re.union (re.+ (re.* (re.* (re.+ (re.+ (str.to_re "w")))))) (re.union (re.+ (re.union (re.union (re.union (str.to_re "x") (str.to_re "yy")) (re.+ (str.to_re "zz"))) (re.+ (re.* (str.to_re "A"))))) (re.+ (re.* (re.* (re.* (str.to_re "B"))))))) (re.union (re.+ (re.* (re.* (re.union (re.union (str.to_re "CCC") (str.to_re "DD")) (re.+ (str.to_re "E")))))) (re.* (re.union (re.+ (re.union (re.+ (str.to_re "FFF")) (re.* (str.to_re "GGG")))) (re.* (re.union (re.+ (str.to_re "HH")) (re.* (str.to_re "I"))))))))) (re.* (re.+ (re.union (re.+ (re.union (re.* (re.+ (re.union (str.to_re "JJ") (str.to_re "K")))) (re.+ (re.* (re.* (str.to_re "L")))))) (re.union (re.* (re.union (re.union (re.* (str.to_re "MM")) (re.union (str.to_re "NNN") (str.to_re "OO"))) (re.* (re.* (str.to_re "P"))))) (re.union (re.* (re.+ (re.* (str.to_re "Q")))) (re.+ (re.union (re.union (str.to_re "RRR") (str.to_re "S")) (re.+ (str.to_re "TT")))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
