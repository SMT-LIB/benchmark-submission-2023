(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (re.* (re.+ (re.* (re.* (re.* (re.+ (re.union (re.union (re.* (re.union (re.union (re.* (str.to_re "0")) (re.* (str.to_re "1"))) (re.* (re.+ (str.to_re "2"))))) (re.union (re.* (re.union (re.* (str.to_re "333")) (re.* (str.to_re "4")))) (re.* (re.union (re.+ (str.to_re "555")) (re.+ (str.to_re "66")))))) (re.union (re.union (re.+ (re.union (re.* (str.to_re "7")) (re.union (str.to_re "888") (str.to_re "9")))) (re.+ (re.union (re.union (str.to_re "a") (str.to_re "bb")) (re.* (str.to_re "ccc"))))) (re.union (re.union (re.* (re.* (str.to_re "dd"))) (re.* (re.* (str.to_re "eee")))) (re.union (re.+ (re.+ (str.to_re "f"))) (re.+ (re.+ (str.to_re "gg"))))))))))))) (re.* (re.union (re.+ (re.+ (re.+ (re.* (re.* (re.* (re.* (re.+ (re.+ (re.* (str.to_re "h"))))))))))) (re.union (re.union (re.+ (re.* (re.* (re.+ (re.+ (re.+ (re.union (re.* (str.to_re "i")) (re.+ (str.to_re "jjj"))))))))) (re.union (re.* (re.* (re.+ (re.union (re.union (re.union (re.union (str.to_re "kkk") (str.to_re "l")) (re.union (str.to_re "mm") (str.to_re "n"))) (re.union (re.+ (str.to_re "ooo")) (re.union (str.to_re "ppp") (str.to_re "qqq")))) (re.+ (re.+ (re.* (str.to_re "rr")))))))) (re.* (re.* (re.union (re.+ (re.+ (re.union (re.union (str.to_re "ss") (str.to_re "t")) (re.* (str.to_re "uu"))))) (re.union (re.* (re.* (re.union (str.to_re "vv") (str.to_re "ww")))) (re.union (re.* (re.* (str.to_re "xx"))) (re.+ (re.union (str.to_re "yyy") (str.to_re "zz")))))))))) (re.union (re.+ (re.* (re.+ (re.+ (re.* (re.* (re.* (re.+ (str.to_re "AA"))))))))) (re.+ (re.union (re.* (re.+ (re.+ (re.+ (re.* (re.union (str.to_re "B") (str.to_re "CCC"))))))) (re.union (re.+ (re.union (re.+ (re.* (re.union (str.to_re "DD") (str.to_re "EEE")))) (re.* (re.* (re.union (str.to_re "FFF") (str.to_re "G")))))) (re.+ (re.+ (re.union (re.union (re.+ (str.to_re "HHH")) (re.* (str.to_re "III"))) (re.union (re.* (str.to_re "JJJ")) (re.* (str.to_re "KK"))))))))))))))) (re.union (re.* (re.+ (re.+ (re.* (re.union (re.union (re.union (re.union (re.+ (re.union (re.+ (re.* (re.union (str.to_re "LLL") (str.to_re "MM")))) (re.union (re.+ (re.union (str.to_re "N") (str.to_re "OOO"))) (re.union (re.* (str.to_re "P")) (re.union (str.to_re "QQQ") (str.to_re "RRR")))))) (re.+ (re.* (re.+ (re.+ (re.union (str.to_re "SSS") (str.to_re "T"))))))) (re.union (re.union (re.+ (re.union (re.* (re.union (str.to_re "U") (str.to_re "VV"))) (re.* (re.+ (str.to_re "WW"))))) (re.union (re.union (re.+ (re.+ (str.to_re "XXX"))) (re.* (re.* (str.to_re "Y")))) (re.+ (re.union (re.+ (str.to_re "Z")) (re.* (str.to_re "!!")))))) (re.union (re.union (re.union (re.* (re.+ (str.to_re """"))) (re.* (re.union (str.to_re "###") (str.to_re "$$")))) (re.* (re.union (re.* (str.to_re "%%")) (re.* (str.to_re "&"))))) (re.* (re.union (re.* (re.* (str.to_re "''"))) (re.+ (re.* (str.to_re "((")))))))) (re.+ (re.* (re.+ (re.+ (re.* (re.union (re.* (str.to_re ")")) (re.union (str.to_re "***") (str.to_re "+++"))))))))) (re.union (re.union (re.* (re.+ (re.* (re.union (re.union (re.* (str.to_re ",,")) (re.+ (str.to_re "--"))) (re.union (re.+ (str.to_re "..")) (re.* (str.to_re "/"))))))) (re.+ (re.* (re.+ (re.* (re.union (re.+ (str.to_re "::")) (re.union (str.to_re ";;;") (str.to_re "<<")))))))) (re.union (re.* (re.union (re.* (re.+ (re.union (re.union (str.to_re "==") (str.to_re ">>>")) (re.union (str.to_re "??") (str.to_re "@@"))))) (re.* (re.union (re.union (re.* (str.to_re "[[[")) (re.* (str.to_re "\\"))) (re.* (re.+ (str.to_re "]"))))))) (re.+ (re.+ (re.union (re.* (re.union (re.+ (str.to_re "^")) (re.* (str.to_re "__")))) (re.+ (re.+ (re.+ (str.to_re "```")))))))))))))) (re.* (re.union (re.union (re.union (re.union (re.+ (re.+ (re.* (re.union (re.* (re.union (re.union (re.union (str.to_re "{{") (str.to_re "|")) (re.* (str.to_re "}}}"))) (re.* (re.* (str.to_re "~~~"))))) (re.union (re.* (re.+ (re.* (str.to_re "00")))) (re.* (re.+ (re.* (str.to_re "111"))))))))) (re.+ (re.union (re.* (re.union (re.union (re.union (re.union (re.* (str.to_re "2")) (re.union (str.to_re "3") (str.to_re "44"))) (re.+ (re.* (str.to_re "555")))) (re.+ (re.* (re.union (str.to_re "6") (str.to_re "7"))))) (re.+ (re.union (re.* (re.+ (str.to_re "8"))) (re.union (re.+ (str.to_re "9")) (re.* (str.to_re "aa"))))))) (re.* (re.union (re.union (re.+ (re.+ (re.+ (str.to_re "bbb")))) (re.union (re.union (re.* (str.to_re "c")) (re.* (str.to_re "dd"))) (re.+ (re.+ (str.to_re "e"))))) (re.+ (re.union (re.* (re.+ (str.to_re "f"))) (re.* (re.union (str.to_re "ggg") (str.to_re "h")))))))))) (re.* (re.+ (re.union (re.union (re.union (re.* (re.+ (re.+ (re.+ (str.to_re "ii"))))) (re.* (re.union (re.* (re.union (str.to_re "j") (str.to_re "kkk"))) (re.+ (re.* (str.to_re "ll")))))) (re.+ (re.+ (re.+ (re.+ (re.union (str.to_re "m") (str.to_re "nn"))))))) (re.+ (re.+ (re.union (re.union (re.* (re.+ (str.to_re "ooo"))) (re.union (re.+ (str.to_re "p")) (re.* (str.to_re "qq")))) (re.union (re.+ (re.union (str.to_re "rrr") (str.to_re "ss"))) (re.union (re.+ (str.to_re "tt")) (re.* (str.to_re "u"))))))))))) (re.+ (re.* (re.+ (re.union (re.+ (re.* (re.+ (re.union (re.+ (re.+ (str.to_re "v"))) (re.union (re.+ (str.to_re "ww")) (re.+ (str.to_re "xxx"))))))) (re.* (re.union (re.union (re.+ (re.union (re.+ (str.to_re "yyy")) (re.+ (str.to_re "z")))) (re.* (re.union (re.+ (str.to_re "AAA")) (re.union (str.to_re "BB") (str.to_re "C"))))) (re.* (re.union (re.union (re.union (str.to_re "DD") (str.to_re "EEE")) (re.+ (str.to_re "F"))) (re.+ (re.+ (str.to_re "GGG")))))))))))) (re.+ (re.union (re.* (re.+ (re.+ (re.union (re.+ (re.+ (re.+ (re.* (re.+ (str.to_re "H")))))) (re.* (re.union (re.* (re.union (re.* (str.to_re "II")) (re.+ (str.to_re "JJJ")))) (re.+ (re.union (re.+ (str.to_re "KK")) (re.union (str.to_re "LL") (str.to_re "M")))))))))) (re.+ (re.+ (re.* (re.union (re.union (re.union (re.* (re.union (re.+ (str.to_re "NNN")) (re.+ (str.to_re "O")))) (re.+ (re.* (re.union (str.to_re "P") (str.to_re "QQQ"))))) (re.union (re.* (re.+ (re.union (str.to_re "RR") (str.to_re "S")))) (re.* (re.* (re.* (str.to_re "T")))))) (re.+ (re.* (re.* (re.+ (re.+ (str.to_re "U"))))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
