(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (re.+ (re.union (re.+ (re.union (re.* (re.* (re.union (re.* (re.union (re.union (re.* (str.to_re "000")) (re.* (str.to_re "1"))) (re.union (re.* (str.to_re "222")) (re.union (str.to_re "3") (str.to_re "4"))))) (re.* (re.* (re.+ (re.+ (str.to_re "555")))))))) (re.+ (re.+ (re.+ (re.+ (re.union (re.+ (re.* (str.to_re "6"))) (re.union (re.union (str.to_re "7") (str.to_re "8")) (re.* (str.to_re "999")))))))))) (re.* (re.+ (re.+ (re.* (re.* (re.union (re.+ (re.union (re.* (str.to_re "aaa")) (re.union (str.to_re "bbb") (str.to_re "cc")))) (re.+ (re.* (re.union (str.to_re "dd") (str.to_re "ee"))))))))))))) (re.* (re.union (re.* (re.* (re.* (re.* (re.+ (re.* (re.+ (re.union (re.union (re.* (str.to_re "ff")) (re.union (str.to_re "g") (str.to_re "hh"))) (re.+ (re.+ (str.to_re "i"))))))))))) (re.union (re.* (re.* (re.* (re.* (re.union (re.* (re.* (re.* (re.* (str.to_re "j"))))) (re.union (re.* (re.+ (re.* (str.to_re "kk")))) (re.* (re.+ (re.union (str.to_re "l") (str.to_re "mm")))))))))) (re.* (re.+ (re.+ (re.union (re.* (re.union (re.union (re.* (re.+ (str.to_re "nn"))) (re.+ (re.* (str.to_re "o")))) (re.union (re.* (re.* (str.to_re "pp"))) (re.union (re.union (str.to_re "qq") (str.to_re "rrr")) (re.+ (str.to_re "sss")))))) (re.union (re.* (re.+ (re.+ (re.union (str.to_re "tt") (str.to_re "u"))))) (re.+ (re.union (re.* (re.+ (str.to_re "vv"))) (re.union (re.+ (str.to_re "w")) (re.* (str.to_re "xx")))))))))))))) (re.+ (re.+ (re.+ (re.union (re.union (re.+ (re.+ (re.union (re.+ (re.union (re.+ (re.union (re.union (str.to_re "yy") (str.to_re "z")) (re.union (str.to_re "AA") (str.to_re "BBB")))) (re.+ (re.union (re.union (str.to_re "CCC") (str.to_re "DD")) (re.+ (str.to_re "EEE")))))) (re.+ (re.union (re.union (re.+ (re.+ (str.to_re "F"))) (re.+ (re.* (str.to_re "G")))) (re.union (re.union (re.+ (str.to_re "HHH")) (re.+ (str.to_re "II"))) (re.union (re.* (str.to_re "J")) (re.union (str.to_re "KKK") (str.to_re "L"))))))))) (re.+ (re.* (re.* (re.* (re.* (re.+ (re.* (re.* (str.to_re "MMM")))))))))) (re.union (re.+ (re.+ (re.* (re.union (re.union (re.+ (re.+ (re.* (str.to_re "NN")))) (re.* (re.* (re.union (str.to_re "O") (str.to_re "PP"))))) (re.+ (re.* (re.+ (re.+ (str.to_re "QQQ"))))))))) (re.* (re.* (re.+ (re.union (re.* (re.* (re.+ (re.+ (str.to_re "RRR"))))) (re.union (re.* (re.+ (re.+ (str.to_re "SS")))) (re.* (re.union (re.+ (str.to_re "TT")) (re.union (str.to_re "UUU") (str.to_re "VVV")))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
