(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (re.* (re.+ (re.union (re.+ (re.+ (re.union (re.union (re.* (re.* (re.+ (str.to_re "000")))) (re.+ (re.* (re.* (str.to_re "111"))))) (re.union (re.+ (re.union (re.+ (str.to_re "2")) (re.* (str.to_re "3")))) (re.+ (re.union (re.+ (str.to_re "4")) (re.* (str.to_re "55")))))))) (re.union (re.+ (re.union (re.+ (re.* (re.union (re.union (str.to_re "6") (str.to_re "77")) (re.union (str.to_re "888") (str.to_re "9"))))) (re.union (re.union (re.* (re.union (str.to_re "aa") (str.to_re "b"))) (re.* (re.union (str.to_re "cc") (str.to_re "ddd")))) (re.union (re.* (re.union (str.to_re "ee") (str.to_re "ff"))) (re.* (re.union (str.to_re "gg") (str.to_re "hh"))))))) (re.union (re.* (re.* (re.* (re.+ (re.+ (str.to_re "ii")))))) (re.+ (re.union (re.+ (re.* (re.union (str.to_re "j") (str.to_re "kk")))) (re.* (re.union (re.+ (str.to_re "ll")) (re.+ (str.to_re "m"))))))))))) (re.* (re.* (re.union (re.union (re.+ (re.* (re.* (re.+ (re.+ (re.* (str.to_re "n"))))))) (re.+ (re.+ (re.union (re.+ (re.union (re.+ (str.to_re "o")) (re.+ (str.to_re "pp")))) (re.union (re.+ (re.* (str.to_re "q"))) (re.union (re.* (str.to_re "r")) (re.+ (str.to_re "ss")))))))) (re.union (re.+ (re.* (re.union (re.* (re.* (re.+ (str.to_re "ttt")))) (re.* (re.union (re.+ (str.to_re "uu")) (re.+ (str.to_re "vv"))))))) (re.union (re.* (re.union (re.union (re.* (re.+ (str.to_re "www"))) (re.union (re.+ (str.to_re "xxx")) (re.+ (str.to_re "yy")))) (re.+ (re.+ (re.union (str.to_re "zz") (str.to_re "AAA")))))) (re.+ (re.union (re.* (re.union (re.union (str.to_re "BB") (str.to_re "CC")) (re.+ (str.to_re "DD")))) (re.* (re.* (re.union (str.to_re "EE") (str.to_re "FF")))))))))))) (re.union (re.+ (re.union (re.union (re.* (re.union (re.* (re.* (re.* (re.* (re.* (str.to_re "G")))))) (re.union (re.* (re.+ (re.+ (re.union (str.to_re "HH") (str.to_re "I"))))) (re.* (re.+ (re.+ (re.+ (str.to_re "JJJ")))))))) (re.union (re.+ (re.* (re.+ (re.union (re.* (re.* (str.to_re "KKK"))) (re.union (re.* (str.to_re "LLL")) (re.* (str.to_re "MMM"))))))) (re.+ (re.* (re.* (re.* (re.+ (re.union (str.to_re "NNN") (str.to_re "OOO"))))))))) (re.union (re.* (re.+ (re.+ (re.+ (re.* (re.* (re.* (str.to_re "P")))))))) (re.union (re.union (re.+ (re.+ (re.+ (re.union (re.* (str.to_re "QQQ")) (re.* (str.to_re "R")))))) (re.union (re.+ (re.* (re.union (re.union (str.to_re "SS") (str.to_re "TT")) (re.* (str.to_re "U"))))) (re.* (re.+ (re.union (re.union (str.to_re "V") (str.to_re "W")) (re.+ (str.to_re "X"))))))) (re.+ (re.union (re.union (re.union (re.* (re.* (str.to_re "YY"))) (re.* (re.+ (str.to_re "ZZ")))) (re.union (re.+ (re.* (str.to_re "!"))) (re.union (re.* (str.to_re """""""")) (re.union (str.to_re "#") (str.to_re "$"))))) (re.* (re.+ (re.union (re.union (str.to_re "%") (str.to_re "&")) (re.+ (str.to_re "'''"))))))))))) (re.+ (re.union (re.union (re.* (re.+ (re.* (re.* (re.union (re.* (re.union (str.to_re "(") (str.to_re ")))"))) (re.union (re.* (str.to_re "***")) (re.union (str.to_re "++") (str.to_re ",")))))))) (re.* (re.+ (re.union (re.+ (re.union (re.union (re.union (str.to_re "-") (str.to_re "..")) (re.union (str.to_re "/") (str.to_re "::"))) (re.* (re.union (str.to_re ";;;") (str.to_re "<<"))))) (re.* (re.union (re.+ (re.+ (str.to_re "==="))) (re.* (re.+ (str.to_re ">>"))))))))) (re.union (re.+ (re.+ (re.* (re.* (re.union (re.* (re.union (str.to_re "??") (str.to_re "@@"))) (re.+ (re.+ (str.to_re "[")))))))) (re.union (re.* (re.+ (re.+ (re.+ (re.union (re.+ (str.to_re "\\\\")) (re.* (str.to_re "]"))))))) (re.+ (re.union (re.union (re.* (re.union (re.+ (str.to_re "^^^")) (re.* (str.to_re "_")))) (re.union (re.+ (re.+ (str.to_re "```"))) (re.* (re.union (str.to_re "{{") (str.to_re "|"))))) (re.* (re.* (re.* (re.union (str.to_re "}}") (str.to_re "~~"))))))))))))) (re.* (re.* (re.union (re.union (re.+ (re.union (re.union (re.+ (re.* (re.union (re.union (re.+ (str.to_re "0")) (re.+ (str.to_re "111"))) (re.* (re.union (str.to_re "222") (str.to_re "3")))))) (re.+ (re.+ (re.+ (re.+ (re.+ (str.to_re "4"))))))) (re.* (re.* (re.union (re.union (re.* (re.+ (str.to_re "5"))) (re.union (re.+ (str.to_re "666")) (re.* (str.to_re "77")))) (re.+ (re.* (re.union (str.to_re "88") (str.to_re "9"))))))))) (re.* (re.+ (re.* (re.+ (re.+ (re.union (re.* (re.* (str.to_re "aaa"))) (re.* (re.union (str.to_re "bbb") (str.to_re "ccc")))))))))) (re.+ (re.union (re.* (re.union (re.* (re.union (re.+ (re.union (re.+ (str.to_re "d")) (re.+ (str.to_re "e")))) (re.* (re.union (re.+ (str.to_re "f")) (re.+ (str.to_re "ggg")))))) (re.union (re.union (re.union (re.* (re.* (str.to_re "h"))) (re.+ (re.+ (str.to_re "ii")))) (re.+ (re.+ (re.+ (str.to_re "jj"))))) (re.* (re.union (re.union (re.* (str.to_re "kkk")) (re.+ (str.to_re "lll"))) (re.* (re.union (str.to_re "m") (str.to_re "nnn")))))))) (re.union (re.* (re.union (re.union (re.* (re.+ (re.* (str.to_re "ooo")))) (re.union (re.* (re.union (str.to_re "p") (str.to_re "q"))) (re.union (re.union (str.to_re "rr") (str.to_re "s")) (re.union (str.to_re "tt") (str.to_re "u"))))) (re.+ (re.+ (re.* (re.* (str.to_re "vv"))))))) (re.union (re.+ (re.+ (re.union (re.union (re.* (str.to_re "www")) (re.+ (str.to_re "xx"))) (re.+ (re.+ (str.to_re "y")))))) (re.* (re.+ (re.union (re.+ (re.union (str.to_re "zz") (str.to_re "AA"))) (re.+ (re.* (str.to_re "B"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
