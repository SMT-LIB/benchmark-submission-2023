(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (re.* (re.union (re.union (re.+ (re.* (re.union (re.+ (re.* (re.* (re.union (re.* (re.+ (str.to_re "00"))) (re.+ (re.+ (str.to_re "1"))))))) (re.* (re.* (re.union (re.* (re.* (re.union (str.to_re "222") (str.to_re "333")))) (re.+ (re.+ (re.+ (str.to_re "444")))))))))) (re.+ (re.+ (re.* (re.+ (re.+ (re.union (re.* (re.union (re.union (str.to_re "555") (str.to_re "6")) (re.union (str.to_re "7") (str.to_re "8")))) (re.union (re.+ (re.* (str.to_re "9"))) (re.* (re.union (str.to_re "a") (str.to_re "bb"))))))))))) (re.* (re.* (re.+ (re.* (re.* (re.+ (re.* (re.union (re.union (re.union (str.to_re "cc") (str.to_re "d")) (re.union (str.to_re "e") (str.to_re "fff"))) (re.+ (re.union (str.to_re "ggg") (str.to_re "hh"))))))))))))) (re.+ (re.* (re.union (re.union (re.union (re.* (re.* (re.union (re.union (re.+ (re.union (re.union (str.to_re "i") (str.to_re "jj")) (re.* (str.to_re "kkk")))) (re.union (re.union (re.union (str.to_re "lll") (str.to_re "m")) (re.union (str.to_re "nnn") (str.to_re "oo"))) (re.+ (re.union (str.to_re "pp") (str.to_re "q"))))) (re.union (re.union (re.* (re.union (str.to_re "r") (str.to_re "ss"))) (re.+ (re.+ (str.to_re "ttt")))) (re.* (re.* (re.+ (str.to_re "uuu")))))))) (re.+ (re.+ (re.union (re.union (re.union (re.* (re.* (str.to_re "v"))) (re.+ (re.* (str.to_re "ww")))) (re.union (re.* (re.* (str.to_re "x"))) (re.+ (re.union (str.to_re "yyy") (str.to_re "zzz"))))) (re.union (re.* (re.union (re.union (str.to_re "AA") (str.to_re "BB")) (re.+ (str.to_re "CC")))) (re.union (re.* (re.union (str.to_re "D") (str.to_re "EEE"))) (re.+ (re.* (str.to_re "FF"))))))))) (re.union (re.union (re.* (re.* (re.+ (re.* (re.* (re.union (str.to_re "GGG") (str.to_re "HHH"))))))) (re.+ (re.+ (re.* (re.union (re.union (re.* (str.to_re "I")) (re.union (str.to_re "J") (str.to_re "KKK"))) (re.+ (re.* (str.to_re "LL")))))))) (re.* (re.* (re.union (re.union (re.union (re.union (re.* (str.to_re "M")) (re.+ (str.to_re "NNN"))) (re.union (re.union (str.to_re "OO") (str.to_re "P")) (re.* (str.to_re "Q")))) (re.union (re.+ (re.union (str.to_re "R") (str.to_re "S"))) (re.+ (re.+ (str.to_re "TTT"))))) (re.+ (re.union (re.+ (re.+ (str.to_re "U"))) (re.* (re.union (str.to_re "VVV") (str.to_re "WWW")))))))))) (re.union (re.+ (re.* (re.+ (re.union (re.+ (re.union (re.* (re.union (str.to_re "X") (str.to_re "Y"))) (re.+ (re.* (str.to_re "ZZZ"))))) (re.+ (re.union (re.+ (re.union (str.to_re "!!") (str.to_re """"""""))) (re.+ (re.+ (str.to_re "##"))))))))) (re.+ (re.union (re.* (re.+ (re.union (re.union (re.+ (re.* (str.to_re "$$"))) (re.+ (re.union (str.to_re "%") (str.to_re "&")))) (re.* (re.* (re.+ (str.to_re "'"))))))) (re.+ (re.* (re.+ (re.* (re.+ (re.* (str.to_re "(((")))))))))))))) (re.* (re.* (re.* (re.union (re.+ (re.+ (re.* (re.+ (re.* (re.union (re.union (re.union (re.* (str.to_re "))")) (re.* (str.to_re "***"))) (re.union (re.* (str.to_re "+++")) (re.+ (str.to_re ",,")))) (re.union (re.* (re.* (str.to_re "-"))) (re.* (re.union (str.to_re "..") (str.to_re "///")))))))))) (re.+ (re.+ (re.* (re.+ (re.* (re.* (re.+ (re.* (re.union (str.to_re "::") (str.to_re ";;"))))))))))))))) (re.+ (re.union (re.* (re.union (re.union (re.* (re.+ (re.* (re.* (re.+ (re.* (re.* (re.+ (re.* (str.to_re "<")))))))))) (re.* (re.* (re.+ (re.* (re.union (re.* (re.* (re.union (re.+ (str.to_re "=")) (re.+ (str.to_re ">"))))) (re.* (re.* (re.union (re.union (str.to_re "??") (str.to_re "@")) (re.union (str.to_re "[") (str.to_re "\\\\"))))))))))) (re.union (re.+ (re.+ (re.* (re.* (re.* (re.* (re.union (re.* (re.union (str.to_re "]]") (str.to_re "^^^"))) (re.union (re.union (str.to_re "__") (str.to_re "```")) (re.union (str.to_re "{") (str.to_re "||")))))))))) (re.union (re.* (re.union (re.* (re.+ (re.+ (re.* (re.* (re.union (str.to_re "}") (str.to_re "~~"))))))) (re.+ (re.* (re.+ (re.union (re.* (re.+ (str.to_re "000"))) (re.* (re.+ (str.to_re "111"))))))))) (re.* (re.union (re.* (re.union (re.+ (re.union (re.+ (re.+ (str.to_re "22"))) (re.+ (re.+ (str.to_re "33"))))) (re.union (re.+ (re.union (re.union (str.to_re "44") (str.to_re "5")) (re.+ (str.to_re "6")))) (re.* (re.union (re.union (str.to_re "7") (str.to_re "8")) (re.union (str.to_re "99") (str.to_re "aa"))))))) (re.* (re.* (re.union (re.+ (re.* (re.union (str.to_re "b") (str.to_re "ccc")))) (re.* (re.* (re.+ (str.to_re "ddd"))))))))))))) (re.+ (re.union (re.union (re.union (re.* (re.union (re.union (re.+ (re.* (re.union (re.union (re.+ (str.to_re "eee")) (re.union (str.to_re "f") (str.to_re "gg"))) (re.union (re.* (str.to_re "h")) (re.union (str.to_re "i") (str.to_re "j")))))) (re.+ (re.union (re.union (re.union (re.+ (str.to_re "kk")) (re.* (str.to_re "ll"))) (re.+ (re.* (str.to_re "m")))) (re.* (re.union (re.* (str.to_re "nn")) (re.+ (str.to_re "oo"))))))) (re.+ (re.* (re.* (re.+ (re.* (re.+ (str.to_re "ppp"))))))))) (re.* (re.union (re.+ (re.+ (re.+ (re.+ (re.+ (re.union (str.to_re "qqq") (str.to_re "rr"))))))) (re.+ (re.* (re.+ (re.+ (re.union (re.+ (str.to_re "ss")) (re.+ (str.to_re "t")))))))))) (re.* (re.union (re.union (re.* (re.union (re.+ (re.union (re.* (re.* (str.to_re "u"))) (re.* (re.* (str.to_re "v"))))) (re.+ (re.union (re.* (re.union (str.to_re "ww") (str.to_re "xxx"))) (re.union (re.+ (str.to_re "yyy")) (re.union (str.to_re "z") (str.to_re "AAA"))))))) (re.union (re.* (re.+ (re.union (re.union (re.+ (str.to_re "B")) (re.+ (str.to_re "CCC"))) (re.* (re.* (str.to_re "DD")))))) (re.union (re.+ (re.+ (re.+ (re.* (str.to_re "EE"))))) (re.* (re.* (re.union (re.+ (str.to_re "F")) (re.* (str.to_re "GG")))))))) (re.union (re.union (re.union (re.* (re.union (re.union (re.+ (str.to_re "H")) (re.* (str.to_re "III"))) (re.+ (re.+ (str.to_re "JJ"))))) (re.* (re.+ (re.+ (re.+ (str.to_re "K")))))) (re.* (re.+ (re.* (re.union (re.union (str.to_re "LL") (str.to_re "M")) (re.union (str.to_re "N") (str.to_re "OO"))))))) (re.union (re.* (re.union (re.* (re.* (re.* (str.to_re "P")))) (re.union (re.+ (re.+ (str.to_re "Q"))) (re.+ (re.* (str.to_re "RRR")))))) (re.* (re.* (re.union (re.+ (re.union (str.to_re "SS") (str.to_re "TT"))) (re.* (re.* (str.to_re "U"))))))))))) (re.* (re.* (re.* (re.+ (re.+ (re.union (re.union (re.* (re.* (re.union (str.to_re "V") (str.to_re "W")))) (re.+ (re.+ (re.+ (str.to_re "XXX"))))) (re.+ (re.+ (re.+ (re.union (str.to_re "YYY") (str.to_re "ZZ"))))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
