(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (re.+ (re.* (re.* (re.+ (re.union (re.+ (re.* (re.* (re.+ (re.+ (re.union (re.* (str.to_re "000")) (re.union (str.to_re "11") (str.to_re "22")))))))) (re.* (re.* (re.union (re.* (re.+ (re.* (re.+ (str.to_re "333"))))) (re.+ (re.+ (re.* (re.union (str.to_re "444") (str.to_re "5")))))))))))))) (re.* (re.* (re.union (re.* (re.+ (re.union (re.* (re.* (re.union (re.union (re.+ (re.* (re.union (str.to_re "66") (str.to_re "77")))) (re.* (re.+ (re.union (str.to_re "888") (str.to_re "999"))))) (re.* (re.* (re.* (re.* (str.to_re "a")))))))) (re.* (re.* (re.+ (re.+ (re.+ (re.* (re.+ (str.to_re "bbb"))))))))))) (re.+ (re.union (re.union (re.+ (re.+ (re.+ (re.union (re.union (re.+ (re.union (str.to_re "cc") (str.to_re "dd"))) (re.* (re.+ (str.to_re "eee")))) (re.+ (re.* (re.union (str.to_re "f") (str.to_re "gg")))))))) (re.+ (re.* (re.+ (re.+ (re.+ (re.* (re.+ (str.to_re "h"))))))))) (re.+ (re.union (re.+ (re.+ (re.* (re.union (re.* (re.+ (str.to_re "ii"))) (re.union (re.union (str.to_re "jjj") (str.to_re "k")) (re.union (str.to_re "l") (str.to_re "mmm"))))))) (re.union (re.+ (re.+ (re.* (re.+ (re.+ (str.to_re "nnn")))))) (re.+ (re.+ (re.union (re.+ (re.+ (str.to_re "o"))) (re.* (re.* (str.to_re "ppp"))))))))))))))) (re.* (re.union (re.union (re.union (re.+ (re.* (re.* (re.union (re.+ (re.+ (re.* (re.* (re.* (re.* (str.to_re "qq"))))))) (re.union (re.+ (re.* (re.+ (re.* (re.* (str.to_re "rr")))))) (re.* (re.+ (re.* (re.* (re.union (str.to_re "s") (str.to_re "tt"))))))))))) (re.union (re.* (re.+ (re.+ (re.union (re.union (re.union (re.union (re.+ (re.* (str.to_re "u"))) (re.union (re.+ (str.to_re "v")) (re.* (str.to_re "w")))) (re.union (re.union (re.+ (str.to_re "xxx")) (re.union (str.to_re "yyy") (str.to_re "z"))) (re.union (re.* (str.to_re "A")) (re.union (str.to_re "BBB") (str.to_re "CC"))))) (re.+ (re.+ (re.* (re.* (str.to_re "DD")))))) (re.union (re.+ (re.+ (re.union (re.+ (str.to_re "EE")) (re.union (str.to_re "F") (str.to_re "G"))))) (re.* (re.+ (re.* (re.* (str.to_re "HHH")))))))))) (re.union (re.* (re.union (re.+ (re.+ (re.union (re.+ (re.* (re.+ (str.to_re "I")))) (re.* (re.+ (re.* (str.to_re "J"))))))) (re.+ (re.* (re.+ (re.+ (re.union (re.+ (str.to_re "KKK")) (re.union (str.to_re "LL") (str.to_re "M"))))))))) (re.union (re.* (re.* (re.union (re.* (re.+ (re.union (re.+ (str.to_re "NNN")) (re.* (str.to_re "O"))))) (re.* (re.* (re.+ (re.+ (str.to_re "PPP")))))))) (re.* (re.+ (re.union (re.union (re.* (re.+ (re.* (str.to_re "QQ")))) (re.* (re.+ (re.union (str.to_re "RRR") (str.to_re "S"))))) (re.union (re.* (re.+ (re.+ (str.to_re "TT")))) (re.* (re.union (re.+ (str.to_re "UUU")) (re.union (str.to_re "VVV") (str.to_re "W")))))))))))) (re.* (re.+ (re.+ (re.+ (re.+ (re.union (re.* (re.+ (re.* (re.* (re.+ (str.to_re "XXX")))))) (re.union (re.* (re.* (re.+ (re.union (str.to_re "YYY") (str.to_re "ZZ"))))) (re.+ (re.union (re.* (re.* (str.to_re "!"))) (re.+ (re.* (str.to_re """"))))))))))))) (re.* (re.union (re.union (re.+ (re.union (re.+ (re.* (re.union (re.union (re.* (re.* (re.union (str.to_re "#") (str.to_re "$")))) (re.union (re.union (re.* (str.to_re "%%%")) (re.+ (str.to_re "&"))) (re.* (re.+ (str.to_re "'''"))))) (re.union (re.union (re.union (re.* (str.to_re "(")) (re.+ (str.to_re ")"))) (re.* (re.union (str.to_re "***") (str.to_re "+")))) (re.* (re.union (re.union (str.to_re ",,") (str.to_re "--")) (re.* (str.to_re ".")))))))) (re.union (re.+ (re.union (re.union (re.union (re.+ (re.* (str.to_re "/"))) (re.+ (re.union (str.to_re ":") (str.to_re ";;;")))) (re.union (re.* (re.* (str.to_re "<"))) (re.union (re.union (str.to_re "==") (str.to_re ">>")) (re.union (str.to_re "?") (str.to_re "@"))))) (re.+ (re.union (re.* (re.* (str.to_re "["))) (re.* (re.union (str.to_re "\\\\\\") (str.to_re "]"))))))) (re.union (re.* (re.union (re.union (re.* (re.union (str.to_re "^^^") (str.to_re "_"))) (re.* (re.union (str.to_re "`") (str.to_re "{")))) (re.* (re.union (re.union (str.to_re "||") (str.to_re "}}")) (re.union (str.to_re "~") (str.to_re "000")))))) (re.* (re.union (re.+ (re.union (re.union (str.to_re "11") (str.to_re "222")) (re.+ (str.to_re "333")))) (re.+ (re.union (re.+ (str.to_re "44")) (re.* (str.to_re "55")))))))))) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to_re "66")) (re.union (str.to_re "7") (str.to_re "8"))) (re.* (re.union (str.to_re "9") (str.to_re "aaa")))) (re.* (re.union (re.union (str.to_re "bbb") (str.to_re "cc")) (re.* (str.to_re "ddd"))))) (re.* (re.+ (re.* (re.union (str.to_re "e") (str.to_re "fff")))))) (re.* (re.* (re.union (re.* (re.union (str.to_re "g") (str.to_re "hh"))) (re.union (re.union (str.to_re "iii") (str.to_re "jjj")) (re.* (str.to_re "kk"))))))) (re.* (re.* (re.union (re.union (re.* (re.+ (str.to_re "l"))) (re.union (re.* (str.to_re "mm")) (re.union (str.to_re "nnn") (str.to_re "o")))) (re.* (re.union (re.+ (str.to_re "pp")) (re.* (str.to_re "qqq")))))))) (re.+ (re.union (re.* (re.union (re.union (re.union (re.* (str.to_re "r")) (re.* (str.to_re "s"))) (re.* (re.+ (str.to_re "t")))) (re.union (re.+ (re.* (str.to_re "uu"))) (re.* (re.* (str.to_re "v")))))) (re.+ (re.+ (re.* (re.+ (re.union (str.to_re "www") (str.to_re "x"))))))))) (re.+ (re.union (re.union (re.* (re.union (re.* (re.+ (re.+ (str.to_re "yyy")))) (re.union (re.union (re.union (str.to_re "zzz") (str.to_re "A")) (re.+ (str.to_re "BBB"))) (re.* (re.union (str.to_re "C") (str.to_re "DD")))))) (re.+ (re.+ (re.union (re.* (re.+ (str.to_re "E"))) (re.* (re.+ (str.to_re "FFF"))))))) (re.union (re.union (re.+ (re.union (re.+ (re.+ (str.to_re "G"))) (re.* (re.union (str.to_re "HHH") (str.to_re "I"))))) (re.+ (re.* (re.union (re.* (str.to_re "JJ")) (re.union (str.to_re "KK") (str.to_re "L")))))) (re.union (re.+ (re.+ (re.+ (re.+ (str.to_re "MMM"))))) (re.+ (re.+ (re.union (re.union (str.to_re "NN") (str.to_re "OO")) (re.union (str.to_re "PP") (str.to_re "QQQ"))))))))))) (re.+ (re.* (re.+ (re.union (re.* (re.+ (re.+ (re.* (re.+ (re.* (str.to_re "RR"))))))) (re.union (re.union (re.union (re.* (re.union (re.* (str.to_re "S")) (re.+ (str.to_re "T")))) (re.+ (re.union (re.+ (str.to_re "UUU")) (re.* (str.to_re "V"))))) (re.union (re.+ (re.* (re.* (str.to_re "WWW")))) (re.* (re.+ (re.union (str.to_re "XX") (str.to_re "Y")))))) (re.+ (re.+ (re.union (re.+ (re.* (str.to_re "Z"))) (re.* (re.union (str.to_re "!!!") (str.to_re """"))))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
