(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (re.+ (re.+ (re.union (re.union (re.union (re.union (re.+ (re.union (re.union (re.+ (re.* (re.* (str.to_re "000")))) (re.union (re.union (re.* (str.to_re "1")) (re.union (str.to_re "222") (str.to_re "333"))) (re.+ (re.+ (str.to_re "4"))))) (re.* (re.* (re.+ (re.* (str.to_re "5"))))))) (re.* (re.* (re.* (re.* (re.+ (re.+ (str.to_re "66")))))))) (re.* (re.union (re.* (re.union (re.+ (re.+ (re.* (str.to_re "7")))) (re.union (re.+ (re.* (str.to_re "888"))) (re.+ (re.union (str.to_re "9") (str.to_re "aaa")))))) (re.union (re.+ (re.union (re.union (re.+ (str.to_re "bbb")) (re.union (str.to_re "c") (str.to_re "dd"))) (re.union (re.union (str.to_re "eee") (str.to_re "fff")) (re.union (str.to_re "g") (str.to_re "hhh"))))) (re.union (re.union (re.+ (re.* (str.to_re "iii"))) (re.union (re.+ (str.to_re "j")) (re.+ (str.to_re "kkk")))) (re.* (re.* (re.* (str.to_re "lll"))))))))) (re.* (re.+ (re.+ (re.* (re.+ (re.union (re.* (re.union (str.to_re "m") (str.to_re "n"))) (re.+ (re.+ (str.to_re "o")))))))))) (re.+ (re.* (re.+ (re.* (re.* (re.* (re.* (re.union (re.+ (str.to_re "p")) (re.union (str.to_re "qqq") (str.to_re "rrr"))))))))))))) (re.union (re.+ (re.+ (re.+ (re.union (re.union (re.union (re.* (re.+ (re.union (re.+ (re.union (str.to_re "ss") (str.to_re "tt"))) (re.union (re.* (str.to_re "uu")) (re.+ (str.to_re "vv")))))) (re.+ (re.union (re.+ (re.union (re.+ (str.to_re "ww")) (re.* (str.to_re "xx")))) (re.union (re.* (re.* (str.to_re "y"))) (re.union (re.+ (str.to_re "zzz")) (re.+ (str.to_re "AA"))))))) (re.+ (re.* (re.+ (re.+ (re.* (re.+ (str.to_re "BBB")))))))) (re.union (re.union (re.+ (re.* (re.* (re.+ (re.+ (str.to_re "CCC")))))) (re.union (re.+ (re.union (re.* (re.* (str.to_re "DDD"))) (re.* (re.union (str.to_re "EE") (str.to_re "FF"))))) (re.+ (re.union (re.+ (re.union (str.to_re "GG") (str.to_re "HHH"))) (re.union (re.* (str.to_re "II")) (re.+ (str.to_re "J"))))))) (re.union (re.+ (re.+ (re.+ (re.* (re.* (str.to_re "KKK")))))) (re.union (re.+ (re.* (re.union (re.* (str.to_re "L")) (re.+ (str.to_re "MMM"))))) (re.+ (re.* (re.union (re.union (str.to_re "N") (str.to_re "OO")) (re.+ (str.to_re "P")))))))))))) (re.union (re.union (re.union (re.+ (re.* (re.+ (re.+ (re.+ (re.union (re.+ (re.+ (str.to_re "Q"))) (re.+ (re.union (str.to_re "R") (str.to_re "SSS"))))))))) (re.union (re.* (re.union (re.+ (re.+ (re.+ (re.+ (re.* (str.to_re "TTT")))))) (re.union (re.+ (re.union (re.union (re.* (str.to_re "UU")) (re.* (str.to_re "V"))) (re.union (re.union (str.to_re "W") (str.to_re "X")) (re.+ (str.to_re "YY"))))) (re.union (re.* (re.+ (re.+ (str.to_re "Z")))) (re.+ (re.* (re.* (str.to_re "!")))))))) (re.* (re.* (re.* (re.* (re.union (re.+ (re.* (str.to_re """"""""))) (re.* (re.* (str.to_re "###")))))))))) (re.+ (re.union (re.+ (re.union (re.* (re.* (re.* (re.* (re.+ (str.to_re "$$")))))) (re.+ (re.union (re.+ (re.+ (re.* (str.to_re "%%%")))) (re.+ (re.union (re.* (str.to_re "&&&")) (re.union (str.to_re "'") (str.to_re "(((")))))))) (re.union (re.union (re.+ (re.union (re.+ (re.* (re.union (str.to_re "))") (str.to_re "**")))) (re.* (re.union (re.* (str.to_re "++")) (re.* (str.to_re ",")))))) (re.+ (re.union (re.union (re.* (re.union (str.to_re "--") (str.to_re ".."))) (re.* (re.union (str.to_re "/") (str.to_re ":")))) (re.union (re.* (re.* (str.to_re ";"))) (re.* (re.+ (str.to_re "<"))))))) (re.* (re.+ (re.union (re.+ (re.+ (re.+ (str.to_re "==")))) (re.+ (re.+ (re.* (str.to_re ">"))))))))))) (re.union (re.+ (re.* (re.+ (re.union (re.union (re.union (re.union (re.+ (re.* (str.to_re "?"))) (re.* (re.* (str.to_re "@@@")))) (re.+ (re.union (re.union (str.to_re "[[[") (str.to_re "\\\\")) (re.+ (str.to_re "]"))))) (re.+ (re.* (re.union (re.union (str.to_re "^^^") (str.to_re "___")) (re.* (str.to_re "``")))))) (re.+ (re.* (re.+ (re.+ (re.+ (str.to_re "{{")))))))))) (re.* (re.* (re.+ (re.+ (re.union (re.* (re.union (re.+ (re.* (str.to_re "||"))) (re.+ (re.union (str.to_re "}}") (str.to_re "~~"))))) (re.union (re.+ (re.union (re.+ (str.to_re "0")) (re.union (str.to_re "11") (str.to_re "2")))) (re.* (re.* (re.+ (str.to_re "3")))))))))))))) (re.+ (re.+ (re.+ (re.* (re.union (re.+ (re.union (re.* (re.+ (re.* (re.* (re.union (re.* (str.to_re "444")) (re.+ (str.to_re "555"))))))) (re.union (re.+ (re.union (re.union (re.+ (re.+ (str.to_re "666"))) (re.* (re.union (str.to_re "7") (str.to_re "88")))) (re.union (re.+ (re.union (str.to_re "999") (str.to_re "aaa"))) (re.* (re.* (str.to_re "b")))))) (re.+ (re.union (re.* (re.* (re.+ (str.to_re "cc")))) (re.* (re.* (re.+ (str.to_re "dd"))))))))) (re.* (re.union (re.union (re.* (re.+ (re.* (re.+ (re.+ (str.to_re "eee")))))) (re.union (re.union (re.* (re.* (re.+ (str.to_re "f")))) (re.+ (re.union (re.+ (str.to_re "g")) (re.* (str.to_re "h"))))) (re.union (re.union (re.+ (re.+ (str.to_re "i"))) (re.union (re.+ (str.to_re "j")) (re.+ (str.to_re "kkk")))) (re.* (re.union (re.union (str.to_re "l") (str.to_re "m")) (re.* (str.to_re "nn"))))))) (re.* (re.+ (re.+ (re.* (re.union (re.+ (str.to_re "ooo")) (re.* (str.to_re "ppp"))))))))))))))) (re.* (re.union (re.union (re.union (re.+ (re.+ (re.+ (re.union (re.union (re.* (re.+ (re.+ (re.* (re.+ (str.to_re "qqq")))))) (re.+ (re.+ (re.* (re.* (re.union (str.to_re "rrr") (str.to_re "sss"))))))) (re.+ (re.* (re.+ (re.* (re.+ (re.union (str.to_re "ttt") (str.to_re "u"))))))))))) (re.+ (re.+ (re.+ (re.* (re.union (re.* (re.* (re.* (re.* (re.* (str.to_re "vvv")))))) (re.* (re.+ (re.union (re.+ (re.+ (str.to_re "w"))) (re.* (re.union (str.to_re "xx") (str.to_re "y")))))))))))) (re.+ (re.+ (re.+ (re.union (re.+ (re.+ (re.* (re.union (re.union (re.+ (re.* (str.to_re "z"))) (re.* (re.+ (str.to_re "AAA")))) (re.+ (re.+ (re.union (str.to_re "BB") (str.to_re "CCC")))))))) (re.union (re.+ (re.* (re.* (re.* (re.union (re.+ (str.to_re "DD")) (re.union (str.to_re "EEE") (str.to_re "FFF"))))))) (re.* (re.* (re.union (re.+ (re.+ (re.+ (str.to_re "GG")))) (re.+ (re.+ (re.union (str.to_re "H") (str.to_re "I"))))))))))))) (re.+ (re.+ (re.union (re.union (re.+ (re.+ (re.+ (re.+ (re.+ (re.* (re.* (re.union (str.to_re "JJ") (str.to_re "K"))))))))) (re.* (re.union (re.* (re.+ (re.+ (re.union (re.+ (re.* (str.to_re "L"))) (re.union (re.union (str.to_re "M") (str.to_re "NNN")) (re.+ (str.to_re "O"))))))) (re.* (re.* (re.+ (re.+ (re.union (re.* (str.to_re "PPP")) (re.+ (str.to_re "Q")))))))))) (re.* (re.* (re.* (re.* (re.union (re.+ (re.union (re.+ (re.* (str.to_re "R"))) (re.union (re.+ (str.to_re "S")) (re.union (str.to_re "T") (str.to_re "U"))))) (re.* (re.union (re.* (re.union (str.to_re "VVV") (str.to_re "W"))) (re.union (re.+ (str.to_re "X")) (re.union (str.to_re "YY") (str.to_re "ZZ"))))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
