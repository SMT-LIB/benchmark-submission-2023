(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (re.+ (re.* (re.+ (re.+ (re.union (re.+ (re.* (re.* (re.union (re.union (str.to_re "00") (str.to_re "11")) (re.* (str.to_re "222")))))) (re.union (re.union (re.+ (re.* (re.* (str.to_re "33")))) (re.union (re.union (re.union (str.to_re "4") (str.to_re "555")) (re.+ (str.to_re "6"))) (re.union (re.+ (str.to_re "777")) (re.+ (str.to_re "88"))))) (re.+ (re.+ (re.union (re.+ (str.to_re "9")) (re.+ (str.to_re "aa"))))))))))) (re.* (re.+ (re.* (re.+ (re.+ (re.* (re.* (re.union (re.* (re.union (str.to_re "bbb") (str.to_re "cc"))) (re.+ (re.+ (str.to_re "d")))))))))))) (re.* (re.union (re.+ (re.+ (re.* (re.union (re.+ (re.+ (re.+ (re.* (re.* (str.to_re "e")))))) (re.+ (re.* (re.+ (re.+ (re.union (str.to_re "f") (str.to_re "gg")))))))))) (re.* (re.union (re.* (re.* (re.* (re.* (re.union (re.+ (re.+ (str.to_re "h"))) (re.* (re.+ (str.to_re "iii")))))))) (re.union (re.union (re.union (re.* (re.union (re.* (re.* (str.to_re "j"))) (re.* (re.+ (str.to_re "kkk"))))) (re.union (re.* (re.+ (re.+ (str.to_re "lll")))) (re.union (re.+ (re.* (str.to_re "mm"))) (re.* (re.+ (str.to_re "nnn")))))) (re.union (re.union (re.+ (re.* (re.* (str.to_re "oo")))) (re.union (re.+ (re.union (str.to_re "p") (str.to_re "qqq"))) (re.* (re.* (str.to_re "r"))))) (re.* (re.+ (re.union (re.union (str.to_re "sss") (str.to_re "tt")) (re.union (str.to_re "u") (str.to_re "v"))))))) (re.+ (re.+ (re.+ (re.union (re.union (re.union (str.to_re "w") (str.to_re "xx")) (re.* (str.to_re "yyy"))) (re.* (re.+ (str.to_re "zzz"))))))))))))) (re.+ (re.+ (re.* (re.union (re.* (re.+ (re.union (re.+ (re.+ (re.union (re.union (re.* (str.to_re "A")) (re.union (str.to_re "BB") (str.to_re "CC"))) (re.union (re.* (str.to_re "DDD")) (re.+ (str.to_re "E")))))) (re.union (re.+ (re.* (re.union (re.* (str.to_re "FFF")) (re.union (str.to_re "GGG") (str.to_re "HHH"))))) (re.union (re.union (re.+ (re.+ (str.to_re "II"))) (re.union (re.+ (str.to_re "JJ")) (re.+ (str.to_re "KKK")))) (re.* (re.* (re.union (str.to_re "L") (str.to_re "M"))))))))) (re.* (re.* (re.+ (re.+ (re.+ (re.+ (re.* (re.union (str.to_re "NNN") (str.to_re "OO"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
