(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (re.+ (re.union (re.union (re.* (re.union (re.union (re.+ (re.+ (re.union (re.union (re.* (str.to_re "00")) (re.union (str.to_re "11") (str.to_re "2"))) (re.+ (re.* (str.to_re "333")))))) (re.union (re.+ (re.* (re.* (re.union (str.to_re "44") (str.to_re "555"))))) (re.union (re.* (re.* (re.union (str.to_re "6") (str.to_re "7")))) (re.+ (re.* (re.union (str.to_re "888") (str.to_re "9"))))))) (re.union (re.+ (re.+ (re.+ (re.+ (re.+ (str.to_re "aa")))))) (re.union (re.+ (re.* (re.union (re.* (str.to_re "b")) (re.* (str.to_re "c"))))) (re.union (re.* (re.+ (re.* (str.to_re "dd")))) (re.+ (re.union (re.+ (str.to_re "e")) (re.* (str.to_re "fff"))))))))) (re.* (re.union (re.+ (re.+ (re.* (re.+ (re.union (re.union (str.to_re "gg") (str.to_re "hh")) (re.+ (str.to_re "ii"))))))) (re.* (re.* (re.* (re.union (re.* (re.* (str.to_re "jj"))) (re.union (re.union (str.to_re "k") (str.to_re "ll")) (re.* (str.to_re "m")))))))))) (re.* (re.union (re.union (re.* (re.union (re.* (re.+ (re.+ (re.* (str.to_re "nn"))))) (re.* (re.+ (re.union (re.union (str.to_re "ooo") (str.to_re "ppp")) (re.+ (str.to_re "qq"))))))) (re.union (re.union (re.+ (re.* (re.+ (re.+ (str.to_re "rrr"))))) (re.* (re.union (re.+ (re.union (str.to_re "sss") (str.to_re "tt"))) (re.* (re.+ (str.to_re "u")))))) (re.union (re.* (re.* (re.+ (re.+ (str.to_re "vvv"))))) (re.union (re.+ (re.* (re.+ (str.to_re "w")))) (re.union (re.* (re.union (str.to_re "xx") (str.to_re "yy"))) (re.+ (re.union (str.to_re "zzz") (str.to_re "AA")))))))) (re.* (re.union (re.* (re.* (re.union (re.union (re.union (str.to_re "B") (str.to_re "CCC")) (re.* (str.to_re "D"))) (re.* (re.union (str.to_re "E") (str.to_re "F")))))) (re.union (re.* (re.* (re.* (re.union (str.to_re "GG") (str.to_re "HH"))))) (re.+ (re.+ (re.+ (re.* (str.to_re "III")))))))))))))) (re.union (re.+ (re.union (re.+ (re.+ (re.* (re.+ (re.+ (re.+ (re.+ (re.* (re.+ (re.* (str.to_re "JJJ"))))))))))) (re.+ (re.union (re.union (re.union (re.union (re.+ (re.+ (re.+ (re.union (re.union (str.to_re "K") (str.to_re "L")) (re.+ (str.to_re "MMM")))))) (re.union (re.* (re.+ (re.union (re.union (str.to_re "NN") (str.to_re "OOO")) (re.+ (str.to_re "P"))))) (re.* (re.union (re.+ (re.union (str.to_re "QQ") (str.to_re "R"))) (re.* (re.union (str.to_re "SS") (str.to_re "TTT"))))))) (re.* (re.+ (re.* (re.union (re.* (re.* (str.to_re "U"))) (re.* (re.union (str.to_re "VVV") (str.to_re "W")))))))) (re.* (re.union (re.* (re.union (re.* (re.union (re.union (str.to_re "XX") (str.to_re "YYY")) (re.+ (str.to_re "ZZZ")))) (re.* (re.+ (re.+ (str.to_re "!!!")))))) (re.union (re.* (re.* (re.union (re.+ (str.to_re """""""")) (re.union (str.to_re "###") (str.to_re "$$"))))) (re.* (re.* (re.union (re.* (str.to_re "%")) (re.union (str.to_re "&&&") (str.to_re "''"))))))))) (re.union (re.union (re.+ (re.+ (re.union (re.+ (re.* (re.+ (str.to_re "(")))) (re.* (re.union (re.+ (str.to_re ")")) (re.+ (str.to_re "*"))))))) (re.+ (re.union (re.* (re.union (re.+ (re.union (str.to_re "+++") (str.to_re ",,,"))) (re.union (re.+ (str.to_re "---")) (re.+ (str.to_re "."))))) (re.+ (re.* (re.union (re.* (str.to_re "///")) (re.* (str.to_re "::")))))))) (re.+ (re.union (re.union (re.* (re.+ (re.* (re.+ (str.to_re ";;;"))))) (re.* (re.* (re.union (re.union (str.to_re "<<<") (str.to_re "=")) (re.+ (str.to_re ">")))))) (re.* (re.+ (re.+ (re.union (re.* (str.to_re "???")) (re.union (str.to_re "@") (str.to_re "[["))))))))))))) (re.union (re.* (re.* (re.* (re.* (re.* (re.* (re.union (re.* (re.+ (re.+ (re.union (str.to_re "\\\\") (str.to_re "]"))))) (re.union (re.* (re.* (re.* (str.to_re "^")))) (re.+ (re.union (re.* (str.to_re "___")) (re.* (str.to_re "``")))))))))))) (re.union (re.* (re.* (re.union (re.union (re.* (re.* (re.+ (re.* (re.* (re.union (str.to_re "{{") (str.to_re "|"))))))) (re.union (re.union (re.union (re.+ (re.+ (re.union (str.to_re "}}") (str.to_re "~~")))) (re.* (re.union (re.+ (str.to_re "0")) (re.union (str.to_re "1") (str.to_re "22"))))) (re.union (re.union (re.* (re.* (str.to_re "33"))) (re.union (re.* (str.to_re "44")) (re.* (str.to_re "555")))) (re.+ (re.* (re.+ (str.to_re "6")))))) (re.+ (re.+ (re.union (re.* (re.+ (str.to_re "7"))) (re.union (re.union (str.to_re "88") (str.to_re "999")) (re.* (str.to_re "aa")))))))) (re.* (re.* (re.* (re.union (re.* (re.+ (re.union (str.to_re "b") (str.to_re "c")))) (re.* (re.union (re.union (str.to_re "ddd") (str.to_re "ee")) (re.* (str.to_re "f"))))))))))) (re.* (re.union (re.* (re.union (re.union (re.union (re.union (re.+ (re.+ (re.union (str.to_re "g") (str.to_re "hh")))) (re.* (re.union (re.+ (str.to_re "i")) (re.* (str.to_re "jj"))))) (re.union (re.+ (re.union (re.+ (str.to_re "k")) (re.+ (str.to_re "lll")))) (re.union (re.+ (re.union (str.to_re "mmm") (str.to_re "nn"))) (re.* (re.* (str.to_re "oo")))))) (re.union (re.union (re.union (re.* (re.+ (str.to_re "pp"))) (re.+ (re.* (str.to_re "q")))) (re.union (re.* (re.+ (str.to_re "rr"))) (re.union (re.+ (str.to_re "s")) (re.+ (str.to_re "tt"))))) (re.* (re.* (re.* (re.* (str.to_re "uu"))))))) (re.* (re.union (re.union (re.union (re.+ (re.* (str.to_re "v"))) (re.union (re.* (str.to_re "w")) (re.* (str.to_re "xxx")))) (re.* (re.union (re.* (str.to_re "yy")) (re.+ (str.to_re "zzz"))))) (re.union (re.union (re.union (re.* (str.to_re "A")) (re.* (str.to_re "BB"))) (re.union (re.+ (str.to_re "CCC")) (re.* (str.to_re "DD")))) (re.* (re.* (re.+ (str.to_re "E"))))))))) (re.union (re.union (re.+ (re.union (re.+ (re.* (re.* (re.+ (str.to_re "FF"))))) (re.+ (re.union (re.* (re.+ (str.to_re "G"))) (re.* (re.+ (str.to_re "HH"))))))) (re.* (re.* (re.+ (re.union (re.* (re.* (str.to_re "III"))) (re.+ (re.+ (str.to_re "J")))))))) (re.union (re.union (re.+ (re.+ (re.union (re.union (re.+ (str.to_re "K")) (re.* (str.to_re "L"))) (re.union (re.+ (str.to_re "M")) (re.* (str.to_re "NN")))))) (re.* (re.union (re.* (re.* (re.union (str.to_re "OOO") (str.to_re "PP")))) (re.* (re.+ (re.+ (str.to_re "QQ"))))))) (re.* (re.+ (re.* (re.+ (re.+ (re.union (str.to_re "RR") (str.to_re "SS")))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
