(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (re.* (re.union (re.union (re.+ (re.+ (re.union (re.+ (re.union (re.* (re.* (str.to_re "000"))) (re.* (re.union (str.to_re "11") (str.to_re "22"))))) (re.* (re.* (re.* (re.union (str.to_re "33") (str.to_re "444")))))))) (re.union (re.+ (re.* (re.+ (re.* (re.union (re.* (str.to_re "555")) (re.* (str.to_re "6"))))))) (re.* (re.union (re.* (re.union (re.+ (re.+ (str.to_re "7"))) (re.* (re.+ (str.to_re "888"))))) (re.+ (re.+ (re.union (re.+ (str.to_re "9")) (re.+ (str.to_re "a"))))))))) (re.+ (re.* (re.* (re.* (re.+ (re.+ (re.+ (re.* (str.to_re "bb")))))))))))) (re.union (re.* (re.union (re.union (re.+ (re.+ (re.union (re.+ (re.* (re.union (re.+ (str.to_re "ccc")) (re.* (str.to_re "d"))))) (re.+ (re.union (re.* (re.union (str.to_re "ee") (str.to_re "f"))) (re.* (re.+ (str.to_re "g")))))))) (re.* (re.+ (re.* (re.+ (re.union (re.union (re.* (str.to_re "hh")) (re.+ (str.to_re "iii"))) (re.union (re.union (str.to_re "jj") (str.to_re "kk")) (re.* (str.to_re "lll"))))))))) (re.union (re.+ (re.union (re.+ (re.* (re.union (re.* (re.* (str.to_re "mmm"))) (re.* (re.+ (str.to_re "n")))))) (re.* (re.* (re.* (re.+ (re.+ (str.to_re "oo")))))))) (re.+ (re.* (re.* (re.* (re.+ (re.* (re.+ (str.to_re "ppp"))))))))))) (re.* (re.+ (re.* (re.* (re.+ (re.+ (re.union (re.+ (re.union (re.+ (str.to_re "qqq")) (re.+ (str.to_re "rr")))) (re.+ (re.union (re.* (str.to_re "ss")) (re.+ (str.to_re "ttt"))))))))))))) (re.+ (re.+ (re.+ (re.* (re.+ (re.+ (re.+ (re.+ (re.+ (re.* (re.union (re.* (str.to_re "uuu")) (re.+ (str.to_re "vvv"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
