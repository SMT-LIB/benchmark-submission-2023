(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (re.* (re.union (re.+ (re.union (re.union (re.+ (re.+ (re.* (str.to_re "00")))) (re.union (re.+ (re.* (str.to_re "11"))) (re.* (re.* (str.to_re "22"))))) (re.* (re.union (re.+ (re.+ (str.to_re "333"))) (re.+ (re.+ (str.to_re "4"))))))) (re.+ (re.+ (re.* (re.* (re.+ (re.+ (str.to_re "5")))))))))) (re.union (re.union (re.union (re.* (re.* (re.* (re.+ (re.+ (re.union (str.to_re "66") (str.to_re "777"))))))) (re.union (re.+ (re.union (re.+ (re.* (re.union (str.to_re "8") (str.to_re "999")))) (re.union (re.+ (re.* (str.to_re "aa"))) (re.* (re.+ (str.to_re "b")))))) (re.union (re.union (re.+ (re.+ (re.+ (str.to_re "c")))) (re.+ (re.union (re.union (str.to_re "d") (str.to_re "eee")) (re.* (str.to_re "fff"))))) (re.+ (re.+ (re.+ (re.union (str.to_re "gg") (str.to_re "hhh")))))))) (re.union (re.+ (re.+ (re.union (re.+ (re.union (re.* (str.to_re "iii")) (re.+ (str.to_re "jj")))) (re.+ (re.union (re.union (str.to_re "kkk") (str.to_re "ll")) (re.+ (str.to_re "m"))))))) (re.union (re.* (re.* (re.* (re.union (re.* (str.to_re "nn")) (re.union (str.to_re "ooo") (str.to_re "pp")))))) (re.* (re.+ (re.+ (re.* (re.union (str.to_re "qq") (str.to_re "r"))))))))) (re.union (re.+ (re.union (re.+ (re.union (re.+ (re.+ (re.+ (str.to_re "sss")))) (re.* (re.union (re.* (str.to_re "tt")) (re.+ (str.to_re "uuu")))))) (re.+ (re.* (re.* (re.+ (re.* (str.to_re "v")))))))) (re.* (re.+ (re.* (re.union (re.* (re.union (re.+ (str.to_re "www")) (re.union (str.to_re "x") (str.to_re "yy")))) (re.* (re.+ (re.* (str.to_re "zz"))))))))))) (re.* (re.+ (re.* (re.* (re.+ (re.+ (re.union (re.* (re.union (re.union (str.to_re "AA") (str.to_re "BBB")) (re.union (str.to_re "C") (str.to_re "D")))) (re.+ (re.* (re.+ (str.to_re "EEE"))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
