(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (re.union (re.union (re.* (re.union (re.* (re.* (re.union (re.union (re.union (re.union (re.union (re.+ (str.to_re "0")) (re.* (str.to_re "1"))) (re.* (re.union (str.to_re "222") (str.to_re "33")))) (re.* (re.union (re.* (str.to_re "44")) (re.* (str.to_re "55"))))) (re.+ (re.* (re.* (re.* (str.to_re "6")))))) (re.+ (re.+ (re.+ (re.* (re.+ (str.to_re "7"))))))))) (re.* (re.* (re.* (re.+ (re.* (re.union (re.+ (re.+ (str.to_re "8"))) (re.union (re.union (str.to_re "9") (str.to_re "aa")) (re.+ (str.to_re "b"))))))))))) (re.union (re.* (re.+ (re.* (re.* (re.* (re.+ (re.union (re.union (re.union (str.to_re "cc") (str.to_re "dd")) (re.* (str.to_re "ee"))) (re.* (re.union (str.to_re "ff") (str.to_re "gg")))))))))) (re.* (re.* (re.union (re.union (re.+ (re.union (re.+ (re.* (re.+ (str.to_re "h")))) (re.* (re.union (re.+ (str.to_re "ii")) (re.+ (str.to_re "jjj")))))) (re.union (re.+ (re.union (re.union (re.* (str.to_re "kkk")) (re.* (str.to_re "lll"))) (re.* (re.* (str.to_re "mmm"))))) (re.union (re.union (re.union (re.* (str.to_re "nn")) (re.* (str.to_re "ooo"))) (re.+ (re.union (str.to_re "ppp") (str.to_re "qqq")))) (re.union (re.+ (re.* (str.to_re "r"))) (re.union (re.union (str.to_re "s") (str.to_re "t")) (re.* (str.to_re "uuu"))))))) (re.union (re.* (re.union (re.union (re.+ (re.union (str.to_re "vvv") (str.to_re "ww"))) (re.union (re.union (str.to_re "x") (str.to_re "y")) (re.union (str.to_re "z") (str.to_re "A")))) (re.+ (re.* (re.union (str.to_re "B") (str.to_re "CC")))))) (re.+ (re.union (re.union (re.+ (re.* (str.to_re "DD"))) (re.* (re.* (str.to_re "EE")))) (re.* (re.+ (re.+ (str.to_re "FF")))))))))))) (re.union (re.+ (re.union (re.* (re.* (re.* (re.union (re.* (re.union (re.+ (re.+ (str.to_re "G"))) (re.+ (re.* (str.to_re "HHH"))))) (re.* (re.* (re.* (re.* (str.to_re "III"))))))))) (re.* (re.union (re.+ (re.* (re.* (re.union (re.union (re.* (str.to_re "JJJ")) (re.* (str.to_re "K"))) (re.union (re.union (str.to_re "LLL") (str.to_re "M")) (re.+ (str.to_re "NNN"))))))) (re.+ (re.union (re.+ (re.union (re.union (re.+ (str.to_re "OOO")) (re.* (str.to_re "P"))) (re.union (re.+ (str.to_re "QQQ")) (re.union (str.to_re "RR") (str.to_re "SS"))))) (re.union (re.union (re.* (re.* (str.to_re "T"))) (re.* (re.+ (str.to_re "UUU")))) (re.+ (re.* (re.* (str.to_re "V"))))))))))) (re.union (re.union (re.+ (re.union (re.union (re.+ (re.+ (re.union (re.+ (re.union (str.to_re "W") (str.to_re "X"))) (re.union (re.* (str.to_re "YYY")) (re.* (str.to_re "Z")))))) (re.+ (re.union (re.+ (re.+ (re.* (str.to_re "!")))) (re.union (re.union (re.union (str.to_re """") (str.to_re "#")) (re.union (str.to_re "$$$") (str.to_re "%"))) (re.* (re.+ (str.to_re "&&"))))))) (re.union (re.+ (re.+ (re.* (re.union (re.+ (str.to_re "''")) (re.+ (str.to_re "((")))))) (re.+ (re.union (re.+ (re.* (re.union (str.to_re ")") (str.to_re "***")))) (re.* (re.* (re.* (str.to_re "++"))))))))) (re.union (re.+ (re.* (re.* (re.* (re.+ (re.union (re.* (str.to_re ",,")) (re.union (str.to_re "-") (str.to_re "...")))))))) (re.+ (re.* (re.union (re.union (re.+ (re.* (re.union (str.to_re "///") (str.to_re "::")))) (re.union (re.+ (re.union (str.to_re ";") (str.to_re "<"))) (re.* (re.* (str.to_re "="))))) (re.+ (re.+ (re.* (re.+ (str.to_re ">>")))))))))) (re.+ (re.+ (re.+ (re.union (re.+ (re.union (re.union (re.union (re.* (str.to_re "?")) (re.union (str.to_re "@") (str.to_re "[["))) (re.* (re.+ (str.to_re "\\\\")))) (re.+ (re.+ (re.+ (str.to_re "]]")))))) (re.union (re.* (re.union (re.* (re.+ (str.to_re "^^^"))) (re.+ (re.* (str.to_re "___"))))) (re.* (re.* (re.union (re.* (str.to_re "`")) (re.+ (str.to_re "{")))))))))))))) (re.+ (re.union (re.+ (re.union (re.* (re.union (re.+ (re.* (re.union (re.+ (re.* (re.union (re.+ (str.to_re "|||")) (re.union (str.to_re "}}}") (str.to_re "~~~"))))) (re.union (re.union (re.+ (re.+ (str.to_re "0"))) (re.+ (re.union (str.to_re "111") (str.to_re "2")))) (re.* (re.+ (re.+ (str.to_re "333")))))))) (re.union (re.* (re.* (re.union (re.+ (re.union (re.union (str.to_re "444") (str.to_re "55")) (re.+ (str.to_re "6")))) (re.+ (re.* (re.union (str.to_re "7") (str.to_re "888"))))))) (re.+ (re.+ (re.+ (re.+ (re.* (re.union (str.to_re "9") (str.to_re "a")))))))))) (re.+ (re.union (re.* (re.union (re.* (re.union (re.union (re.union (re.union (str.to_re "bb") (str.to_re "cc")) (re.+ (str.to_re "d"))) (re.* (re.union (str.to_re "ee") (str.to_re "fff")))) (re.* (re.* (re.* (str.to_re "g")))))) (re.+ (re.+ (re.+ (re.+ (re.+ (str.to_re "hh")))))))) (re.* (re.union (re.union (re.+ (re.* (re.union (re.union (str.to_re "iii") (str.to_re "jjj")) (re.* (str.to_re "kkk"))))) (re.* (re.* (re.* (re.* (str.to_re "l")))))) (re.* (re.* (re.union (re.+ (re.union (str.to_re "mm") (str.to_re "n"))) (re.* (re.union (str.to_re "oo") (str.to_re "pp")))))))))))) (re.union (re.* (re.* (re.union (re.+ (re.union (re.+ (re.union (re.union (re.+ (re.union (str.to_re "q") (str.to_re "rr"))) (re.+ (re.+ (str.to_re "ss")))) (re.union (re.+ (re.+ (str.to_re "t"))) (re.* (re.* (str.to_re "u")))))) (re.* (re.+ (re.* (re.+ (re.union (str.to_re "vvv") (str.to_re "www")))))))) (re.+ (re.union (re.* (re.* (re.+ (re.union (re.union (str.to_re "xx") (str.to_re "y")) (re.union (str.to_re "zz") (str.to_re "AAA")))))) (re.* (re.+ (re.union (re.* (re.+ (str.to_re "BBB"))) (re.union (re.union (str.to_re "CCC") (str.to_re "D")) (re.union (str.to_re "E") (str.to_re "FFF"))))))))))) (re.union (re.* (re.+ (re.union (re.+ (re.* (re.+ (re.+ (re.* (re.* (str.to_re "GGG"))))))) (re.+ (re.* (re.+ (re.+ (re.union (re.* (str.to_re "HHH")) (re.+ (str.to_re "I")))))))))) (re.+ (re.* (re.+ (re.union (re.+ (re.union (re.+ (re.+ (re.* (str.to_re "JJJ")))) (re.+ (re.+ (re.union (str.to_re "KKK") (str.to_re "LL")))))) (re.+ (re.* (re.union (re.union (re.+ (str.to_re "MM")) (re.+ (str.to_re "NN"))) (re.union (re.union (str.to_re "OO") (str.to_re "PPP")) (re.* (str.to_re "QQ"))))))))))))))) (re.+ (re.+ (re.+ (re.+ (re.union (re.+ (re.union (re.union (re.* (re.* (re.union (re.+ (re.* (re.* (str.to_re "R")))) (re.* (re.* (re.* (str.to_re "SSS"))))))) (re.union (re.* (re.+ (re.+ (re.union (re.* (str.to_re "TT")) (re.+ (str.to_re "UU")))))) (re.* (re.* (re.* (re.union (re.* (str.to_re "V")) (re.* (str.to_re "WWW")))))))) (re.* (re.union (re.union (re.* (re.+ (re.+ (re.* (str.to_re "XXX"))))) (re.* (re.union (re.union (re.* (str.to_re "YY")) (re.* (str.to_re "ZZZ"))) (re.+ (re.* (str.to_re "!!!")))))) (re.union (re.* (re.union (re.* (re.union (str.to_re """") (str.to_re "##"))) (re.+ (re.* (str.to_re "$"))))) (re.* (re.+ (re.* (re.+ (str.to_re "%%")))))))))) (re.* (re.* (re.* (re.* (re.+ (re.* (re.+ (re.* (re.union (str.to_re "&&&") (str.to_re "'''"))))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
