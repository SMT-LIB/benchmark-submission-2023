(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (re.* (re.+ (re.union (re.union (re.* (re.+ (re.union (re.union (re.* (re.+ (re.* (str.to_re "00")))) (re.* (re.union (re.* (str.to_re "1")) (re.union (str.to_re "222") (str.to_re "333"))))) (re.union (re.* (re.* (re.+ (str.to_re "44")))) (re.* (re.* (re.+ (str.to_re "55")))))))) (re.* (re.* (re.* (re.* (re.+ (re.* (re.+ (str.to_re "666"))))))))) (re.* (re.* (re.union (re.* (re.* (re.* (re.+ (re.* (str.to_re "77")))))) (re.+ (re.+ (re.* (re.* (re.union (str.to_re "8") (str.to_re "99")))))))))))))) (re.union (re.union (re.* (re.* (re.union (re.* (re.+ (re.* (re.* (re.union (re.union (re.+ (re.+ (str.to_re "aaa"))) (re.+ (re.union (str.to_re "bb") (str.to_re "c")))) (re.+ (re.+ (re.union (str.to_re "d") (str.to_re "eee"))))))))) (re.union (re.* (re.* (re.union (re.+ (re.+ (re.* (re.union (str.to_re "ff") (str.to_re "ggg"))))) (re.* (re.+ (re.union (re.union (str.to_re "hhh") (str.to_re "iii")) (re.union (str.to_re "jj") (str.to_re "kk")))))))) (re.+ (re.* (re.union (re.* (re.+ (re.+ (re.union (str.to_re "l") (str.to_re "mmm"))))) (re.union (re.+ (re.union (re.union (str.to_re "n") (str.to_re "oo")) (re.+ (str.to_re "p")))) (re.union (re.+ (re.union (str.to_re "qq") (str.to_re "rrr"))) (re.* (re.union (str.to_re "ss") (str.to_re "tt")))))))))))) (re.union (re.* (re.union (re.+ (re.* (re.union (re.* (re.* (re.+ (re.+ (re.* (str.to_re "uuu")))))) (re.* (re.* (re.+ (re.* (re.union (str.to_re "vv") (str.to_re "ww"))))))))) (re.union (re.* (re.+ (re.+ (re.* (re.+ (re.+ (re.union (str.to_re "xxx") (str.to_re "yyy")))))))) (re.union (re.union (re.union (re.union (re.union (re.union (re.+ (str.to_re "z")) (re.+ (str.to_re "AA"))) (re.union (re.+ (str.to_re "B")) (re.* (str.to_re "C")))) (re.+ (re.union (re.union (str.to_re "DD") (str.to_re "EE")) (re.union (str.to_re "F") (str.to_re "G"))))) (re.union (re.union (re.union (re.union (str.to_re "H") (str.to_re "III")) (re.union (str.to_re "JJ") (str.to_re "KKK"))) (re.+ (re.union (str.to_re "LLL") (str.to_re "MMM")))) (re.* (re.* (re.+ (str.to_re "NNN")))))) (re.union (re.+ (re.union (re.union (re.union (str.to_re "OO") (str.to_re "PPP")) (re.union (str.to_re "QQQ") (str.to_re "R"))) (re.union (re.* (str.to_re "S")) (re.* (str.to_re "TT"))))) (re.* (re.+ (re.+ (re.union (str.to_re "UU") (str.to_re "VV"))))))) (re.+ (re.* (re.* (re.* (re.union (re.* (str.to_re "WWW")) (re.* (str.to_re "XXX"))))))))))) (re.+ (re.+ (re.* (re.+ (re.union (re.* (re.union (re.* (re.union (re.union (str.to_re "Y") (str.to_re "ZZ")) (re.union (str.to_re "!") (str.to_re """""")))) (re.union (re.+ (re.* (str.to_re "#"))) (re.* (re.* (str.to_re "$$")))))) (re.+ (re.union (re.+ (re.+ (re.+ (str.to_re "%%%")))) (re.union (re.+ (re.+ (str.to_re "&&&"))) (re.+ (re.* (str.to_re "''"))))))))))))) (re.union (re.* (re.union (re.union (re.+ (re.* (re.* (re.* (re.* (re.* (re.* (re.union (str.to_re "(") (str.to_re ")"))))))))) (re.+ (re.* (re.* (re.* (re.union (re.union (re.* (re.+ (str.to_re "**"))) (re.union (re.union (str.to_re "+++") (str.to_re ",,,")) (re.+ (str.to_re "---")))) (re.union (re.* (re.* (str.to_re "."))) (re.union (re.union (str.to_re "/") (str.to_re "::")) (re.+ (str.to_re ";;")))))))))) (re.* (re.union (re.union (re.+ (re.* (re.* (re.union (re.union (re.union (str.to_re "<<") (str.to_re "=")) (re.+ (str.to_re ">>"))) (re.+ (re.* (str.to_re "?"))))))) (re.+ (re.* (re.+ (re.+ (re.* (re.* (str.to_re "@@@")))))))) (re.* (re.* (re.union (re.* (re.* (re.* (re.union (str.to_re "[[") (str.to_re "\\"))))) (re.* (re.* (re.* (re.union (str.to_re "]") (str.to_re "^")))))))))))) (re.* (re.union (re.* (re.union (re.union (re.* (re.+ (re.* (re.union (re.+ (re.+ (str.to_re "__"))) (re.union (re.* (str.to_re "``")) (re.union (str.to_re "{{") (str.to_re "|"))))))) (re.+ (re.+ (re.* (re.+ (re.+ (re.union (str.to_re "}}}") (str.to_re "~")))))))) (re.* (re.+ (re.union (re.+ (re.+ (re.union (re.union (str.to_re "000") (str.to_re "111")) (re.union (str.to_re "2") (str.to_re "3"))))) (re.union (re.union (re.union (re.* (str.to_re "444")) (re.+ (str.to_re "555"))) (re.+ (re.union (str.to_re "6") (str.to_re "777")))) (re.+ (re.+ (re.+ (str.to_re "8")))))))))) (re.* (re.+ (re.* (re.* (re.+ (re.+ (re.+ (re.union (re.* (str.to_re "999")) (re.union (str.to_re "aa") (str.to_re "bb")))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
