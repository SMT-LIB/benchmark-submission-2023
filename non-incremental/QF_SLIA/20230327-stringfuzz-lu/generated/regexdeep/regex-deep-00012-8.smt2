(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (re.union (re.* (re.+ (re.union (re.* (re.+ (re.+ (re.* (re.union (re.+ (str.to_re "0")) (re.* (str.to_re "11"))))))) (re.* (re.* (re.+ (re.* (re.union (re.union (str.to_re "2") (str.to_re "33")) (re.* (str.to_re "444")))))))))) (re.union (re.* (re.union (re.union (re.union (re.+ (re.union (re.+ (re.+ (str.to_re "55"))) (re.* (re.* (str.to_re "66"))))) (re.* (re.union (re.+ (re.+ (str.to_re "7"))) (re.union (re.union (str.to_re "88") (str.to_re "99")) (re.union (str.to_re "a") (str.to_re "bb")))))) (re.* (re.+ (re.* (re.+ (re.union (str.to_re "c") (str.to_re "ddd"))))))) (re.union (re.union (re.union (re.* (re.* (re.+ (str.to_re "e")))) (re.+ (re.union (re.+ (str.to_re "fff")) (re.* (str.to_re "gg"))))) (re.+ (re.union (re.+ (re.union (str.to_re "hhh") (str.to_re "iii"))) (re.+ (re.+ (str.to_re "jj")))))) (re.union (re.union (re.* (re.+ (re.+ (str.to_re "kkk")))) (re.union (re.* (re.* (str.to_re "lll"))) (re.+ (re.+ (str.to_re "mm"))))) (re.union (re.union (re.* (re.union (str.to_re "n") (str.to_re "ooo"))) (re.+ (re.+ (str.to_re "p")))) (re.union (re.* (re.+ (str.to_re "qqq"))) (re.union (re.union (str.to_re "r") (str.to_re "s")) (re.union (str.to_re "ttt") (str.to_re "uu"))))))))) (re.+ (re.+ (re.+ (re.union (re.union (re.union (re.+ (re.* (str.to_re "vv"))) (re.* (re.+ (str.to_re "ww")))) (re.+ (re.+ (re.* (str.to_re "xx"))))) (re.+ (re.* (re.+ (re.+ (str.to_re "yy"))))))))))) (re.union (re.* (re.union (re.union (re.+ (re.union (re.+ (re.* (re.* (re.union (str.to_re "zz") (str.to_re "AAA"))))) (re.+ (re.union (re.union (re.+ (str.to_re "BBB")) (re.union (str.to_re "CCC") (str.to_re "D"))) (re.union (re.+ (str.to_re "EEE")) (re.+ (str.to_re "FFF"))))))) (re.* (re.* (re.+ (re.union (re.* (re.union (str.to_re "GGG") (str.to_re "H"))) (re.+ (re.+ (str.to_re "III")))))))) (re.union (re.union (re.union (re.+ (re.union (re.union (re.* (str.to_re "J")) (re.+ (str.to_re "K"))) (re.* (re.union (str.to_re "LLL") (str.to_re "M"))))) (re.+ (re.union (re.* (re.+ (str.to_re "NNN"))) (re.union (re.+ (str.to_re "OOO")) (re.+ (str.to_re "PPP")))))) (re.union (re.* (re.union (re.* (re.* (str.to_re "QQ"))) (re.union (re.union (str.to_re "RRR") (str.to_re "SS")) (re.+ (str.to_re "T"))))) (re.* (re.* (re.* (re.+ (str.to_re "UUU"))))))) (re.+ (re.union (re.+ (re.+ (re.* (re.union (str.to_re "VVV") (str.to_re "W"))))) (re.union (re.union (re.union (re.union (str.to_re "XX") (str.to_re "YY")) (re.* (str.to_re "Z"))) (re.+ (re.union (str.to_re "!!") (str.to_re """""""")))) (re.union (re.* (re.union (str.to_re "###") (str.to_re "$$$"))) (re.union (re.* (str.to_re "%%%")) (re.union (str.to_re "&&") (str.to_re "'''")))))))))) (re.+ (re.union (re.union (re.union (re.+ (re.* (re.* (re.union (re.union (str.to_re "(") (str.to_re "))")) (re.+ (str.to_re "*")))))) (re.union (re.+ (re.union (re.union (re.* (str.to_re "++")) (re.+ (str.to_re ",,"))) (re.union (re.+ (str.to_re "---")) (re.* (str.to_re "."))))) (re.union (re.union (re.union (re.+ (str.to_re "/")) (re.+ (str.to_re ":"))) (re.union (re.union (str.to_re ";;;") (str.to_re "<<")) (re.* (str.to_re "==")))) (re.union (re.* (re.+ (str.to_re ">>"))) (re.* (re.union (str.to_re "?") (str.to_re "@"))))))) (re.+ (re.union (re.+ (re.* (re.union (re.* (str.to_re "[")) (re.* (str.to_re "\\\\\\"))))) (re.union (re.union (re.+ (re.* (str.to_re "]"))) (re.union (re.+ (str.to_re "^^")) (re.union (str.to_re "___") (str.to_re "`")))) (re.* (re.union (re.union (str.to_re "{") (str.to_re "||")) (re.+ (str.to_re "}")))))))) (re.* (re.* (re.+ (re.union (re.* (re.union (re.union (str.to_re "~~") (str.to_re "00")) (re.union (str.to_re "1") (str.to_re "22")))) (re.+ (re.* (re.union (str.to_re "333") (str.to_re "444")))))))))))) (re.union (re.union (re.* (re.* (re.union (re.+ (re.* (re.union (re.+ (re.union (re.* (str.to_re "55")) (re.* (str.to_re "666")))) (re.+ (re.+ (re.union (str.to_re "77") (str.to_re "8"))))))) (re.* (re.union (re.+ (re.+ (re.* (re.+ (str.to_re "999"))))) (re.union (re.+ (re.union (re.union (str.to_re "a") (str.to_re "bbb")) (re.+ (str.to_re "ccc")))) (re.* (re.* (re.* (str.to_re "d")))))))))) (re.+ (re.* (re.* (re.+ (re.union (re.union (re.union (re.* (re.union (str.to_re "ee") (str.to_re "f"))) (re.* (re.* (str.to_re "gg")))) (re.+ (re.* (re.union (str.to_re "hhh") (str.to_re "iii"))))) (re.union (re.* (re.* (re.+ (str.to_re "j")))) (re.union (re.union (re.* (str.to_re "kk")) (re.union (str.to_re "ll") (str.to_re "mmm"))) (re.* (re.union (str.to_re "nn") (str.to_re "oo"))))))))))) (re.* (re.+ (re.+ (re.+ (re.union (re.+ (re.union (re.* (re.union (re.+ (str.to_re "pp")) (re.union (str.to_re "q") (str.to_re "r")))) (re.union (re.* (re.+ (str.to_re "ss"))) (re.* (re.+ (str.to_re "ttt")))))) (re.* (re.* (re.union (re.* (re.* (str.to_re "uuu"))) (re.* (re.+ (str.to_re "vv"))))))))))))) (re.union (re.+ (re.union (re.union (re.union (re.* (re.+ (re.union (re.* (re.union (re.* (re.* (str.to_re "w"))) (re.* (re.+ (str.to_re "xxx"))))) (re.* (re.* (re.union (re.union (str.to_re "yy") (str.to_re "z")) (re.+ (str.to_re "AA")))))))) (re.+ (re.+ (re.* (re.* (re.union (re.+ (re.* (str.to_re "B"))) (re.union (re.union (str.to_re "CC") (str.to_re "DDD")) (re.* (str.to_re "E"))))))))) (re.* (re.union (re.* (re.+ (re.union (re.union (re.union (re.+ (str.to_re "FFF")) (re.union (str.to_re "G") (str.to_re "H"))) (re.* (re.* (str.to_re "III")))) (re.* (re.* (re.union (str.to_re "JJ") (str.to_re "K"))))))) (re.+ (re.union (re.* (re.+ (re.+ (re.* (str.to_re "L"))))) (re.* (re.union (re.+ (re.union (str.to_re "MM") (str.to_re "NN"))) (re.union (re.+ (str.to_re "OOO")) (re.union (str.to_re "PPP") (str.to_re "QQ")))))))))) (re.union (re.* (re.union (re.union (re.union (re.union (re.+ (re.union (re.union (str.to_re "RR") (str.to_re "SSS")) (re.union (str.to_re "T") (str.to_re "UUU")))) (re.union (re.+ (re.union (str.to_re "VVV") (str.to_re "W"))) (re.+ (re.+ (str.to_re "XX"))))) (re.+ (re.* (re.union (re.+ (str.to_re "YY")) (re.+ (str.to_re "Z")))))) (re.* (re.* (re.union (re.union (re.+ (str.to_re "!!!")) (re.+ (str.to_re """"""""))) (re.+ (re.+ (str.to_re "##"))))))) (re.* (re.* (re.union (re.union (re.union (re.union (str.to_re "$") (str.to_re "%%%")) (re.+ (str.to_re "&"))) (re.+ (re.union (str.to_re "''") (str.to_re "(")))) (re.+ (re.union (re.union (str.to_re "))") (str.to_re "*")) (re.* (str.to_re "+"))))))))) (re.union (re.* (re.+ (re.+ (re.+ (re.+ (re.union (re.+ (str.to_re ",,,")) (re.+ (str.to_re "-")))))))) (re.+ (re.* (re.union (re.+ (re.union (re.+ (re.* (str.to_re "."))) (re.+ (re.union (str.to_re "/") (str.to_re ":::"))))) (re.* (re.union (re.* (re.+ (str.to_re ";;;"))) (re.union (re.union (str.to_re "<") (str.to_re "==")) (re.union (str.to_re ">>>") (str.to_re "???")))))))))))) (re.+ (re.+ (re.+ (re.union (re.+ (re.+ (re.+ (re.* (re.+ (re.union (re.union (str.to_re "@@") (str.to_re "[[[")) (re.union (str.to_re "\\\\") (str.to_re "]]]")))))))) (re.union (re.union (re.+ (re.union (re.* (re.union (re.union (str.to_re "^") (str.to_re "___")) (re.* (str.to_re "```")))) (re.* (re.* (re.* (str.to_re "{{")))))) (re.* (re.* (re.* (re.* (re.* (str.to_re "||"))))))) (re.union (re.+ (re.* (re.union (re.+ (re.union (str.to_re "}") (str.to_re "~~"))) (re.+ (re.+ (str.to_re "00")))))) (re.+ (re.union (re.+ (re.union (re.+ (str.to_re "111")) (re.+ (str.to_re "22")))) (re.union (re.union (re.+ (str.to_re "3")) (re.* (str.to_re "444"))) (re.* (re.+ (str.to_re "55"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
