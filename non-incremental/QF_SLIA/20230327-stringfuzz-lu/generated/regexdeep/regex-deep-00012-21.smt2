(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (re.union (re.+ (re.* (re.union (re.* (re.union (re.* (re.* (re.* (re.* (str.to_re "00"))))) (re.* (re.union (re.+ (re.* (str.to_re "11"))) (re.+ (re.union (str.to_re "22") (str.to_re "3"))))))) (re.union (re.union (re.+ (re.union (re.+ (re.union (str.to_re "444") (str.to_re "55"))) (re.union (re.union (str.to_re "66") (str.to_re "7")) (re.+ (str.to_re "8"))))) (re.* (re.union (re.+ (re.+ (str.to_re "999"))) (re.* (re.* (str.to_re "aaa")))))) (re.union (re.* (re.+ (re.* (re.+ (str.to_re "bbb"))))) (re.* (re.union (re.+ (re.union (str.to_re "ccc") (str.to_re "d"))) (re.union (re.* (str.to_re "eee")) (re.+ (str.to_re "fff")))))))))) (re.union (re.+ (re.* (re.* (re.* (re.union (re.+ (re.union (re.union (str.to_re "gg") (str.to_re "hhh")) (re.union (str.to_re "i") (str.to_re "jj")))) (re.union (re.* (re.+ (str.to_re "kk"))) (re.+ (re.union (str.to_re "ll") (str.to_re "mm"))))))))) (re.+ (re.union (re.union (re.* (re.* (re.* (re.union (re.+ (str.to_re "n")) (re.+ (str.to_re "o")))))) (re.* (re.+ (re.* (re.* (re.union (str.to_re "pp") (str.to_re "q"))))))) (re.* (re.* (re.* (re.union (re.+ (re.+ (str.to_re "rr"))) (re.union (re.+ (str.to_re "ss")) (re.union (str.to_re "tt") (str.to_re "u"))))))))))))) (re.+ (re.union (re.union (re.union (re.* (re.* (re.+ (re.+ (re.union (re.union (re.* (re.+ (str.to_re "vv"))) (re.* (re.union (str.to_re "ww") (str.to_re "xxx")))) (re.+ (re.union (re.union (str.to_re "yyy") (str.to_re "z")) (re.union (str.to_re "A") (str.to_re "BBB"))))))))) (re.union (re.* (re.+ (re.union (re.* (re.+ (re.union (re.union (str.to_re "C") (str.to_re "DD")) (re.+ (str.to_re "E"))))) (re.union (re.* (re.* (re.* (str.to_re "FF")))) (re.* (re.+ (re.+ (str.to_re "GGG")))))))) (re.+ (re.* (re.+ (re.+ (re.+ (re.+ (re.* (str.to_re "H")))))))))) (re.union (re.* (re.union (re.* (re.union (re.union (re.+ (re.* (re.union (str.to_re "II") (str.to_re "JJ")))) (re.* (re.+ (re.+ (str.to_re "K"))))) (re.* (re.union (re.* (re.* (str.to_re "L"))) (re.+ (re.+ (str.to_re "MM"))))))) (re.* (re.* (re.* (re.* (re.* (re.* (str.to_re "NN"))))))))) (re.+ (re.+ (re.union (re.union (re.* (re.* (re.* (re.union (str.to_re "OOO") (str.to_re "P"))))) (re.+ (re.union (re.union (re.+ (str.to_re "Q")) (re.union (str.to_re "RR") (str.to_re "S"))) (re.+ (re.union (str.to_re "T") (str.to_re "UUU")))))) (re.union (re.union (re.union (re.* (re.+ (str.to_re "VVV"))) (re.* (re.+ (str.to_re "WW")))) (re.+ (re.* (re.union (str.to_re "X") (str.to_re "YYY"))))) (re.+ (re.* (re.+ (re.+ (str.to_re "ZZZ"))))))))))) (re.union (re.union (re.union (re.* (re.* (re.+ (re.union (re.+ (re.* (re.union (str.to_re "!!!") (str.to_re """")))) (re.+ (re.+ (re.+ (str.to_re "#")))))))) (re.union (re.union (re.* (re.+ (re.+ (re.union (re.* (str.to_re "$$")) (re.* (str.to_re "%")))))) (re.+ (re.+ (re.+ (re.union (re.* (str.to_re "&&")) (re.+ (str.to_re "'"))))))) (re.union (re.+ (re.* (re.* (re.* (re.* (str.to_re "(((")))))) (re.+ (re.* (re.* (re.union (re.+ (str.to_re ")")) (re.+ (str.to_re "*"))))))))) (re.+ (re.+ (re.* (re.union (re.union (re.union (re.* (re.* (str.to_re "+"))) (re.+ (re.union (str.to_re ",,") (str.to_re "-")))) (re.union (re.* (re.union (str.to_re "...") (str.to_re "///"))) (re.* (re.+ (str.to_re ":"))))) (re.union (re.+ (re.union (re.* (str.to_re ";;;")) (re.* (str.to_re "<")))) (re.+ (re.* (re.union (str.to_re "===") (str.to_re ">")))))))))) (re.* (re.+ (re.union (re.* (re.+ (re.+ (re.union (re.+ (re.+ (str.to_re "??"))) (re.* (re.* (str.to_re "@@"))))))) (re.+ (re.+ (re.* (re.* (re.+ (re.union (str.to_re "[") (str.to_re "\\\\\\"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
