(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (re.union (re.+ (re.* (re.union (re.union (re.* (re.union (re.+ (re.* (re.* (re.+ (re.+ (str.to_re "000")))))) (re.* (re.* (re.* (re.+ (re.+ (str.to_re "11")))))))) (re.union (re.* (re.union (re.+ (re.* (re.+ (re.* (str.to_re "2"))))) (re.+ (re.* (re.union (re.+ (str.to_re "33")) (re.+ (str.to_re "44"))))))) (re.union (re.+ (re.+ (re.+ (re.+ (re.union (str.to_re "55") (str.to_re "66")))))) (re.+ (re.* (re.+ (re.+ (re.+ (str.to_re "7"))))))))) (re.+ (re.union (re.union (re.* (re.* (re.+ (re.union (re.+ (str.to_re "888")) (re.* (str.to_re "99")))))) (re.+ (re.* (re.* (re.* (re.* (str.to_re "aaa"))))))) (re.+ (re.* (re.union (re.union (re.+ (re.union (str.to_re "b") (str.to_re "c"))) (re.* (re.* (str.to_re "ddd")))) (re.* (re.union (re.+ (str.to_re "eee")) (re.+ (str.to_re "fff")))))))))))) (re.* (re.* (re.union (re.+ (re.+ (re.+ (re.* (re.* (re.* (re.* (re.union (str.to_re "gg") (str.to_re "hh"))))))))) (re.+ (re.* (re.* (re.+ (re.* (re.* (re.* (re.+ (str.to_re "i"))))))))))))) (re.+ (re.* (re.* (re.+ (re.+ (re.+ (re.+ (re.+ (re.+ (re.+ (re.* (re.* (str.to_re "jj")))))))))))))) (re.union (re.* (re.+ (re.* (re.union (re.* (re.* (re.* (re.union (re.* (re.union (re.union (re.+ (str.to_re "k")) (re.union (str.to_re "lll") (str.to_re "mm"))) (re.* (re.union (str.to_re "nn") (str.to_re "ooo"))))) (re.+ (re.* (re.* (re.* (str.to_re "ppp"))))))))) (re.union (re.* (re.union (re.* (re.+ (re.+ (re.union (re.+ (str.to_re "qqq")) (re.union (str.to_re "rr") (str.to_re "sss")))))) (re.+ (re.+ (re.+ (re.+ (re.union (str.to_re "tt") (str.to_re "u")))))))) (re.union (re.union (re.* (re.* (re.union (re.+ (re.union (str.to_re "vv") (str.to_re "w"))) (re.union (re.* (str.to_re "x")) (re.+ (str.to_re "yy")))))) (re.union (re.* (re.+ (re.union (re.union (str.to_re "zz") (str.to_re "A")) (re.+ (str.to_re "B"))))) (re.union (re.union (re.* (re.union (str.to_re "CC") (str.to_re "D"))) (re.+ (re.union (str.to_re "EE") (str.to_re "FFF")))) (re.+ (re.+ (re.+ (str.to_re "G"))))))) (re.union (re.+ (re.* (re.union (re.* (re.+ (str.to_re "HH"))) (re.* (re.+ (str.to_re "II")))))) (re.+ (re.union (re.+ (re.* (re.+ (str.to_re "JJJ")))) (re.+ (re.+ (re.union (str.to_re "K") (str.to_re "L"))))))))))))) (re.+ (re.union (re.* (re.union (re.+ (re.union (re.+ (re.+ (re.union (re.+ (re.* (re.union (str.to_re "MMM") (str.to_re "N")))) (re.union (re.union (re.+ (str.to_re "O")) (re.union (str.to_re "PPP") (str.to_re "QQQ"))) (re.* (re.* (str.to_re "RR"))))))) (re.* (re.+ (re.union (re.union (re.union (re.union (str.to_re "S") (str.to_re "TT")) (re.union (str.to_re "UU") (str.to_re "V"))) (re.union (re.* (str.to_re "WWW")) (re.+ (str.to_re "X")))) (re.* (re.+ (re.* (str.to_re "Y"))))))))) (re.+ (re.* (re.union (re.union (re.* (re.* (re.+ (re.* (str.to_re "ZZ"))))) (re.union (re.union (re.union (re.* (str.to_re "!!!")) (re.+ (str.to_re """"))) (re.union (re.* (str.to_re "##")) (re.* (str.to_re "$")))) (re.+ (re.union (re.* (str.to_re "%%")) (re.+ (str.to_re "&")))))) (re.union (re.union (re.* (re.* (re.* (str.to_re "''")))) (re.* (re.+ (re.+ (str.to_re "((("))))) (re.* (re.union (re.+ (re.union (str.to_re ")))") (str.to_re "**"))) (re.union (re.+ (str.to_re "++")) (re.* (str.to_re ",,"))))))))))) (re.+ (re.+ (re.+ (re.union (re.* (re.* (re.+ (re.union (re.+ (re.* (str.to_re "-"))) (re.* (re.+ (str.to_re "..."))))))) (re.union (re.+ (re.* (re.union (re.+ (re.* (str.to_re "//"))) (re.* (re.union (str.to_re ":") (str.to_re ";;")))))) (re.* (re.union (re.union (re.* (re.union (str.to_re "<<<") (str.to_re "==="))) (re.* (re.* (str.to_re ">>")))) (re.union (re.* (re.+ (str.to_re "??"))) (re.union (re.* (str.to_re "@@@")) (re.union (str.to_re "[[") (str.to_re "\\"))))))))))))))) (re.+ (re.union (re.union (re.+ (re.+ (re.union (re.+ (re.* (re.+ (re.+ (re.+ (re.* (re.union (re.union (str.to_re "]]]") (str.to_re "^^^")) (re.* (str.to_re "__"))))))))) (re.+ (re.* (re.* (re.+ (re.+ (re.+ (re.union (re.* (str.to_re "``")) (re.union (str.to_re "{{{") (str.to_re "|")))))))))))) (re.* (re.* (re.+ (re.union (re.* (re.union (re.union (re.union (re.+ (re.union (re.+ (str.to_re "}")) (re.union (str.to_re "~~") (str.to_re "0")))) (re.union (re.union (re.+ (str.to_re "1")) (re.+ (str.to_re "222"))) (re.+ (re.* (str.to_re "33"))))) (re.union (re.union (re.union (re.union (str.to_re "444") (str.to_re "5")) (re.* (str.to_re "66"))) (re.union (re.* (str.to_re "7")) (re.* (str.to_re "88")))) (re.+ (re.+ (re.* (str.to_re "999")))))) (re.* (re.union (re.* (re.+ (re.union (str.to_re "a") (str.to_re "bb")))) (re.+ (re.+ (re.+ (str.to_re "c")))))))) (re.+ (re.+ (re.+ (re.union (re.* (re.union (re.* (str.to_re "ddd")) (re.union (str.to_re "ee") (str.to_re "ff")))) (re.union (re.union (re.union (str.to_re "ggg") (str.to_re "hh")) (re.+ (str.to_re "i"))) (re.* (re.+ (str.to_re "j"))))))))))))) (re.* (re.+ (re.* (re.+ (re.union (re.* (re.* (re.union (re.* (re.+ (re.+ (re.* (str.to_re "kk"))))) (re.union (re.* (re.+ (re.+ (str.to_re "l")))) (re.* (re.union (re.union (str.to_re "mm") (str.to_re "nn")) (re.+ (str.to_re "ooo")))))))) (re.* (re.* (re.+ (re.union (re.+ (re.* (re.union (str.to_re "pp") (str.to_re "q")))) (re.* (re.+ (re.* (str.to_re "r"))))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
