(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.* (re.union (re.* (re.union (re.union (re.+ (re.union (re.* (re.+ (re.+ (re.union (re.union (str.to_re "0") (str.to_re "1")) (re.union (str.to_re "222") (str.to_re "33")))))) (re.union (re.+ (re.+ (re.union (re.+ (str.to_re "444")) (re.union (str.to_re "5") (str.to_re "6"))))) (re.* (re.* (re.union (re.union (str.to_re "7") (str.to_re "888")) (re.* (str.to_re "99")))))))) (re.* (re.* (re.+ (re.* (re.+ (re.union (re.* (str.to_re "a")) (re.union (str.to_re "bbb") (str.to_re "ccc"))))))))) (re.union (re.union (re.union (re.+ (re.union (re.union (re.* (re.* (str.to_re "dd"))) (re.union (re.+ (str.to_re "ee")) (re.union (str.to_re "f") (str.to_re "ggg")))) (re.* (re.union (re.+ (str.to_re "h")) (re.union (str.to_re "i") (str.to_re "jj")))))) (re.* (re.union (re.union (re.* (re.+ (str.to_re "kkk"))) (re.union (re.+ (str.to_re "lll")) (re.* (str.to_re "mmm")))) (re.+ (re.+ (re.* (str.to_re "nn"))))))) (re.union (re.+ (re.union (re.* (re.+ (re.+ (str.to_re "o")))) (re.union (re.* (re.+ (str.to_re "p"))) (re.+ (re.union (str.to_re "qq") (str.to_re "rrr")))))) (re.* (re.union (re.+ (re.* (re.* (str.to_re "s")))) (re.+ (re.* (re.* (str.to_re "tt")))))))) (re.+ (re.union (re.union (re.+ (re.* (re.* (re.* (str.to_re "uu"))))) (re.* (re.+ (re.* (re.+ (str.to_re "vvv")))))) (re.+ (re.union (re.+ (re.+ (re.* (str.to_re "ww")))) (re.* (re.* (re.union (str.to_re "xxx") (str.to_re "yy"))))))))))) (re.* (re.union (re.union (re.union (re.union (re.union (re.+ (re.union (re.+ (re.* (str.to_re "z"))) (re.+ (re.union (str.to_re "AA") (str.to_re "B"))))) (re.union (re.* (re.union (re.union (str.to_re "CC") (str.to_re "DD")) (re.union (str.to_re "EE") (str.to_re "F")))) (re.* (re.union (re.* (str.to_re "GGG")) (re.+ (str.to_re "H")))))) (re.* (re.+ (re.* (re.* (re.+ (str.to_re "III"))))))) (re.+ (re.union (re.+ (re.* (re.* (re.+ (str.to_re "J"))))) (re.* (re.* (re.+ (re.union (str.to_re "K") (str.to_re "LLL")))))))) (re.union (re.+ (re.+ (re.union (re.union (re.* (re.union (str.to_re "MMM") (str.to_re "NNN"))) (re.+ (re.union (str.to_re "OO") (str.to_re "P")))) (re.+ (re.+ (re.+ (str.to_re "QQ"))))))) (re.union (re.* (re.* (re.+ (re.* (re.* (str.to_re "RRR")))))) (re.union (re.* (re.union (re.+ (re.* (str.to_re "SSS"))) (re.+ (re.+ (str.to_re "T"))))) (re.+ (re.* (re.* (re.+ (str.to_re "UU"))))))))) (re.* (re.* (re.* (re.union (re.+ (re.+ (re.+ (re.* (str.to_re "VVV"))))) (re.union (re.+ (re.* (re.* (str.to_re "WWW")))) (re.+ (re.+ (re.* (str.to_re "XXX"))))))))))))) (re.union (re.* (re.+ (re.+ (re.+ (re.union (re.* (re.union (re.* (re.* (re.+ (re.+ (str.to_re "Y"))))) (re.union (re.+ (re.* (re.union (str.to_re "Z") (str.to_re "!!")))) (re.union (re.* (re.union (str.to_re """""") (str.to_re "###"))) (re.+ (re.+ (str.to_re "$$$"))))))) (re.union (re.* (re.+ (re.* (re.union (re.* (str.to_re "%%")) (re.* (str.to_re "&&&")))))) (re.* (re.* (re.* (re.* (re.+ (str.to_re "'")))))))))))) (re.+ (re.union (re.* (re.* (re.+ (re.union (re.union (re.* (re.+ (re.* (re.+ (str.to_re "("))))) (re.+ (re.* (re.* (re.union (str.to_re ")") (str.to_re "**")))))) (re.union (re.union (re.union (re.* (re.union (str.to_re "++") (str.to_re ",,"))) (re.+ (re.* (str.to_re "--")))) (re.union (re.union (re.union (str.to_re ".") (str.to_re "/")) (re.union (str.to_re "::") (str.to_re ";;"))) (re.+ (re.+ (str.to_re "<<"))))) (re.+ (re.* (re.* (re.union (str.to_re "==") (str.to_re ">>>")))))))))) (re.* (re.union (re.union (re.+ (re.union (re.* (re.union (re.union (re.union (str.to_re "???") (str.to_re "@")) (re.union (str.to_re "[[") (str.to_re "\\\\\\"))) (re.+ (re.+ (str.to_re "]]"))))) (re.union (re.* (re.+ (re.+ (str.to_re "^^^")))) (re.+ (re.+ (re.* (str.to_re "__"))))))) (re.* (re.* (re.* (re.union (re.union (re.union (str.to_re "``") (str.to_re "{")) (re.+ (str.to_re "|"))) (re.+ (re.union (str.to_re "}}") (str.to_re "~~")))))))) (re.+ (re.* (re.union (re.* (re.union (re.+ (re.+ (str.to_re "00"))) (re.+ (re.union (str.to_re "111") (str.to_re "22"))))) (re.union (re.+ (re.union (re.* (str.to_re "3")) (re.+ (str.to_re "444")))) (re.+ (re.* (re.union (str.to_re "5") (str.to_re "666")))))))))))))) (re.union (re.* (re.union (re.+ (re.+ (re.+ (re.* (re.* (re.* (re.* (re.* (re.+ (re.* (str.to_re "7"))))))))))) (re.+ (re.* (re.+ (re.union (re.* (re.+ (re.+ (re.+ (re.* (re.* (str.to_re "88"))))))) (re.union (re.* (re.+ (re.* (re.union (re.+ (str.to_re "999")) (re.+ (str.to_re "a")))))) (re.union (re.* (re.+ (re.union (re.* (str.to_re "b")) (re.union (str.to_re "ccc") (str.to_re "dd"))))) (re.union (re.union (re.union (re.* (str.to_re "e")) (re.union (str.to_re "fff") (str.to_re "ggg"))) (re.+ (re.* (str.to_re "hh")))) (re.+ (re.* (re.+ (str.to_re "iii"))))))))))))) (re.union (re.* (re.union (re.union (re.+ (re.+ (re.union (re.* (re.+ (re.union (re.+ (re.union (str.to_re "j") (str.to_re "kk"))) (re.* (re.+ (str.to_re "ll")))))) (re.+ (re.+ (re.union (re.+ (re.union (str.to_re "mm") (str.to_re "nnn"))) (re.+ (re.* (str.to_re "ooo"))))))))) (re.+ (re.+ (re.+ (re.* (re.union (re.+ (re.* (re.union (str.to_re "p") (str.to_re "q")))) (re.* (re.+ (re.+ (str.to_re "rr")))))))))) (re.+ (re.* (re.+ (re.union (re.* (re.* (re.* (re.* (re.* (str.to_re "ss")))))) (re.+ (re.* (re.* (re.* (re.+ (str.to_re "tt")))))))))))) (re.union (re.* (re.* (re.* (re.union (re.* (re.+ (re.union (re.union (re.union (re.* (str.to_re "uuu")) (re.union (str.to_re "v") (str.to_re "w"))) (re.+ (re.* (str.to_re "x")))) (re.union (re.+ (re.* (str.to_re "yyy"))) (re.+ (re.union (str.to_re "zzz") (str.to_re "AAA"))))))) (re.union (re.+ (re.* (re.+ (re.+ (re.* (str.to_re "BBB")))))) (re.union (re.* (re.+ (re.+ (re.union (str.to_re "C") (str.to_re "D"))))) (re.union (re.* (re.+ (re.union (str.to_re "EE") (str.to_re "FFF")))) (re.union (re.+ (re.* (str.to_re "G"))) (re.union (re.+ (str.to_re "HHH")) (re.union (str.to_re "III") (str.to_re "JJ"))))))))))) (re.* (re.union (re.+ (re.+ (re.* (re.union (re.* (re.* (re.* (re.union (str.to_re "K") (str.to_re "L"))))) (re.* (re.+ (re.* (re.union (str.to_re "M") (str.to_re "NNN"))))))))) (re.+ (re.union (re.* (re.+ (re.union (re.union (re.* (re.union (str.to_re "OO") (str.to_re "PPP"))) (re.+ (re.+ (str.to_re "Q")))) (re.union (re.union (re.union (str.to_re "RRR") (str.to_re "S")) (re.* (str.to_re "T"))) (re.+ (re.union (str.to_re "UU") (str.to_re "VV"))))))) (re.+ (re.+ (re.+ (re.* (re.* (re.+ (str.to_re "WWW")))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
