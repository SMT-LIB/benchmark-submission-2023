(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (re.+ (re.union (re.union (re.* (re.* (re.* (re.+ (re.* (re.+ (str.to_re "00"))))))) (re.* (re.+ (re.+ (re.+ (re.* (re.union (str.to_re "111") (str.to_re "22")))))))) (re.union (re.union (re.+ (re.union (re.union (re.union (re.union (str.to_re "3") (str.to_re "444")) (re.+ (str.to_re "5"))) (re.+ (re.+ (str.to_re "666")))) (re.* (re.union (re.* (str.to_re "777")) (re.union (str.to_re "88") (str.to_re "999")))))) (re.+ (re.* (re.union (re.+ (re.+ (str.to_re "aaa"))) (re.union (re.+ (str.to_re "bb")) (re.* (str.to_re "cc"))))))) (re.union (re.* (re.+ (re.union (re.union (re.union (str.to_re "d") (str.to_re "e")) (re.* (str.to_re "ff"))) (re.* (re.* (str.to_re "ggg")))))) (re.union (re.union (re.union (re.* (re.+ (str.to_re "hhh"))) (re.+ (re.+ (str.to_re "ii")))) (re.union (re.union (re.union (str.to_re "jj") (str.to_re "kk")) (re.+ (str.to_re "lll"))) (re.* (re.+ (str.to_re "mmm"))))) (re.* (re.+ (re.union (re.union (str.to_re "nn") (str.to_re "o")) (re.+ (str.to_re "p")))))))))))) (re.+ (re.* (re.* (re.* (re.* (re.+ (re.+ (re.union (re.union (re.+ (re.* (str.to_re "qq"))) (re.* (re.union (str.to_re "rrr") (str.to_re "s")))) (re.union (re.union (re.union (str.to_re "t") (str.to_re "uuu")) (re.+ (str.to_re "vvv"))) (re.union (re.union (str.to_re "www") (str.to_re "xxx")) (re.* (str.to_re "y")))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
