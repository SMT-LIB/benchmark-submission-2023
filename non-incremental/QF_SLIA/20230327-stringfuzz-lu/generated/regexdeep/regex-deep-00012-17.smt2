(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (re.union (re.* (re.union (re.+ (re.* (re.* (re.* (re.union (re.union (re.union (str.to_re "000") (str.to_re "111")) (re.union (str.to_re "2") (str.to_re "33"))) (re.+ (re.* (str.to_re "44")))))))) (re.union (re.+ (re.+ (re.+ (re.+ (re.union (re.union (str.to_re "555") (str.to_re "66")) (re.* (str.to_re "7"))))))) (re.union (re.+ (re.* (re.* (re.+ (re.+ (str.to_re "88")))))) (re.+ (re.* (re.+ (re.+ (re.+ (str.to_re "9")))))))))) (re.+ (re.union (re.+ (re.* (re.+ (re.union (re.union (re.union (re.union (str.to_re "a") (str.to_re "b")) (re.union (str.to_re "cc") (str.to_re "ddd"))) (re.+ (re.union (str.to_re "ee") (str.to_re "ff")))) (re.union (re.+ (re.* (str.to_re "gg"))) (re.+ (re.* (str.to_re "h")))))))) (re.+ (re.+ (re.+ (re.+ (re.+ (re.* (re.* (str.to_re "ii")))))))))))) (re.+ (re.union (re.* (re.union (re.+ (re.+ (re.* (re.union (re.* (re.+ (re.+ (str.to_re "jj")))) (re.union (re.+ (re.+ (str.to_re "k"))) (re.+ (re.+ (str.to_re "ll")))))))) (re.* (re.union (re.union (re.* (re.+ (re.* (re.union (str.to_re "m") (str.to_re "nnn"))))) (re.union (re.union (re.* (re.+ (str.to_re "o"))) (re.* (re.+ (str.to_re "p")))) (re.+ (re.union (re.union (str.to_re "qqq") (str.to_re "rr")) (re.+ (str.to_re "s")))))) (re.union (re.* (re.* (re.+ (re.* (str.to_re "tt"))))) (re.union (re.union (re.union (re.* (str.to_re "u")) (re.+ (str.to_re "vv"))) (re.+ (re.+ (str.to_re "ww")))) (re.* (re.union (re.* (str.to_re "xxx")) (re.+ (str.to_re "yy")))))))))) (re.+ (re.union (re.* (re.union (re.+ (re.* (re.union (re.union (re.union (str.to_re "zz") (str.to_re "AA")) (re.union (str.to_re "BB") (str.to_re "CC"))) (re.union (re.* (str.to_re "DD")) (re.+ (str.to_re "EEE")))))) (re.union (re.union (re.union (re.* (re.* (str.to_re "F"))) (re.* (re.+ (str.to_re "GG")))) (re.union (re.+ (re.* (str.to_re "H"))) (re.union (re.+ (str.to_re "II")) (re.+ (str.to_re "JJ"))))) (re.+ (re.+ (re.union (re.union (str.to_re "K") (str.to_re "LL")) (re.+ (str.to_re "MMM")))))))) (re.+ (re.* (re.+ (re.+ (re.union (re.+ (re.union (str.to_re "NN") (str.to_re "OO"))) (re.* (re.union (str.to_re "PPP") (str.to_re "Q"))))))))))))) (re.+ (re.union (re.+ (re.union (re.union (re.union (re.* (re.union (re.+ (re.union (re.union (re.union (str.to_re "R") (str.to_re "S")) (re.union (str.to_re "TTT") (str.to_re "U"))) (re.+ (re.union (str.to_re "V") (str.to_re "WWW"))))) (re.* (re.union (re.* (re.* (str.to_re "XXX"))) (re.* (re.union (str.to_re "Y") (str.to_re "ZZ"))))))) (re.union (re.+ (re.union (re.union (re.union (re.* (str.to_re "!")) (re.union (str.to_re """""""") (str.to_re "###"))) (re.+ (re.+ (str.to_re "$$$")))) (re.+ (re.* (re.+ (str.to_re "%")))))) (re.* (re.union (re.union (re.union (re.union (str.to_re "&") (str.to_re "''")) (re.+ (str.to_re "((("))) (re.+ (re.* (str.to_re ")")))) (re.union (re.union (re.* (str.to_re "***")) (re.union (str.to_re "+++") (str.to_re ","))) (re.* (re.* (str.to_re "--")))))))) (re.union (re.+ (re.* (re.union (re.+ (re.union (re.+ (str.to_re "..")) (re.union (str.to_re "/") (str.to_re "::")))) (re.* (re.union (re.* (str.to_re ";;;")) (re.union (str.to_re "<") (str.to_re "=="))))))) (re.+ (re.* (re.+ (re.* (re.* (re.union (str.to_re ">>>") (str.to_re "???"))))))))) (re.* (re.+ (re.* (re.union (re.union (re.union (re.+ (re.* (str.to_re "@@@"))) (re.+ (re.* (str.to_re "[")))) (re.* (re.union (re.* (str.to_re "\\")) (re.* (str.to_re "]]]"))))) (re.union (re.union (re.union (re.+ (str.to_re "^")) (re.* (str.to_re "_"))) (re.+ (re.* (str.to_re "``")))) (re.+ (re.+ (re.union (str.to_re "{{{") (str.to_re "||"))))))))))) (re.+ (re.union (re.* (re.* (re.+ (re.+ (re.union (re.union (re.union (re.+ (str.to_re "}")) (re.union (str.to_re "~") (str.to_re "000"))) (re.union (re.union (str.to_re "11") (str.to_re "2")) (re.* (str.to_re "33")))) (re.+ (re.union (re.union (str.to_re "4") (str.to_re "555")) (re.+ (str.to_re "66"))))))))) (re.+ (re.+ (re.union (re.* (re.* (re.union (re.* (re.union (str.to_re "77") (str.to_re "888"))) (re.+ (re.+ (str.to_re "999")))))) (re.union (re.* (re.* (re.* (re.* (str.to_re "aa"))))) (re.union (re.union (re.* (re.* (str.to_re "bb"))) (re.* (re.+ (str.to_re "c")))) (re.* (re.union (re.* (str.to_re "dd")) (re.+ (str.to_re "e"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
