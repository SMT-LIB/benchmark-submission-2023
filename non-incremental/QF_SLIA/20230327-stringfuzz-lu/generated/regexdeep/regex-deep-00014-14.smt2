(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (re.union (re.* (re.union (re.+ (re.* (re.+ (re.union (re.union (re.+ (re.union (re.union (re.union (str.to_re "0") (str.to_re "11")) (re.+ (str.to_re "2"))) (re.union (re.* (str.to_re "333")) (re.+ (str.to_re "44"))))) (re.* (re.* (re.+ (re.union (str.to_re "55") (str.to_re "66")))))) (re.union (re.+ (re.* (re.* (re.+ (str.to_re "77"))))) (re.* (re.* (re.union (re.* (str.to_re "888")) (re.* (str.to_re "999")))))))))) (re.* (re.union (re.* (re.union (re.+ (re.* (re.+ (re.* (re.+ (str.to_re "aaa")))))) (re.+ (re.union (re.+ (re.+ (re.+ (str.to_re "bbb")))) (re.union (re.union (re.+ (str.to_re "ccc")) (re.union (str.to_re "ddd") (str.to_re "e"))) (re.* (re.union (str.to_re "fff") (str.to_re "g")))))))) (re.* (re.* (re.+ (re.* (re.union (re.* (re.* (str.to_re "hh"))) (re.union (re.+ (str.to_re "iii")) (re.union (str.to_re "j") (str.to_re "kk")))))))))))) (re.union (re.union (re.+ (re.* (re.union (re.+ (re.union (re.union (re.union (re.* (re.union (str.to_re "lll") (str.to_re "mm"))) (re.* (re.+ (str.to_re "nn")))) (re.union (re.union (re.+ (str.to_re "oo")) (re.* (str.to_re "ppp"))) (re.* (re.* (str.to_re "qqq"))))) (re.+ (re.* (re.* (re.+ (str.to_re "r"))))))) (re.union (re.+ (re.+ (re.+ (re.+ (re.* (str.to_re "sss")))))) (re.* (re.* (re.union (re.union (re.+ (str.to_re "t")) (re.union (str.to_re "uu") (str.to_re "v"))) (re.+ (re.* (str.to_re "ww")))))))))) (re.* (re.union (re.* (re.* (re.union (re.+ (re.union (re.union (re.* (str.to_re "xx")) (re.* (str.to_re "y"))) (re.* (re.union (str.to_re "zz") (str.to_re "A"))))) (re.union (re.union (re.* (re.* (str.to_re "BB"))) (re.* (re.union (str.to_re "C") (str.to_re "DDD")))) (re.+ (re.* (re.* (str.to_re "E")))))))) (re.union (re.+ (re.union (re.* (re.* (re.+ (re.+ (str.to_re "FFF"))))) (re.union (re.* (re.union (re.+ (str.to_re "G")) (re.+ (str.to_re "H")))) (re.union (re.* (re.* (str.to_re "I"))) (re.+ (re.+ (str.to_re "JJ"))))))) (re.* (re.union (re.+ (re.+ (re.union (re.union (str.to_re "KKK") (str.to_re "LLL")) (re.union (str.to_re "M") (str.to_re "N"))))) (re.* (re.* (re.+ (re.+ (str.to_re "O"))))))))))) (re.+ (re.+ (re.+ (re.* (re.* (re.+ (re.+ (re.* (re.union (re.+ (str.to_re "P")) (re.* (str.to_re "QQ"))))))))))))))) (re.* (re.union (re.* (re.union (re.* (re.* (re.union (re.+ (re.+ (re.+ (re.+ (re.union (re.union (re.+ (str.to_re "RR")) (re.+ (str.to_re "S"))) (re.* (re.union (str.to_re "TT") (str.to_re "UU")))))))) (re.+ (re.union (re.+ (re.+ (re.+ (re.* (re.+ (str.to_re "VV")))))) (re.* (re.+ (re.+ (re.* (re.union (str.to_re "W") (str.to_re "XX"))))))))))) (re.union (re.union (re.* (re.union (re.* (re.union (re.* (re.* (re.+ (re.* (str.to_re "YY"))))) (re.+ (re.+ (re.+ (re.union (str.to_re "Z") (str.to_re "!!!"))))))) (re.+ (re.* (re.* (re.* (re.+ (re.union (str.to_re """""""") (str.to_re "##"))))))))) (re.+ (re.+ (re.* (re.+ (re.union (re.union (re.union (re.* (str.to_re "$$")) (re.* (str.to_re "%%%"))) (re.union (re.+ (str.to_re "&&")) (re.* (str.to_re "'''")))) (re.+ (re.* (re.+ (str.to_re "((")))))))))) (re.* (re.union (re.union (re.union (re.* (re.* (re.union (re.* (re.+ (str.to_re ")"))) (re.union (re.+ (str.to_re "**")) (re.+ (str.to_re "+")))))) (re.union (re.union (re.union (re.+ (re.* (str.to_re ","))) (re.union (re.+ (str.to_re "--")) (re.+ (str.to_re "..")))) (re.* (re.union (re.* (str.to_re "///")) (re.* (str.to_re ":"))))) (re.union (re.+ (re.* (re.+ (str.to_re ";")))) (re.+ (re.+ (re.union (str.to_re "<<") (str.to_re "==="))))))) (re.* (re.union (re.union (re.union (re.* (re.+ (str.to_re ">>>"))) (re.* (re.+ (str.to_re "?")))) (re.union (re.+ (re.+ (str.to_re "@@@"))) (re.union (re.* (str.to_re "[")) (re.+ (str.to_re "\\\\"))))) (re.* (re.+ (re.+ (re.* (str.to_re "]")))))))) (re.union (re.+ (re.* (re.+ (re.union (re.union (re.union (str.to_re "^") (str.to_re "___")) (re.* (str.to_re "``"))) (re.* (re.union (str.to_re "{{{") (str.to_re "|"))))))) (re.+ (re.union (re.+ (re.+ (re.* (re.+ (str.to_re "}}"))))) (re.* (re.* (re.union (re.* (str.to_re "~~~")) (re.+ (str.to_re "000"))))))))))))) (re.* (re.+ (re.union (re.+ (re.union (re.* (re.* (re.* (re.union (re.+ (re.+ (re.+ (str.to_re "11")))) (re.+ (re.* (re.union (str.to_re "2") (str.to_re "333")))))))) (re.* (re.* (re.+ (re.+ (re.* (re.* (re.* (str.to_re "444")))))))))) (re.+ (re.union (re.+ (re.* (re.+ (re.* (re.+ (re.union (re.+ (str.to_re "555")) (re.union (str.to_re "6") (str.to_re "77")))))))) (re.union (re.+ (re.* (re.* (re.union (re.union (re.* (str.to_re "888")) (re.+ (str.to_re "999"))) (re.+ (re.+ (str.to_re "a"))))))) (re.union (re.* (re.* (re.* (re.+ (re.* (str.to_re "b")))))) (re.* (re.+ (re.* (re.union (re.union (str.to_re "cc") (str.to_re "dd")) (re.+ (str.to_re "eee"))))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
