(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.* (re.+ (re.+ (re.union (re.+ (re.+ (re.union (re.union (re.* (re.union (re.+ (re.+ (re.union (str.to_re "00") (str.to_re "111")))) (re.* (re.+ (re.+ (str.to_re "222")))))) (re.* (re.+ (re.union (re.* (re.* (str.to_re "333"))) (re.* (re.* (str.to_re "4"))))))) (re.* (re.* (re.* (re.* (re.* (re.* (str.to_re "555")))))))))) (re.+ (re.* (re.* (re.+ (re.* (re.union (re.* (re.union (re.* (str.to_re "6")) (re.+ (str.to_re "7")))) (re.+ (re.union (re.* (str.to_re "888")) (re.+ (str.to_re "9"))))))))))))))) (re.* (re.* (re.* (re.union (re.union (re.* (re.union (re.union (re.union (re.union (re.* (re.* (re.+ (re.* (str.to_re "aa"))))) (re.+ (re.union (re.* (re.union (str.to_re "bbb") (str.to_re "cc"))) (re.+ (re.* (str.to_re "ddd")))))) (re.union (re.+ (re.+ (re.union (re.* (str.to_re "e")) (re.* (str.to_re "fff"))))) (re.union (re.* (re.* (re.* (str.to_re "g")))) (re.* (re.* (re.+ (str.to_re "hh"))))))) (re.+ (re.union (re.* (re.+ (re.+ (re.union (str.to_re "ii") (str.to_re "j"))))) (re.* (re.+ (re.union (re.union (str.to_re "k") (str.to_re "l")) (re.union (str.to_re "mm") (str.to_re "n")))))))) (re.* (re.union (re.+ (re.+ (re.+ (re.union (re.+ (str.to_re "oo")) (re.* (str.to_re "pp")))))) (re.* (re.* (re.union (re.* (re.+ (str.to_re "qqq"))) (re.+ (re.+ (str.to_re "rr")))))))))) (re.* (re.* (re.union (re.union (re.union (re.* (re.+ (re.* (re.* (str.to_re "sss"))))) (re.* (re.union (re.* (re.union (str.to_re "tt") (str.to_re "uuu"))) (re.union (re.union (str.to_re "v") (str.to_re "www")) (re.+ (str.to_re "xx")))))) (re.union (re.+ (re.* (re.union (re.+ (str.to_re "y")) (re.+ (str.to_re "z"))))) (re.* (re.* (re.* (re.union (str.to_re "A") (str.to_re "BBB"))))))) (re.* (re.* (re.+ (re.* (re.+ (re.* (str.to_re "C"))))))))))) (re.+ (re.+ (re.union (re.union (re.union (re.union (re.+ (re.* (re.union (re.+ (str.to_re "D")) (re.union (str.to_re "EE") (str.to_re "F"))))) (re.+ (re.+ (re.* (re.* (str.to_re "GG")))))) (re.union (re.union (re.union (re.* (re.union (str.to_re "HH") (str.to_re "I"))) (re.+ (re.union (str.to_re "JJ") (str.to_re "K")))) (re.+ (re.union (re.* (str.to_re "L")) (re.* (str.to_re "MM"))))) (re.+ (re.union (re.* (re.union (str.to_re "NNN") (str.to_re "O"))) (re.+ (re.union (str.to_re "P") (str.to_re "Q"))))))) (re.* (re.+ (re.+ (re.+ (re.+ (re.+ (str.to_re "RR")))))))) (re.+ (re.union (re.* (re.* (re.+ (re.union (re.* (str.to_re "S")) (re.* (str.to_re "TT")))))) (re.* (re.* (re.* (re.+ (re.* (str.to_re "U"))))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
