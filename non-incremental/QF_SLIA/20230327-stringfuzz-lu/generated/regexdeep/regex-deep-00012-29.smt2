(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (re.union (re.+ (re.union (re.+ (re.+ (re.* (re.* (re.+ (re.* (re.union (str.to_re "0") (str.to_re "11")))))))) (re.+ (re.* (re.+ (re.+ (re.+ (re.union (re.+ (str.to_re "2")) (re.* (str.to_re "333")))))))))) (re.* (re.* (re.* (re.+ (re.+ (re.+ (re.+ (re.+ (re.+ (str.to_re "44"))))))))))) (re.* (re.* (re.union (re.+ (re.union (re.+ (re.union (re.* (re.+ (re.+ (str.to_re "555")))) (re.+ (re.union (re.union (str.to_re "66") (str.to_re "7")) (re.union (str.to_re "8") (str.to_re "999")))))) (re.+ (re.* (re.union (re.* (re.* (str.to_re "aaa"))) (re.union (re.union (str.to_re "bb") (str.to_re "cc")) (re.* (str.to_re "dd")))))))) (re.union (re.union (re.union (re.+ (re.* (re.union (re.* (str.to_re "ee")) (re.+ (str.to_re "fff"))))) (re.+ (re.* (re.* (re.union (str.to_re "g") (str.to_re "hhh")))))) (re.+ (re.union (re.union (re.* (re.union (str.to_re "iii") (str.to_re "jj"))) (re.+ (re.+ (str.to_re "k")))) (re.* (re.union (re.+ (str.to_re "l")) (re.+ (str.to_re "mm"))))))) (re.* (re.union (re.+ (re.union (re.union (re.union (str.to_re "nn") (str.to_re "ooo")) (re.union (str.to_re "ppp") (str.to_re "qq"))) (re.* (re.* (str.to_re "rr"))))) (re.union (re.+ (re.union (re.+ (str.to_re "s")) (re.union (str.to_re "tt") (str.to_re "u")))) (re.union (re.union (re.union (str.to_re "vvv") (str.to_re "www")) (re.* (str.to_re "xx"))) (re.* (re.+ (str.to_re "yyy"))))))))))))) (re.+ (re.+ (re.union (re.* (re.union (re.+ (re.* (re.* (re.* (re.* (re.union (re.union (str.to_re "zz") (str.to_re "AAA")) (re.* (str.to_re "BB")))))))) (re.+ (re.* (re.* (re.+ (re.union (re.* (re.union (str.to_re "CC") (str.to_re "DD"))) (re.union (re.union (str.to_re "EEE") (str.to_re "F")) (re.* (str.to_re "GGG")))))))))) (re.union (re.+ (re.+ (re.union (re.* (re.+ (re.* (re.+ (re.* (str.to_re "H")))))) (re.+ (re.* (re.* (re.+ (re.+ (str.to_re "III"))))))))) (re.* (re.+ (re.union (re.+ (re.* (re.union (re.* (re.union (str.to_re "J") (str.to_re "K"))) (re.union (re.* (str.to_re "L")) (re.+ (str.to_re "MM")))))) (re.union (re.* (re.union (re.* (re.union (str.to_re "N") (str.to_re "OOO"))) (re.* (re.+ (str.to_re "PPP"))))) (re.+ (re.* (re.union (re.union (str.to_re "Q") (str.to_re "R")) (re.* (str.to_re "S"))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
