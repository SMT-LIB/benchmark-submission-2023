(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.+ (re.+ (re.* (re.union (re.union (re.+ (re.* (re.+ (re.+ (re.union (re.+ (re.union (re.* (str.to_re "000")) (re.union (str.to_re "1") (str.to_re "222")))) (re.+ (re.union (re.* (str.to_re "333")) (re.union (str.to_re "444") (str.to_re "5"))))))))) (re.+ (re.+ (re.union (re.union (re.* (re.* (re.* (re.union (str.to_re "6") (str.to_re "777"))))) (re.* (re.+ (re.union (re.+ (str.to_re "88")) (re.* (str.to_re "99")))))) (re.union (re.+ (re.+ (re.+ (re.+ (str.to_re "aaa"))))) (re.* (re.union (re.union (re.+ (str.to_re "bb")) (re.union (str.to_re "cc") (str.to_re "d"))) (re.union (re.+ (str.to_re "e")) (re.+ (str.to_re "f")))))))))) (re.union (re.+ (re.+ (re.union (re.+ (re.union (re.union (re.* (re.+ (str.to_re "ggg"))) (re.union (re.* (str.to_re "hhh")) (re.* (str.to_re "iii")))) (re.* (re.* (re.+ (str.to_re "jjj")))))) (re.+ (re.+ (re.* (re.* (re.+ (str.to_re "kkk"))))))))) (re.+ (re.* (re.union (re.union (re.union (re.* (re.* (re.union (str.to_re "lll") (str.to_re "m")))) (re.* (re.+ (re.union (str.to_re "n") (str.to_re "o"))))) (re.union (re.* (re.* (re.union (str.to_re "pp") (str.to_re "q")))) (re.* (re.* (re.+ (str.to_re "rr")))))) (re.union (re.union (re.union (re.+ (re.* (str.to_re "s"))) (re.union (re.union (str.to_re "tt") (str.to_re "uu")) (re.union (str.to_re "v") (str.to_re "www")))) (re.union (re.union (re.+ (str.to_re "x")) (re.union (str.to_re "yy") (str.to_re "zz"))) (re.union (re.+ (str.to_re "A")) (re.union (str.to_re "BBB") (str.to_re "CCC"))))) (re.union (re.union (re.* (re.union (str.to_re "DDD") (str.to_re "E"))) (re.union (re.* (str.to_re "FF")) (re.* (str.to_re "G")))) (re.+ (re.union (re.+ (str.to_re "H")) (re.union (str.to_re "I") (str.to_re "JJ"))))))))))))))) (re.+ (re.+ (re.union (re.union (re.union (re.union (re.* (re.+ (re.* (re.+ (re.* (re.+ (re.union (re.+ (str.to_re "KKK")) (re.union (str.to_re "LL") (str.to_re "MMM"))))))))) (re.union (re.union (re.* (re.+ (re.* (re.union (re.+ (re.+ (str.to_re "NN"))) (re.union (re.union (str.to_re "OO") (str.to_re "P")) (re.union (str.to_re "Q") (str.to_re "RR"))))))) (re.union (re.+ (re.union (re.+ (re.* (re.* (str.to_re "S")))) (re.* (re.union (re.union (str.to_re "TTT") (str.to_re "UU")) (re.* (str.to_re "VV")))))) (re.* (re.+ (re.union (re.* (re.union (str.to_re "WW") (str.to_re "XX"))) (re.union (re.union (str.to_re "Y") (str.to_re "Z")) (re.+ (str.to_re "!!!")))))))) (re.union (re.+ (re.+ (re.+ (re.+ (re.union (re.+ (str.to_re """""""")) (re.union (str.to_re "##") (str.to_re "$$$"))))))) (re.union (re.* (re.+ (re.union (re.union (re.+ (str.to_re "%%")) (re.+ (str.to_re "&&&"))) (re.* (re.* (str.to_re "'")))))) (re.+ (re.union (re.union (re.* (re.union (str.to_re "(((") (str.to_re "))"))) (re.union (re.* (str.to_re "**")) (re.+ (str.to_re "+++")))) (re.+ (re.union (re.union (str.to_re ",") (str.to_re "--")) (re.union (str.to_re ".") (str.to_re "/")))))))))) (re.union (re.* (re.* (re.+ (re.union (re.+ (re.union (re.union (re.union (str.to_re "::") (str.to_re ";;")) (re.* (str.to_re "<"))) (re.union (re.union (str.to_re "===") (str.to_re ">>>")) (re.+ (str.to_re "??"))))) (re.+ (re.* (re.+ (re.* (str.to_re "@@@"))))))))) (re.union (re.* (re.union (re.* (re.+ (re.+ (re.+ (re.* (str.to_re "[")))))) (re.union (re.+ (re.* (re.union (re.+ (str.to_re "\\")) (re.union (str.to_re "]]") (str.to_re "^^"))))) (re.+ (re.union (re.* (re.union (str.to_re "_") (str.to_re "``"))) (re.* (re.union (str.to_re "{") (str.to_re "|||")))))))) (re.+ (re.+ (re.+ (re.union (re.* (re.union (re.+ (str.to_re "}}}")) (re.* (str.to_re "~")))) (re.union (re.union (re.union (str.to_re "00") (str.to_re "1")) (re.+ (str.to_re "222"))) (re.* (re.* (str.to_re "3"))))))))))) (re.* (re.* (re.* (re.* (re.union (re.+ (re.union (re.* (re.* (re.* (str.to_re "44")))) (re.* (re.union (re.union (str.to_re "5") (str.to_re "666")) (re.+ (str.to_re "7")))))) (re.union (re.union (re.union (re.union (re.union (str.to_re "88") (str.to_re "99")) (re.* (str.to_re "aaa"))) (re.+ (re.* (str.to_re "bb")))) (re.* (re.+ (re.* (str.to_re "c"))))) (re.union (re.union (re.* (re.union (str.to_re "d") (str.to_re "e"))) (re.+ (re.+ (str.to_re "fff")))) (re.union (re.+ (re.union (str.to_re "gg") (str.to_re "hh"))) (re.* (re.+ (str.to_re "ii")))))))))))) (re.* (re.* (re.+ (re.* (re.* (re.* (re.union (re.+ (re.union (re.* (re.union (str.to_re "j") (str.to_re "k"))) (re.+ (re.+ (str.to_re "ll"))))) (re.union (re.+ (re.* (re.union (str.to_re "m") (str.to_re "nnn")))) (re.union (re.+ (re.+ (str.to_re "o"))) (re.union (re.* (str.to_re "ppp")) (re.+ (str.to_re "qqq"))))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
