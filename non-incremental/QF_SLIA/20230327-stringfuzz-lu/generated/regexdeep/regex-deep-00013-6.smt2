(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (re.+ (re.* (re.union (re.union (re.+ (re.union (re.union (re.* (re.+ (re.+ (re.union (str.to_re "0") (str.to_re "111"))))) (re.* (re.union (re.+ (re.+ (str.to_re "22"))) (re.+ (re.union (str.to_re "3") (str.to_re "4")))))) (re.* (re.union (re.+ (re.+ (re.* (str.to_re "555")))) (re.union (re.union (re.* (str.to_re "666")) (re.* (str.to_re "777"))) (re.* (re.+ (str.to_re "88")))))))) (re.* (re.union (re.union (re.union (re.+ (re.* (re.+ (str.to_re "999")))) (re.union (re.union (re.+ (str.to_re "a")) (re.union (str.to_re "bb") (str.to_re "cc"))) (re.* (re.union (str.to_re "ddd") (str.to_re "e"))))) (re.union (re.* (re.* (re.+ (str.to_re "f")))) (re.union (re.+ (re.* (str.to_re "ggg"))) (re.* (re.+ (str.to_re "h")))))) (re.* (re.+ (re.+ (re.* (re.+ (str.to_re "ii"))))))))) (re.union (re.+ (re.* (re.+ (re.union (re.* (re.* (re.* (str.to_re "j")))) (re.+ (re.* (re.union (str.to_re "kkk") (str.to_re "lll")))))))) (re.+ (re.union (re.* (re.union (re.union (re.+ (re.+ (str.to_re "mm"))) (re.+ (re.* (str.to_re "nn")))) (re.union (re.* (re.* (str.to_re "oo"))) (re.union (re.+ (str.to_re "pp")) (re.union (str.to_re "qq") (str.to_re "rrr")))))) (re.+ (re.union (re.* (re.* (re.* (str.to_re "s")))) (re.union (re.union (re.+ (str.to_re "ttt")) (re.* (str.to_re "uu"))) (re.* (re.* (str.to_re "vvv")))))))))))))) (re.union (re.union (re.union (re.* (re.* (re.* (re.+ (re.* (re.union (re.union (re.union (re.* (re.* (str.to_re "w"))) (re.* (re.* (str.to_re "x")))) (re.* (re.* (re.* (str.to_re "yyy"))))) (re.* (re.union (re.+ (re.+ (str.to_re "zzz"))) (re.+ (re.* (str.to_re "AAA"))))))))))) (re.union (re.union (re.* (re.* (re.* (re.union (re.+ (re.* (re.union (re.union (str.to_re "BB") (str.to_re "CC")) (re.+ (str.to_re "DD"))))) (re.union (re.+ (re.union (re.* (str.to_re "E")) (re.union (str.to_re "F") (str.to_re "GGG")))) (re.union (re.union (re.union (str.to_re "HHH") (str.to_re "I")) (re.+ (str.to_re "J"))) (re.* (re.union (str.to_re "KK") (str.to_re "LLL"))))))))) (re.* (re.* (re.+ (re.* (re.union (re.union (re.* (re.union (str.to_re "M") (str.to_re "NN"))) (re.union (re.union (str.to_re "OOO") (str.to_re "PP")) (re.+ (str.to_re "Q")))) (re.union (re.+ (re.union (str.to_re "R") (str.to_re "SS"))) (re.union (re.* (str.to_re "TT")) (re.+ (str.to_re "UU")))))))))) (re.union (re.+ (re.* (re.union (re.+ (re.union (re.* (re.+ (re.union (str.to_re "VV") (str.to_re "WWW")))) (re.union (re.union (re.* (str.to_re "XXX")) (re.+ (str.to_re "Y"))) (re.+ (re.+ (str.to_re "ZZ")))))) (re.* (re.* (re.* (re.+ (re.+ (str.to_re "!!!"))))))))) (re.* (re.+ (re.+ (re.union (re.union (re.union (re.* (re.+ (str.to_re """"""))) (re.+ (re.+ (str.to_re "##")))) (re.+ (re.+ (re.* (str.to_re "$$"))))) (re.union (re.* (re.+ (re.union (str.to_re "%%") (str.to_re "&&&")))) (re.+ (re.union (re.+ (str.to_re "''")) (re.* (str.to_re "((")))))))))))) (re.+ (re.union (re.+ (re.+ (re.+ (re.* (re.* (re.* (re.* (re.* (re.union (str.to_re ")))") (str.to_re "***")))))))))) (re.union (re.* (re.* (re.union (re.union (re.union (re.union (re.+ (re.union (str.to_re "+++") (str.to_re ","))) (re.* (re.union (str.to_re "-") (str.to_re ".")))) (re.union (re.* (re.union (str.to_re "//") (str.to_re ":::"))) (re.+ (re.+ (str.to_re ";;;"))))) (re.+ (re.union (re.+ (re.* (str.to_re "<<<"))) (re.union (re.union (str.to_re "==") (str.to_re ">>")) (re.* (str.to_re "???")))))) (re.+ (re.* (re.union (re.+ (re.* (str.to_re "@@"))) (re.union (re.union (str.to_re "[[[") (str.to_re "\\")) (re.* (str.to_re "]"))))))))) (re.* (re.union (re.* (re.union (re.union (re.+ (re.+ (re.* (str.to_re "^^")))) (re.* (re.union (re.+ (str.to_re "___")) (re.+ (str.to_re "`"))))) (re.union (re.union (re.union (re.+ (str.to_re "{{{")) (re.union (str.to_re "||") (str.to_re "}"))) (re.union (re.+ (str.to_re "~~~")) (re.+ (str.to_re "00")))) (re.* (re.* (re.union (str.to_re "11") (str.to_re "22"))))))) (re.+ (re.union (re.+ (re.+ (re.union (re.* (str.to_re "33")) (re.union (str.to_re "44") (str.to_re "5"))))) (re.union (re.+ (re.union (re.union (str.to_re "66") (str.to_re "7")) (re.union (str.to_re "8") (str.to_re "99")))) (re.* (re.+ (re.* (str.to_re "a"))))))))))))) (re.* (re.+ (re.+ (re.* (re.+ (re.+ (re.* (re.+ (re.* (re.+ (re.+ (re.* (str.to_re "b")))))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
