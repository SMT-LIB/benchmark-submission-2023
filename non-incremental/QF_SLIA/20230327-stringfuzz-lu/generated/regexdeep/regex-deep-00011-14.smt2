(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (re.union (re.* (re.* (re.union (re.* (re.union (re.union (re.union (re.union (str.to_re "00") (str.to_re "11")) (re.+ (str.to_re "2"))) (re.union (re.union (str.to_re "3") (str.to_re "4")) (re.+ (str.to_re "5")))) (re.+ (re.+ (re.* (str.to_re "66")))))) (re.+ (re.+ (re.union (re.+ (re.+ (str.to_re "7"))) (re.+ (re.+ (str.to_re "88"))))))))) (re.* (re.union (re.+ (re.+ (re.union (re.+ (re.* (re.* (str.to_re "999")))) (re.+ (re.+ (re.union (str.to_re "aaa") (str.to_re "bbb"))))))) (re.union (re.* (re.* (re.+ (re.* (re.union (str.to_re "cc") (str.to_re "ddd")))))) (re.union (re.* (re.union (re.+ (re.union (str.to_re "eee") (str.to_re "f"))) (re.union (re.+ (str.to_re "g")) (re.* (str.to_re "hhh"))))) (re.union (re.+ (re.union (re.union (str.to_re "ii") (str.to_re "jjj")) (re.union (str.to_re "k") (str.to_re "lll")))) (re.+ (re.union (re.union (str.to_re "mm") (str.to_re "n")) (re.+ (str.to_re "oo")))))))))))) (re.* (re.union (re.* (re.union (re.+ (re.* (re.union (re.union (re.union (re.union (re.* (str.to_re "p")) (re.* (str.to_re "qqq"))) (re.* (re.+ (str.to_re "rr")))) (re.+ (re.+ (re.* (str.to_re "ss"))))) (re.union (re.+ (re.union (re.+ (str.to_re "t")) (re.+ (str.to_re "uuu")))) (re.union (re.* (re.union (str.to_re "v") (str.to_re "www"))) (re.* (re.* (str.to_re "xxx")))))))) (re.* (re.* (re.+ (re.* (re.+ (re.* (re.union (str.to_re "yy") (str.to_re "zzz")))))))))) (re.+ (re.* (re.* (re.+ (re.+ (re.* (re.+ (re.union (re.+ (str.to_re "AAA")) (re.* (str.to_re "BB")))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)
(exit)
