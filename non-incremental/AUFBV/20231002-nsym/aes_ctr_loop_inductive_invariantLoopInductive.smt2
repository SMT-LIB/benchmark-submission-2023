(set-logic AUFBV)
(set-info :smt-lib-version 2.6)
(set-info :source |Generated by: Shilpi Goel, Nathan Wetzler, Yan Peng, Jim Grundy
Generated on: 2023-10-2
Generator: NSym 
Application: aes_ctr_loop_inductive_invariantLoopInductive
Target solver: Z3, CVC5, Bitwuzla
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)

(declare-const __s0_undefhavoc_Z_flg_666 (_ BitVec 1))
(declare-const __s0_undefhavoc_gpr1_674 (_ BitVec 64))
(declare-const __s0_undefhavoc_gpr28_671 (_ BitVec 64))
(declare-const __s0_undefhavoc_gpr29_670 (_ BitVec 64))
(declare-const __s0_undefhavoc_gpr2_673 (_ BitVec 64))
(declare-const __s0_undefhavoc_gpr8_672 (_ BitVec 64))
(declare-const __s0_undefhavoc_sfp0_128_669 (_ BitVec 128))
(declare-const counter (_ BitVec 128))
(declare-const genvar_829 (_ BitVec 64))
(declare-const genvar_830 (_ BitVec 64))
(declare-const genvar_831 (_ BitVec 64))
(declare-const genvar_832 (_ BitVec 1408))
(declare-const genvar_833 (_ BitVec 1280))
(declare-const genvar_834 (_ BitVec 1152))
(declare-const genvar_835 (_ BitVec 1024))
(declare-const genvar_836 (_ BitVec 896))
(declare-const genvar_837 (_ BitVec 768))
(declare-const genvar_838 (_ BitVec 640))
(declare-const genvar_839 (_ BitVec 512))
(declare-const genvar_840 (_ BitVec 384))
(declare-const genvar_841 (_ BitVec 256))
(declare-const genvar_842 (_ BitVec 65))
(declare-const genvar_843 (_ BitVec 64))
(declare-const genvar_844 (_ BitVec 64))
(declare-const genvar_845 (_ BitVec 128))
(declare-const genvar_846 (_ BitVec 128))
(declare-const genvar_847 (_ BitVec 128))
(declare-const genvar_848 (_ BitVec 128))
(declare-const genvar_849 (_ BitVec 64))
(declare-const genvar_850 Bool)
(declare-const genvar_851 (_ BitVec 64))
(declare-const genvar_852 (_ BitVec 64))
(declare-const genvar_853 (_ BitVec 128))
(declare-const genvar_854 (_ BitVec 128))
(declare-const havoc_ciphertext (Array (_ BitVec 64) (_ BitVec 128)))
(declare-const havoc_counter (Array (_ BitVec 64) (_ BitVec 128)))
(declare-const num_blocks (_ BitVec 64))
(declare-const plaintext (Array (_ BitVec 64) (_ BitVec 128)))
(declare-const round_key_00 (_ BitVec 128))
(declare-const round_key_01 (_ BitVec 128))
(declare-const round_key_02 (_ BitVec 128))
(declare-const round_key_03 (_ BitVec 128))
(declare-const round_key_04 (_ BitVec 128))
(declare-const round_key_05 (_ BitVec 128))
(declare-const round_key_06 (_ BitVec 128))
(declare-const round_key_07 (_ BitVec 128))
(declare-const round_key_08 (_ BitVec 128))
(declare-const round_key_09 (_ BitVec 128))
(declare-const round_key_10 (_ BitVec 128))
(define-fun
 arm.inst_sfp_adv_simd_two_reg_misc.rev64
 ((op (_ BitVec 128)))
 (_ BitVec 128)
 (let
  ((genvar_855 ((_ extract 127 64) op)))
  (let
   ((genvar_856 (bvlshr genvar_855 (_ bv8 64))))
   (let
    ((genvar_857 (bvlshr ((_ extract 55 0) genvar_856) (_ bv8 56))))
    (let
     ((genvar_858 (bvlshr ((_ extract 47 0) genvar_857) (_ bv8 48))))
     (let
      ((genvar_859 (bvlshr ((_ extract 39 0) genvar_858) (_ bv8 40))))
      (let
       ((genvar_860 (bvlshr ((_ extract 31 0) genvar_859) (_ bv8 32))))
       (let
        ((genvar_861 ((_ extract 23 0) (_ bv8 32))))
        (let
         ((genvar_862 (bvlshr ((_ extract 23 0) genvar_860) genvar_861)))
         (let
          ((genvar_863 ((_ extract 15 0) (_ bv8 32))))
          (let
           ((genvar_864 ((_ extract 63 0) op)))
           (let
            ((genvar_865 (bvlshr genvar_864 (_ bv8 64))))
            (let
             ((genvar_866 (bvlshr ((_ extract 55 0) genvar_865) (_ bv8 56))))
             (let
              ((genvar_867 (bvlshr ((_ extract 47 0) genvar_866) (_ bv8 48))))
              (let
               ((genvar_868 (bvlshr ((_ extract 39 0) genvar_867) (_ bv8 40))))
               (let
                ((genvar_869 (bvlshr ((_ extract 31 0) genvar_868) (_ bv8 32))))
                (let
                 ((genvar_870 (bvlshr
                               ((_ extract 23 0) genvar_869)
                               genvar_861)))
                 (concat
                  (concat
                   ((_ extract 7 0) genvar_855)
                   (concat
                    ((_ extract 7 0) genvar_856)
                    (concat
                     ((_ extract 7 0) genvar_857)
                     (concat
                      ((_ extract 7 0) genvar_858)
                      (concat
                       ((_ extract 7 0) genvar_859)
                       (concat
                        ((_ extract 7 0) genvar_860)
                        (concat
                         ((_ extract 7 0) genvar_862)
                         ((_ extract 7 0)
                          (bvlshr ((_ extract 15 0) genvar_862) genvar_863)))))))))
                  (concat
                   ((_ extract 7 0) genvar_864)
                   (concat
                    ((_ extract 7 0) genvar_865)
                    (concat
                     ((_ extract 7 0) genvar_866)
                     (concat
                      ((_ extract 7 0) genvar_867)
                      (concat
                       ((_ extract 7 0) genvar_868)
                       (concat
                        ((_ extract 7 0) genvar_869)
                        (concat
                         ((_ extract 7 0) genvar_870)
                         ((_ extract 7 0)
                          (bvlshr ((_ extract 15 0) genvar_870) genvar_863)))))))))))))))))))))))))))
(declare-fun
 arm.inst_sfp_crypto_aes.aes_shift_rows
 ((_ BitVec 128))
 (_ BitVec 128))
(declare-fun
 arm.inst_sfp_crypto_aes.aes_sub_bytes
 ((_ BitVec 128))
 (_ BitVec 128))
(declare-fun
 arm.inst_sfp_crypto_aes.aes_mix_columns
 ((_ BitVec 128))
 (_ BitVec 128))
(define-fun
 specs.common.bv_revbytes128
 ((op (_ BitVec 128)))
 (_ BitVec 128)
 (bvor
  (bvshl
   (bvor
    (bvshl
     (bvor
      (bvshl
       (bvor
        (bvshl
         (bvor
          (bvshl
           (bvor
            (bvshl
             (bvor
              (bvshl
               (bvor
                (bvshl
                 (bvor
                  (bvshl
                   (bvor
                    (bvshl
                     (bvor
                      (bvshl
                       (bvor
                        (bvshl
                         (bvor
                          (bvshl
                           (bvor
                            (bvshl
                             (bvor
                              (bvshl
                               (bvor
                                (_ bv0 128)
                                ((_ zero_extend 120) ((_ extract 7 0) op)))
                               (_ bv8 128))
                              ((_ zero_extend 120) ((_ extract 15 8) op)))
                             (_ bv8 128))
                            ((_ zero_extend 120) ((_ extract 23 16) op)))
                           (_ bv8 128))
                          ((_ zero_extend 120) ((_ extract 31 24) op)))
                         (_ bv8 128))
                        ((_ zero_extend 120) ((_ extract 39 32) op)))
                       (_ bv8 128))
                      ((_ zero_extend 120) ((_ extract 47 40) op)))
                     (_ bv8 128))
                    ((_ zero_extend 120) ((_ extract 55 48) op)))
                   (_ bv8 128))
                  ((_ zero_extend 120) ((_ extract 63 56) op)))
                 (_ bv8 128))
                ((_ zero_extend 120) ((_ extract 71 64) op)))
               (_ bv8 128))
              ((_ zero_extend 120) ((_ extract 79 72) op)))
             (_ bv8 128))
            ((_ zero_extend 120) ((_ extract 87 80) op)))
           (_ bv8 128))
          ((_ zero_extend 120) ((_ extract 95 88) op)))
         (_ bv8 128))
        ((_ zero_extend 120) ((_ extract 103 96) op)))
       (_ bv8 128))
      ((_ zero_extend 120) ((_ extract 111 104) op)))
     (_ bv8 128))
    ((_ zero_extend 120) ((_ extract 119 112) op)))
   (_ bv8 128))
  ((_ zero_extend 120) ((_ extract 127 120) op))))
(define-fun
 AES_BLK_SPEC
 ((round_key_00 (_ BitVec 128))
  (round_key_01 (_ BitVec 128))
  (round_key_02 (_ BitVec 128))
  (round_key_03 (_ BitVec 128))
  (round_key_04 (_ BitVec 128))
  (round_key_05 (_ BitVec 128))
  (round_key_06 (_ BitVec 128))
  (round_key_07 (_ BitVec 128))
  (round_key_08 (_ BitVec 128))
  (round_key_09 (_ BitVec 128))
  (round_key_10 (_ BitVec 128))
  (pblk (_ BitVec 128))
  (ctr (_ BitVec 128)))
 (_ BitVec 128)
 (bvxor
  (bvxor
   round_key_10
   (arm.inst_sfp_crypto_aes.aes_sub_bytes
    (arm.inst_sfp_crypto_aes.aes_shift_rows
     (bvxor
      round_key_09
      (arm.inst_sfp_crypto_aes.aes_mix_columns
       (arm.inst_sfp_crypto_aes.aes_sub_bytes
        (arm.inst_sfp_crypto_aes.aes_shift_rows
         (bvxor
          round_key_08
          (arm.inst_sfp_crypto_aes.aes_mix_columns
           (arm.inst_sfp_crypto_aes.aes_sub_bytes
            (arm.inst_sfp_crypto_aes.aes_shift_rows
             (bvxor
              round_key_07
              (arm.inst_sfp_crypto_aes.aes_mix_columns
               (arm.inst_sfp_crypto_aes.aes_sub_bytes
                (arm.inst_sfp_crypto_aes.aes_shift_rows
                 (bvxor
                  round_key_06
                  (arm.inst_sfp_crypto_aes.aes_mix_columns
                   (arm.inst_sfp_crypto_aes.aes_sub_bytes
                    (arm.inst_sfp_crypto_aes.aes_shift_rows
                     (bvxor
                      round_key_05
                      (arm.inst_sfp_crypto_aes.aes_mix_columns
                       (arm.inst_sfp_crypto_aes.aes_sub_bytes
                        (arm.inst_sfp_crypto_aes.aes_shift_rows
                         (bvxor
                          round_key_04
                          (arm.inst_sfp_crypto_aes.aes_mix_columns
                           (arm.inst_sfp_crypto_aes.aes_sub_bytes
                            (arm.inst_sfp_crypto_aes.aes_shift_rows
                             (bvxor
                              round_key_03
                              (arm.inst_sfp_crypto_aes.aes_mix_columns
                               (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                (arm.inst_sfp_crypto_aes.aes_shift_rows
                                 (bvxor
                                  round_key_02
                                  (arm.inst_sfp_crypto_aes.aes_mix_columns
                                   (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                    (arm.inst_sfp_crypto_aes.aes_shift_rows
                                     (bvxor
                                      round_key_01
                                      (arm.inst_sfp_crypto_aes.aes_mix_columns
                                       (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                        (arm.inst_sfp_crypto_aes.aes_shift_rows
                                         (bvxor round_key_00 ctr))))))))))))))))))))))))))))))))))))))))
  pblk))
(define-fun
 AES_CTR_BLK_IMPL_1
 ((havoc_ciphertext (Array (_ BitVec 64) (_ BitVec 128)))
  (QBoundVari (_ BitVec 64)))
 (_ BitVec 128)
 (select havoc_ciphertext (bvlshr (bvshl QBoundVari (_ bv4 64)) (_ bv4 64))))
(define-fun
 AES_CTR_BLK_IMPL_3
 ((havoc_ciphertext (Array (_ BitVec 64) (_ BitVec 128)))
  (plaintext (Array (_ BitVec 64) (_ BitVec 128)))
  (QBoundVari (_ BitVec 64))
  (__s0_undefhavoc_gpr1_674 (_ BitVec 64))
  (__s0_undefhavoc_gpr2_673 (_ BitVec 64))
  (__s0_undefhavoc_sfp0_128_669 (_ BitVec 128))
  (round_key_00 (_ BitVec 128))
  (round_key_01 (_ BitVec 128))
  (round_key_02 (_ BitVec 128))
  (round_key_03 (_ BitVec 128))
  (round_key_04 (_ BitVec 128))
  (round_key_05 (_ BitVec 128))
  (round_key_06 (_ BitVec 128))
  (round_key_07 (_ BitVec 128))
  (round_key_08 (_ BitVec 128))
  (round_key_09 (_ BitVec 128))
  (round_key_10 (_ BitVec 128)))
 (_ BitVec 128)
 (let
  ((genvar_911 (concat
                (concat
                 (concat
                  (concat
                   (concat
                    (concat
                     (concat
                      (concat
                       (concat
                        (concat round_key_10 round_key_09)
                        round_key_08)
                       round_key_07)
                      round_key_06)
                     round_key_05)
                    round_key_04)
                   round_key_03)
                  round_key_02)
                 round_key_01)
                round_key_00)))
  (let
   ((genvar_912 ((_ extract 1407 128) genvar_911)))
   (let
    ((genvar_913 ((_ extract 1279 128) genvar_912)))
    (let
     ((genvar_914 ((_ extract 1151 128) genvar_913)))
     (let
      ((genvar_915 ((_ extract 1023 128) genvar_914)))
      (let
       ((genvar_916 ((_ extract 895 128) genvar_915)))
       (let
        ((genvar_917 ((_ extract 767 128) genvar_916)))
        (let
         ((genvar_918 ((_ extract 639 128) genvar_917)))
         (let
          ((genvar_919 ((_ extract 511 128) genvar_918)))
          (let
           ((genvar_920 ((_ extract 383 128) genvar_919)))
           (select
            (store
             havoc_ciphertext
             (bvlshr __s0_undefhavoc_gpr2_673 (_ bv4 64))
             ((_ extract 127 0)
              (bvxor
               (select plaintext (bvlshr __s0_undefhavoc_gpr1_674 (_ bv4 64)))
               (bvand
                (bvxor
                 (_ bv0 128)
                 (bvxor
                  ((_ extract 127 0) ((_ extract 255 128) genvar_920))
                  (bvand
                   (bvxor
                    (_ bv0 128)
                    (arm.inst_sfp_crypto_aes.aes_sub_bytes
                     (arm.inst_sfp_crypto_aes.aes_shift_rows
                      (bvxor
                       (arm.inst_sfp_crypto_aes.aes_mix_columns
                        (arm.inst_sfp_crypto_aes.aes_sub_bytes
                         (arm.inst_sfp_crypto_aes.aes_shift_rows
                          (bvxor
                           (arm.inst_sfp_crypto_aes.aes_mix_columns
                            (arm.inst_sfp_crypto_aes.aes_sub_bytes
                             (arm.inst_sfp_crypto_aes.aes_shift_rows
                              (bvxor
                               (arm.inst_sfp_crypto_aes.aes_mix_columns
                                (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                 (arm.inst_sfp_crypto_aes.aes_shift_rows
                                  (bvxor
                                   (arm.inst_sfp_crypto_aes.aes_mix_columns
                                    (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                     (arm.inst_sfp_crypto_aes.aes_shift_rows
                                      (bvxor
                                       (arm.inst_sfp_crypto_aes.aes_mix_columns
                                        (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                         (arm.inst_sfp_crypto_aes.aes_shift_rows
                                          (bvxor
                                           (arm.inst_sfp_crypto_aes.aes_mix_columns
                                            (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                             (arm.inst_sfp_crypto_aes.aes_shift_rows
                                              (bvxor
                                               (arm.inst_sfp_crypto_aes.aes_mix_columns
                                                (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                                 (arm.inst_sfp_crypto_aes.aes_shift_rows
                                                  (bvxor
                                                   (arm.inst_sfp_crypto_aes.aes_mix_columns
                                                    (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                                     (arm.inst_sfp_crypto_aes.aes_shift_rows
                                                      (bvxor
                                                       (arm.inst_sfp_crypto_aes.aes_mix_columns
                                                        (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                                         (arm.inst_sfp_crypto_aes.aes_shift_rows
                                                          (bvxor
                                                           __s0_undefhavoc_sfp0_128_669
                                                           ((_ extract 127 0)
                                                            genvar_911)))))
                                                       ((_ extract 127 0)
                                                        genvar_912)))))
                                                   ((_ extract 127 0)
                                                    genvar_913)))))
                                               ((_ extract 127 0) genvar_914)))))
                                           ((_ extract 127 0) genvar_915)))))
                                       ((_ extract 127 0) genvar_916)))))
                                   ((_ extract 127 0) genvar_917)))))
                               ((_ extract 127 0) genvar_918)))))
                           ((_ extract 127 0) genvar_919)))))
                       ((_ extract 127 0) genvar_920)))))
                   (_ bv340282366920938463463374607431768211455 128))))
                (_ bv340282366920938463463374607431768211455 128)))))
            (bvlshr (bvshl QBoundVari (_ bv4 64)) (_ bv4 64))))))))))))))
(assert
 (not
  (and
   (bvult genvar_829 num_blocks)
   (=
    (=
     (ite
      (=
       ((_ extract 63 0)
        (bvadd
         (bvadd ((_ zero_extend 1) genvar_829) (_ bv18446744073709551615 65))
         (_ bv1 65)))
       (_ bv0 64))
      (_ bv1 1)
      (_ bv0 1))
     (_ bv1 1))
    (= genvar_829 (_ bv0 64)))
   (= (bvadd __s0_undefhavoc_gpr2_673 (_ bv16 64)) genvar_831)
   (= (bvadd __s0_undefhavoc_gpr1_674 (_ bv16 64)) genvar_831)
   (= genvar_846 genvar_845)
   (=
    genvar_846
    (specs.common.bv_revbytes128
     (bvadd genvar_847 ((_ zero_extend 64) genvar_830))))
   (= genvar_844 ((_ extract 63 0) genvar_848))
   (= genvar_843 ((_ extract 127 64) genvar_848))
   (forall 
    ((QBoundVari (_ BitVec 64)))
    (=>
     (bvult
      QBoundVari
      (bvsub
       num_blocks
       ((_ extract 63 0)
        (bvadd
         (bvadd
          ((_ zero_extend 1) __s0_undefhavoc_gpr8_672)
          (_ bv18446744073709551614 65))
         (_ bv1 65)))))
     (=
      (AES_CTR_BLK_IMPL_3
       havoc_ciphertext
       plaintext
       QBoundVari
       __s0_undefhavoc_gpr1_674
       __s0_undefhavoc_gpr2_673
       __s0_undefhavoc_sfp0_128_669
       round_key_00
       round_key_01
       round_key_02
       round_key_03
       round_key_04
       round_key_05
       round_key_06
       round_key_07
       round_key_08
       round_key_09
       round_key_10)
      (AES_BLK_SPEC
       round_key_00
       round_key_01
       round_key_02
       round_key_03
       round_key_04
       round_key_05
       round_key_06
       round_key_07
       round_key_08
       round_key_09
       round_key_10
       (select plaintext (bvlshr (bvshl QBoundVari (_ bv4 64)) (_ bv4 64)))
       (specs.common.bv_revbytes128
        (bvadd
         (specs.common.bv_revbytes128 counter)
         ((_ zero_extend 64) QBoundVari))))))))))
(assert true)
(assert
 (and
  (bvult __s0_undefhavoc_gpr2_673 genvar_849)
  (bvult (bvadd __s0_undefhavoc_gpr2_673 (_ bv15 64)) genvar_849)
  (= (bvand __s0_undefhavoc_gpr2_673 (_ bv15 64)) (_ bv0 64))))
(assert
 (and
  (bvult __s0_undefhavoc_gpr1_674 genvar_849)
  (bvult (bvadd __s0_undefhavoc_gpr1_674 (_ bv15 64)) genvar_849)
  (= (bvand __s0_undefhavoc_gpr1_674 (_ bv15 64)) (_ bv0 64))))
(assert (not genvar_850))
(assert
 (and
  (bvult __s0_undefhavoc_gpr8_672 num_blocks)
  (= genvar_850 (= __s0_undefhavoc_gpr8_672 (_ bv0 64)))
  (= __s0_undefhavoc_gpr2_673 genvar_852)
  (= __s0_undefhavoc_gpr1_674 genvar_852)
  (= genvar_853 __s0_undefhavoc_sfp0_128_669)
  (=
   genvar_853
   (specs.common.bv_revbytes128
    (bvadd genvar_847 ((_ zero_extend 64) genvar_851))))
  (= __s0_undefhavoc_gpr28_671 ((_ extract 63 0) genvar_854))
  (= __s0_undefhavoc_gpr29_670 ((_ extract 127 64) genvar_854))
  (forall 
   ((QBoundVari (_ BitVec 64)))
   (=>
    (bvult QBoundVari (bvsub num_blocks __s0_undefhavoc_gpr8_672))
    (=
     (AES_CTR_BLK_IMPL_1 havoc_ciphertext QBoundVari)
     (AES_BLK_SPEC
      round_key_00
      round_key_01
      round_key_02
      round_key_03
      round_key_04
      round_key_05
      round_key_06
      round_key_07
      round_key_08
      round_key_09
      round_key_10
      (select plaintext (bvlshr (bvshl QBoundVari (_ bv4 64)) (_ bv4 64)))
      (specs.common.bv_revbytes128
       (bvadd
        (specs.common.bv_revbytes128 counter)
        ((_ zero_extend 64) QBoundVari)))))))))
(assert
 (and
  (bvult (_ bv0 64) num_blocks)
  (= ((_ extract 63 60) num_blocks) (_ bv0 4))
  true))
(assert
 (=
  genvar_829
  ((_ extract 63 0)
   (bvadd
    (bvadd
     ((_ zero_extend 1) __s0_undefhavoc_gpr8_672)
     (_ bv18446744073709551614 65))
    (_ bv1 65)))))
(assert (= genvar_830 (bvsub num_blocks genvar_829)))
(assert (= genvar_831 (bvshl genvar_830 (_ bv4 64))))
(assert
 (=
  genvar_832
  (concat
   (concat
    (concat
     (concat
      (concat
       (concat
        (concat
         (concat
          (concat (concat round_key_10 round_key_09) round_key_08)
          round_key_07)
         round_key_06)
        round_key_05)
       round_key_04)
      round_key_03)
     round_key_02)
    round_key_01)
   round_key_00)))
(assert (= genvar_833 ((_ extract 1407 128) genvar_832)))
(assert (= genvar_834 ((_ extract 1279 128) genvar_833)))
(assert (= genvar_835 ((_ extract 1151 128) genvar_834)))
(assert (= genvar_836 ((_ extract 1023 128) genvar_835)))
(assert (= genvar_837 ((_ extract 895 128) genvar_836)))
(assert (= genvar_838 ((_ extract 767 128) genvar_837)))
(assert (= genvar_839 ((_ extract 639 128) genvar_838)))
(assert (= genvar_840 ((_ extract 511 128) genvar_839)))
(assert (= genvar_841 ((_ extract 383 128) genvar_840)))
(assert
 (=
  genvar_842
  (bvadd
   (bvadd ((_ zero_extend 1) __s0_undefhavoc_gpr29_670) (_ bv1 65))
   (_ bv0 65))))
(assert (= genvar_843 ((_ extract 63 0) genvar_842)))
(assert
 (=
  genvar_844
  ((_ extract 63 0)
   (bvadd
    (bvadd ((_ zero_extend 1) __s0_undefhavoc_gpr28_671) (_ bv0 65))
    ((_ zero_extend 64)
     (ite (= ((_ zero_extend 1) genvar_843) genvar_842) (_ bv0 1) (_ bv1 1)))))))
(assert
 (=
  genvar_845
  (arm.inst_sfp_adv_simd_two_reg_misc.rev64
   (bvor
    (bvand
     (bvor
      (bvand
       (bvxor
        ((_ extract 127 0) ((_ extract 255 128) genvar_841))
        (bvand
         (bvxor
          (_ bv0 128)
          (arm.inst_sfp_crypto_aes.aes_sub_bytes
           (arm.inst_sfp_crypto_aes.aes_shift_rows
            (bvxor
             (arm.inst_sfp_crypto_aes.aes_mix_columns
              (arm.inst_sfp_crypto_aes.aes_sub_bytes
               (arm.inst_sfp_crypto_aes.aes_shift_rows
                (bvxor
                 (arm.inst_sfp_crypto_aes.aes_mix_columns
                  (arm.inst_sfp_crypto_aes.aes_sub_bytes
                   (arm.inst_sfp_crypto_aes.aes_shift_rows
                    (bvxor
                     (arm.inst_sfp_crypto_aes.aes_mix_columns
                      (arm.inst_sfp_crypto_aes.aes_sub_bytes
                       (arm.inst_sfp_crypto_aes.aes_shift_rows
                        (bvxor
                         (arm.inst_sfp_crypto_aes.aes_mix_columns
                          (arm.inst_sfp_crypto_aes.aes_sub_bytes
                           (arm.inst_sfp_crypto_aes.aes_shift_rows
                            (bvxor
                             (arm.inst_sfp_crypto_aes.aes_mix_columns
                              (arm.inst_sfp_crypto_aes.aes_sub_bytes
                               (arm.inst_sfp_crypto_aes.aes_shift_rows
                                (bvxor
                                 (arm.inst_sfp_crypto_aes.aes_mix_columns
                                  (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                   (arm.inst_sfp_crypto_aes.aes_shift_rows
                                    (bvxor
                                     (arm.inst_sfp_crypto_aes.aes_mix_columns
                                      (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                       (arm.inst_sfp_crypto_aes.aes_shift_rows
                                        (bvxor
                                         (arm.inst_sfp_crypto_aes.aes_mix_columns
                                          (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                           (arm.inst_sfp_crypto_aes.aes_shift_rows
                                            (bvxor
                                             (arm.inst_sfp_crypto_aes.aes_mix_columns
                                              (arm.inst_sfp_crypto_aes.aes_sub_bytes
                                               (arm.inst_sfp_crypto_aes.aes_shift_rows
                                                (bvxor
                                                 __s0_undefhavoc_sfp0_128_669
                                                 ((_ extract 127 0)
                                                  genvar_832)))))
                                             ((_ extract 127 0) genvar_833)))))
                                         ((_ extract 127 0) genvar_834)))))
                                     ((_ extract 127 0) genvar_835)))))
                                 ((_ extract 127 0) genvar_836)))))
                             ((_ extract 127 0) genvar_837)))))
                         ((_ extract 127 0) genvar_838)))))
                     ((_ extract 127 0) genvar_839)))))
                 ((_ extract 127 0) genvar_840)))))
             ((_ extract 127 0) genvar_841)))))
         (_ bv340282366920938463463374607431768211455 128)))
       (_ bv340282366920938463444927863358058659840 128))
      (bvshl ((_ zero_extend 64) genvar_844) (_ bv0 128)))
     (_ bv18446744073709551615 128))
    (bvshl ((_ zero_extend 64) genvar_843) (_ bv64 128))))))
(assert (= genvar_846 ((_ extract 127 0) genvar_845)))
(assert (= genvar_847 (specs.common.bv_revbytes128 counter)))
(assert (= genvar_848 (arm.inst_sfp_adv_simd_two_reg_misc.rev64 genvar_846)))
(assert (= genvar_849 (bvshl num_blocks (_ bv4 64))))
(assert (= genvar_850 (= __s0_undefhavoc_Z_flg_666 (_ bv1 1))))
(assert (= genvar_851 (bvsub num_blocks __s0_undefhavoc_gpr8_672)))
(assert (= genvar_852 (bvshl genvar_851 (_ bv4 64))))
(assert (= genvar_853 (select havoc_counter (_ bv0 64))))
(assert (= genvar_854 (arm.inst_sfp_adv_simd_two_reg_misc.rev64 genvar_853)))
(check-sat)
(exit)
